<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>窗外临街</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://peihao.space/"/>
  <updated>2016-04-23T13:25:47.796Z</updated>
  <id>http://peihao.space/</id>
  
  <author>
    <name>培豪</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DP介绍-最长递增子序列</title>
    <link href="http://peihao.space/2016/04/23/DP-intro-001/"/>
    <id>http://peihao.space/2016/04/23/DP-intro-001/</id>
    <published>2016-04-23T09:17:22.000Z</published>
    <updated>2016-04-23T13:25:47.796Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;最长递增子序列系列是DP动态规划中简单、经典的入门题目。类似最长非递减子序列、导弹拦截问题、最长公共子序列问题等等。这在我们逐渐了解、认知动态规划的过程中可以给我们提高很大的帮助。&lt;/p&gt;
&lt;p&gt;设有由n个不相同的整数组成的数列，记为:a[0]、a[1]、……、a[n-1]且a(i)&amp;lt;&amp;gt;a(j) (i&amp;lt;&amp;gt;j)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如&lt;code&gt;{2,3,4,5,6,343,5,36,45,64,56,564}&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;若存在i1&amp;lt;i2&amp;lt;i3&amp;lt; … &amp;lt; ie 且有a[i1]&amp;lt;a[i2]&amp;lt; … &amp;lt;a[ie]则称为长度为e的递增子序列序列。如上例中3，18，23，24就是一个长度为4的递增序列，同时也有3，7，10，12，16，24长度为6的递增序列&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;问题的引出与思路&quot;&gt;问题的引出与思路&lt;/h1&gt;&lt;p&gt;要解决这个问题，按我们正常人的习惯性思维没我们往往会通过在下标从小到大逐渐增加，一步步的计算前n个数值（子数组，子序列最后的一个数值必须是a[n-1]）中的最长递增子序列，所以前n数值最长子序列未必会比前n-1最长子序列结果要大，这是需要我们注意的。&lt;/p&gt;
&lt;p&gt;换句话说。我们需要在前n-1个数值中循环找出比第n个数值小、且成递增规律的序列。假如当前的数值比上个子序列的最后一个数值都要大，那么就可以直接在上个子问题结果的基础上加1。当然，这不是要我们局限于紧邻的上个子问题，而是前面所有子问题都要对比，然后将这些结果再取最大值。实际上，值已经引出了状态转移方程。&lt;/p&gt;
&lt;p&gt;显然，这些子问题相互重叠、每次的结果都会影响下一个子数组结果，但是前面子数组的结果不会在改变。&lt;/p&gt;
&lt;p&gt;现在想想上篇文章&lt;a href=&quot;http://peihao.space/2016/04/22/DP-intro/&quot;&gt;DP动态规划简介&lt;/a&gt;中提出的DP动态规划的三大条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最优化原理（最优子结构性质） &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最优化原理可这样阐述：一个最优化策略具有这样的性质，不论过去状态和决策如何，对前面的决策所形成的状态而言，余下的诸决策必须构成最优策略。简而言之，一个最优化策略的子策略总是最优的。一个问题满足最优化原理又称其具有最优子结构性质。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无后效性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将各阶段按照一定的次序排列好之后，对于某个给定的阶段状态，它以前各阶段的状态无法直接影响它未来的决策，而只能通过当前的这个状态。换句话说，每个状态都是过去历史的一个完整总结。这就是无后向性，又称为无后效性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;子问题的重叠性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;动态规划将原来具有指数级时间复杂度的搜索算法改进成了具有多项式时间复杂度的算法。其中的关键在于解决冗余，这是动态规划算法的根本目的。动态规划实质上是一种以空间换时间的技术，它在实现的过程中，不得不存储产生过程中的各种状态，所以它的空间复杂度要大于其它的算法。&lt;/p&gt;
&lt;p&gt;在这个问题中都得到了完善的支撑，而且这个思想也很适合解决这个系列的问题，高效、简便。&lt;/p&gt;
&lt;h1 id=&quot;解决过程&quot;&gt;解决过程&lt;/h1&gt;&lt;p&gt;我们使用一些列变量记录前n个子序列的结果。再具体的实现中，我们通常使用数组数据结构记录。数组&lt;code&gt;opt[length]&lt;/code&gt;中&lt;code&gt;opt[i]&lt;/code&gt;记录原始数据中前&lt;code&gt;i+1&lt;/code&gt;个数值（子数组）的最长递增子序列长度数值。&lt;/p&gt;
&lt;p&gt;就以前面&lt;code&gt;seq={2,3,4,5,6,343,5,36,45,64,56,564}&lt;/code&gt;提过的数据来看：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;opt[0]:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;opt[0]代表的是原始数据中前1个数值的最长递增长度值，只有一个数值，显然seq[0]=2就是目前这个子问题的path，opt[0]=1。用上篇文章提到的术语，当前子问题的状态就是&lt;code&gt;opt[0]=1&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;opt[1]:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;opt[1]代表的是原始数据中前2个数值的最长递增长度值，&lt;code&gt;seq[1]&amp;gt;seq[0]&lt;/code&gt;，所以根据前面托出的状态转移方程，可以得出&lt;code&gt;opt[1]=opt[0]+1=2&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;opt[2]:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;opt[2]代表的是原始数据中前3个数值的最长递增长度值，&lt;code&gt;seq[2]&amp;gt;seq[1]&lt;/code&gt;，由于前面序列的连续递增，所以根据前面托出的状态转移方程，可以得出&lt;code&gt;opt[2]=opt[1]+1=3&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;opt[3]:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;opt[3]代表的是原始数据中前4个数值的最长递增长度值，&lt;code&gt;seq[3]&amp;gt;seq[2]&lt;/code&gt;，由于前面序列的连续递增，所以根据前面托出的状态转移方程，可以得出&lt;code&gt;opt[3]=opt[2]+1=4&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;opt[4]:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;opt[4]代表的是原始数据中前5个数值的最长递增长度值，&lt;code&gt;seq[4]&amp;gt;seq[3]&lt;/code&gt;，由于前面序列的连续递增，所以根据前面托出的状态转移方程，可以得出&lt;code&gt;opt[4]=opt[3]+1=5&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;opt[5]:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;opt[5]代表的是原始数据中前6个数值的最长递增长度值，&lt;code&gt;seq[5]&amp;gt;seq[4]&lt;/code&gt;，由于前面序列的连续递增，所以根据前面托出的状态转移方程，可以得出&lt;code&gt;opt[5]=opt[4]+1=6&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;opt[6]:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;opt[6]代表的是原始数据中前7个数值的最长递增长度值，&lt;code&gt;seq[6]&amp;lt;seq[5]&lt;/code&gt;，突如其来的变化让我们突然没了思绪。跳过seq[5]怎么样？&lt;code&gt;seq[6]&amp;lt;seq[4]&lt;/code&gt;，不行，再跳过直接到&lt;code&gt;seq[2]&lt;/code&gt;，现在因为&lt;code&gt;seq[6]&amp;gt;seq[2]&lt;/code&gt;，由于前面序列的连续递增，根据前面托出的状态转移方程，可以得出&lt;code&gt;opt[6]=opt[2]+1=4&lt;/code&gt;.这些逻辑很容易理解。但是如果前面的数据源并不是连续递增的，我们还是应该老老实实的遍历、比照大小得出结果。&lt;/p&gt;
&lt;h1 id=&quot;实现&quot;&gt;实现&lt;/h1&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; seq[] = &amp;#123;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;343&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;564&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length=&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(seq)/&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; opt[length]=&amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; path[length]=&amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i, j, maxa = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,maxb=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;length; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        opt[i] = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//计算子序列状态，path是为了还原最长子序列的辅助数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;i&amp;lt;length;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;j&amp;lt;i;j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(seq[i]&amp;gt;seq[j]&amp;amp;&amp;amp;opt[j]+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;gt;opt[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            opt[i]=opt[j]+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            path[i]=j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;length;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(maxa&amp;lt;opt[i])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            maxa=opt[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            maxb=i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//还原递增最长子序列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,i=maxb;i&amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        opt[maxa-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-j]=seq[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i=path[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(++j==maxa)&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;maxa;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;opt[i]&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最长递增子序列系列是DP动态规划中简单、经典的入门题目。类似最长非递减子序列、导弹拦截问题、最长公共子序列问题等等。这在我们逐渐了解、认知动态规划的过程中可以给我们提高很大的帮助。&lt;/p&gt;
&lt;p&gt;设有由n个不相同的整数组成的数列，记为:a[0]、a[1]、……、a[n-1]且a(i)&amp;lt;&amp;gt;a(j) (i&amp;lt;&amp;gt;j)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如&lt;code&gt;{2,3,4,5,6,343,5,36,45,64,56,564}&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;若存在i1&amp;lt;i2&amp;lt;i3&amp;lt; … &amp;lt; ie 且有a[i1]&amp;lt;a[i2]&amp;lt; … &amp;lt;a[ie]则称为长度为e的递增子序列序列。如上例中3，18，23，24就是一个长度为4的递增序列，同时也有3，7，10，12，16，24长度为6的递增序列&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="algorithm" scheme="http://peihao.space/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="http://peihao.space/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>DP介绍</title>
    <link href="http://peihao.space/2016/04/22/DP-intro/"/>
    <id>http://peihao.space/2016/04/22/DP-intro/</id>
    <published>2016-04-22T09:17:22.000Z</published>
    <updated>2016-04-22T15:26:23.471Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;动态规划(dynamic programming)是运筹学的一个分支，是求解决策过程(decision process)最优化的数学方法。20世纪50年代初美国数学家R.E.Bellman等人在研究多阶段决策过程(multistep decision process)的优化问题时，提出了著名的最优化原理(principle of optimality)，把多阶段过程转化为一系列单阶段问题，利用各阶段之间的关系，逐个求解，创立了解决这类过程优化问题的新方法——动态规划&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;动态规划算法通常基于一个递推公式和n个初始状态。当前子问题的解将由前子问题的解推出。使用动态规划来解题只需要多项式时间复杂度。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;基本思想&quot;&gt;基本思想&lt;/h1&gt;&lt;p&gt;动态规划算法通常用于求解具有某种最优性质的问题。在这类问题中，可能会有许多可行解。每一个解都对应于一个值，我们希望找到具有最优值的解。与分治法类似，基本思想也是将待求解问题分解成若干个子问题，先求解子问题，然后从这些子问题的解得到原问题的解。&lt;/p&gt;
&lt;p&gt;与分治法不同的是，适合于用动态规划求解的问题，经分解得到子问题往往不是互相独立的。若用分治法来解这类问题，则分解得到的子问题数目太多，有些子问题被重复计算了很多次。如果我们能够保存已解决的子问题的答案，而在需要时再找出已求得的答案，这样就可以避免大量的重复计算。可以用一个表来记录所有已解的子问题的答案。不管该子问题以后是否被用到，只要它被计算过，就将结果记录下来，方便之后使用。这就是动态规划法的基本思路。&lt;/p&gt;
&lt;p&gt;动态规划程序设计是对解最优化问题的一种途径、一种方法，而不是一种特殊算法。不像搜索或数值计算那样，具有一个标准的数学表达式和明确清晰的解题方法。动态规划程序设计往往是针对一种最优化问题，由于各种问题的性质不同，确定最优解的条件也互不相同，因而动态规划的设计方法对不同的问题，有各具特色的解题方法，而不存在一种万能的动态规划算法，可以解决各类最优化问题。&lt;/p&gt;
&lt;h1 id=&quot;适用条件&quot;&gt;适用条件&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;最优化原理（最优子结构性质） &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最优化原理可这样阐述：一个最优化策略具有这样的性质，不论过去状态和决策如何，对前面的决策所形成的状态而言，余下的诸决策必须构成最优策略。简而言之，一个最优化策略的子策略总是最优的。一个问题满足最优化原理又称其具有最优子结构性质。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无后效性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将各阶段按照一定的次序排列好之后，对于某个给定的阶段状态，它以前各阶段的状态无法直接影响它未来的决策，而只能通过当前的这个状态。换句话说，每个状态都是过去历史的一个完整总结。这就是无后向性，又称为无后效性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;子问题的重叠性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;动态规划将原来具有指数级时间复杂度的搜索算法改进成了具有多项式时间复杂度的算法。其中的关键在于解决冗余，这是动态规划算法的根本目的。动态规划实质上是一种以空间换时间的技术，它在实现的过程中，不得不存储产生过程中的各种状态，所以它的空间复杂度要大于其它的算法。&lt;/p&gt;
&lt;h1 id=&quot;经典问题&quot;&gt;经典问题&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;有面值为1元、3元和5元的硬币若干枚，如何用最少的硬币凑够x元？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们最先想到的算法一般是贪婪算法，每次减去能够减掉的最大数值，最后得出结果。&lt;/p&gt;
&lt;p&gt;当然这在上面问题这种问题上是成立的，因为有面值是基数&lt;em&gt;1元&lt;/em&gt;，这显然不能代表普遍性。当提供的面值是2、3、5时，要求x=11，我们发现直接粗暴地套用贪婪原理并不奏效，&lt;code&gt;x-5-5=1&lt;/code&gt;，此时无法进行下一步，需要提供回溯。&lt;/p&gt;
&lt;p&gt;所以说，在有些时候这类问题可以通过贪婪算法解决，但是大部分情况，我们无法直接获得想要的结果。&lt;/p&gt;
&lt;p&gt;很明显，这个问题可以分解为:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;求解凑齐&lt;code&gt;x-1&lt;/code&gt;数值的硬币枚数+1&lt;/p&gt;
&lt;p&gt;求解凑齐&lt;code&gt;x-3&lt;/code&gt;数值的硬币枚数+1&lt;/p&gt;
&lt;p&gt;求解凑齐&lt;code&gt;x-5&lt;/code&gt;数值的硬币枚数+1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最终的结果就是这三种情况的最小值，而这三种情况又可以继续分别分解。解决的路径跟递归很相似，但是相当容易套圈~&lt;/p&gt;
&lt;p&gt;所以我们开始尝试顺人类认知的从小数值递推到x.&lt;/p&gt;
&lt;p&gt;现在我们在开始看上一部分&lt;strong&gt;DP适用条件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;最优化原理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;无后效性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子问题的重叠性&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一个条件显而易见的符合，第二个条件，当我们求出&lt;code&gt;x-1&lt;/code&gt;、&lt;code&gt;x-3&lt;/code&gt;、&lt;code&gt;x-5&lt;/code&gt;这些结果之后，这些步骤的最终结果只是为了能够得到x的最优解，求解之后跟&lt;code&gt;x+1&lt;/code&gt;、&lt;code&gt;x+3&lt;/code&gt;后续再无瓜葛，这就符合了无后效性。第三个条件，从我开始分解这道问题的时候就能够得出结论。&lt;/p&gt;
&lt;h1 id=&quot;解决&quot;&gt;解决&lt;/h1&gt;&lt;h2 id=&quot;术语介绍&quot;&gt;术语介绍&lt;/h2&gt;&lt;p&gt;按照DP的知识，有下面几个重要的术语：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;阶段：把所给求解问题的过程恰当地分成若干个相互联系的阶段，以便于求解，过程不同，阶段数就可能不同．描述阶段的变量称为阶段变量。在多数情况下，阶段变量是离散的，用k表示。此外，也有阶段变量是连续的情形。如果过程可以在任何时刻作出决策，且在任意两个不同的时刻之间允许有无穷多个决策时，阶段变量就是连续的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;状态：状态表示每个阶段开始面临的自然状况或客观条件，它不以人们的主观意志为转移，也称为不可控因素。在上面的例子中状态就是某阶段的出发位置，它既是该阶段某路的起点，同时又是前一阶段某支路的终点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;决策：一个阶段的状态给定以后，从该状态演变到下一阶段某个状态的一种选择（行动）称为决策。在最优控制中，也称为控制。在许多问题中，决策可以自然而然地表示为一个数或一组数。不同的决策对应着不同的数值。描述决策的变量称决策变量，因状态满足无后效性，故在每个阶段选择决策时只需考虑当前的状态而无须考虑过程的历史。决策变量的范围称为允许决策集合&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;策略：由每个阶段的决策组成的序列称为策略。对于每一个实际的多阶段决策过程，可供选取的策略有一定的范围限制，这个范围称为允许策略集合。允许策略集合中达到最优效果的策略称为最优策略。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;状态转移方程：给定k阶段状态变量x(k)的值后，如果这一阶段的决策变量一经确定，第k+1阶段的状态变量x(k+1)也就完全确定，即x(k+1)的值随x(k)和第k阶段的决策u(k)的值变化而变化，那么可以把这一关系看成(x(k)，u(k))与x(k+1)确定的对应关系，用x(k+1)=Tk(x(k),u(k))表示。这是从k阶段到k+1阶段的状态转移规律，也就是状态转移方程。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;状态&quot;&gt;状态&lt;/h2&gt;&lt;p&gt;上面在Encyclopedia上提到的解读可能比较抽象，状态就是问题分解得到子问题的当前解。&lt;/p&gt;
&lt;p&gt;具体到这个例子，就是当&lt;code&gt;x=[0、1、2、3、4、5、6、7、8、9、...x-1、x]&lt;/code&gt;这些问题的解。&lt;/p&gt;
&lt;p&gt;我们通过基础的数据结构数组S表示子问题解，也就是原来问题的状态。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;s[0]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;求解需要多少枚硬币可以凑齐0元，显然，s[0]=0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;s[1]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要多少枚硬币可以凑齐1元，s[1]=1，需要1枚1元硬币&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;s[2]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要多少枚硬币可以凑齐2元，s[2]=s[2-1]+1=s[1]+1=2。需要上面子问题状态再加上1枚1元硬币&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;s[3]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要多少枚硬币可以凑齐3元，此时的情况就比较复杂了。我们有两种选择，当然是基于原来的状态求出。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;以s[2]的状态基础在加一枚1元硬币。s[3]=s[3-1]+1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以s[0]的状态再加一枚3元硬币。s[3]=s[3-3]+1&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在的问题就是如何确定所有选择。从前面的疾苦==记录可以看出，我都是有意识的在下标上做文章，故意将&lt;code&gt;s[0]===s[3-3]&lt;/code&gt;，这就是关键。每次我们获取当前状态，不是要从紧邻的上一个状态递推，而是根据提供给我们的硬币数值得到可能凑到当前数值的情况。&lt;/p&gt;
&lt;p&gt;2元再加一枚1元硬币是如此，0元再加一枚3元硬币也是如此。当要求解s[5]的时候情况更加多变。候选变成了&lt;code&gt;[s[4]+1,s[2]+1,s[0]+1]&lt;/code&gt;。每个子问题的求解都要尝试可能的求解路径状态。&lt;/p&gt;
&lt;p&gt;4+1是一种情况，2+3、0+5是另外的情况。&lt;/p&gt;
&lt;p&gt;那么s[3]的结果是哪一个呢，根据问题需要求解最小的硬币枚数，显然结果是&lt;code&gt;Min(s[2]+1,s[0]+1)&lt;/code&gt;，是s[3]=1，需要1枚三元硬币&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;s[4]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要多少枚硬币可以凑齐4元，&lt;code&gt;s[4]=Min(s[3]+1,s[1]+1)&lt;/code&gt;，s[4]=2,需要一枚3元硬币的基础上再加一枚1元硬币。&lt;/p&gt;
&lt;p&gt;上面在s[3]的求解过程中，实际上已经脱出了该问题的状态转移方程。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;s[x]=Min(s[x-j]+1)&lt;/code&gt;，其中j是提供的硬币面值。&lt;/p&gt;
&lt;h2 id=&quot;实现&quot;&gt;实现&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x=input(&lt;span class=&quot;string&quot;&gt;&#39;plz input the value of x&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s=np.arange(int(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x_coins=(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,x-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; x_coins:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; item&amp;gt;=i &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; s[item-i]+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;lt;s[item]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			s[item]=s[item-i]+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;动态规划(dynamic programming)是运筹学的一个分支，是求解决策过程(decision process)最优化的数学方法。20世纪50年代初美国数学家R.E.Bellman等人在研究多阶段决策过程(multistep decision process)的优化问题时，提出了著名的最优化原理(principle of optimality)，把多阶段过程转化为一系列单阶段问题，利用各阶段之间的关系，逐个求解，创立了解决这类过程优化问题的新方法——动态规划&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;动态规划算法通常基于一个递推公式和n个初始状态。当前子问题的解将由前子问题的解推出。使用动态规划来解题只需要多项式时间复杂度。&lt;/p&gt;
    
    </summary>
    
      <category term="algorithm" scheme="http://peihao.space/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="http://peihao.space/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Android Sdk获取更新</title>
    <link href="http://peihao.space/2016/04/21/android-sdk/"/>
    <id>http://peihao.space/2016/04/21/android-sdk/</id>
    <published>2016-04-21T09:17:22.000Z</published>
    <updated>2016-04-21T11:32:55.396Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/hei-131.jpg?imageView/2/w/610/q/100&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近好多朋友、同学陆陆续续开始了他们的毕设阶段，得益于国内蓬勃爆炸发展的移动终端产业，有相当一部分小伙伴们的课题都是基于android platform这个世界占比最大的开源移动操作系统app开发。他们也陆陆续续遇到了新的问题。&lt;/p&gt;
&lt;p&gt;恰好我曾经作为初学者遇到过相同的问题，我将这些问题记录下来，希望可以分享我的知识、经验与见解。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Android_SDK更新&quot;&gt;Android SDK更新&lt;/h1&gt;&lt;p&gt;由于国内Google的IP受到GFW限制，所以无法通过唱过方法直接获取sdk更新，一般有两种办法。&lt;/p&gt;
&lt;h2 id=&quot;Android_SDK在线更新镜像服务器&quot;&gt;Android SDK在线更新镜像服务器&lt;/h2&gt;&lt;p&gt;可以通过国内或者准许服务器的镜像获取更新，常用稳定的镜像有下面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;南阳理工学院镜像服务器地址:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;mirror.nyist.edu.cn 端口：80&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中国科学院开源协会镜像站地址:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight http&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;IPV4/IPV6&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;mirrors.opencas.cn 端口：80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;http&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;IPV4/IPV6&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;mirrors.opencas.org 端口：80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;stylus&quot;&gt;IPV4/IPV6: mirrors&lt;span class=&quot;class&quot;&gt;.opencas&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.ac&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.cn&lt;/span&gt; 端口：&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;上海GDG镜像服务器地址:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;sdk.gdgshanghai.com 端口：8000&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;北京化工大学镜像服务器地址:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;IPv4: ubuntu&lt;span class=&quot;class&quot;&gt;.buct&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.edu&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.cn&lt;/span&gt;/ 端口：&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IPv4: ubuntu&lt;span class=&quot;class&quot;&gt;.buct&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.cn&lt;/span&gt;/ 端口：&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IPv6: ubuntu&lt;span class=&quot;class&quot;&gt;.buct6&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.edu&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.cn&lt;/span&gt;/ 端口：&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;大连东软信息学院镜像服务器地址:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;mirrors.neusoft.edu.cn 端口：80&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;腾讯Bugly 镜像:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;android-mirror.bugly.qq.com 端口：8080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;tips:&lt;/p&gt;
&lt;p&gt;腾讯镜像使用方法:&lt;a href=&quot;http://android-mirror.bugly.qq.com:8080/include/usage.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://android-mirror.bugly.qq.com:8080/include/usage.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;温馨提示，注意选择合适的版本更新~&quot;&gt;温馨提示，注意选择合适的版本更新~&lt;/h2&gt;&lt;h2 id=&quot;使用方法&quot;&gt;使用方法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;启动 Android SDK Manager ，打开主界面，依次选择『Tools』、『Options…』，弹出『Android SDK Manager - Settings』窗口；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在『Android SDK Manager - Settings』窗口中，在『HTTP Proxy Server』和『HTTP Proxy Port』输入框内填入上面镜像服务器地址(不包含&lt;a href=&quot;http://，如下图)和端口，并且选中『Force&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://，如下图)和端口，并且选中『Force&lt;/a&gt; https://… sources to be fetched using &lt;a href=&quot;http://...』复选框。设置完成后单击『Close』按钮关闭『Android&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://...』复选框。设置完成后单击『Close』按钮关闭『Android&lt;/a&gt; SDK Manager - Settings』窗口返回到主界面；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;依次选择『Packages』、『Reload』。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://www.androiddevtools.cn/static/image/sdk-manager-proxy-settings.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;直接下载离线包&quot;&gt;直接下载离线包&lt;/h2&gt;&lt;p&gt;一种更轻松的方法就是下载正确版本的离线包，首先明确开发的程序在哪一个Level（可以直接换算成android版本，如4.4、5.1），下载对应的文件，复制到本地&lt;code&gt;sdk manager&lt;/code&gt;设置的目录位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/android-local-sdk.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;直接下载带sdk的IDE&quot;&gt;直接下载带sdk的IDE&lt;/h2&gt;&lt;p&gt;Google公司官方推出的Android平台开发环境Android Studio是一款相当棒的开发软件，我平时使用的开发环境就是AS，相比Eclipse，他可以显著提高我的工作效率、学习进程。同时，因为Google已经宣布了不再对Eclipse进行Plugins更新维护，AS将会是以后的Android开发趋势。&lt;/p&gt;
&lt;p&gt;这里直接提供当前最新的一次稳定版更新：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://pan.baidu.com/s/1cHlqma#path=%252FAndroid%252FDeveloper%2520Tools%252FWindows%252FAndroid%2520Studio%252F2.0%25E6%25AD%25A3%25E5%25BC%258F%25E7%2589%2588&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Win平台AS2.0稳定版   戳我&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AS的一次Relase包括两种形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;带最新SDK版本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;纯IDE&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;想要使用最新的SDK可以下载附带最新SDK的IDE.&lt;/p&gt;
&lt;h1 id=&quot;一些你会用到的Docs&quot;&gt;一些你会用到的Docs&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Android Api中文版&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://www.embeddedlinux.org.cn/androidapi/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Api-zh&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android API指南中文版&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://api.apkbus.com/guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gudie-zh&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/hei-131.jpg?imageView/2/w/610/q/100&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近好多朋友、同学陆陆续续开始了他们的毕设阶段，得益于国内蓬勃爆炸发展的移动终端产业，有相当一部分小伙伴们的课题都是基于android platform这个世界占比最大的开源移动操作系统app开发。他们也陆陆续续遇到了新的问题。&lt;/p&gt;
&lt;p&gt;恰好我曾经作为初学者遇到过相同的问题，我将这些问题记录下来，希望可以分享我的知识、经验与见解。&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="http://peihao.space/categories/android/"/>
    
    
      <category term="android" scheme="http://peihao.space/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>宅福利-Tumblr</title>
    <link href="http://peihao.space/2016/04/20/tumblr/"/>
    <id>http://peihao.space/2016/04/20/tumblr/</id>
    <published>2016-04-20T14:17:22.000Z</published>
    <updated>2016-04-21T06:05:16.760Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/tumblr.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;本篇文章是&lt;a href=&quot;http://peihao.space/2016/03/16/alter_torrent/&quot;&gt;洗白种子文件&lt;/a&gt;的兄弟篇，也是为了安利一个宅男宅女极好的网站–&lt;a href=&quot;https://www.tumblr.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;汤不热&lt;/a&gt;.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;em&gt;Tumblr（中文名：汤博乐）成立于2007年，是目前全球最大的轻博客网站，也是轻博客网站的始祖。Tumblr（汤博乐）是一种介于传统博客和微博之间的全新媒体形态，既注重表达，又注重社交，而且注重个性化设置，成为当前最受年轻人欢迎的社交网站之一。雅虎公司董事会2013年5月19日决定，以11亿美元收购Tumblr。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;tumblr是纯粹基于兴趣的社交网站，产品形态好用只是一个方面，更重要的是，可以只关注自己感兴趣的人和博客，而且不必为了维持真实好友关系和自己被期望的网络形象而去做一些自己不想做的事（比如逃避家长监控）&lt;/p&gt;
&lt;p&gt;好了，不装x，目前国内青年使用Tumblr频率最高的动机不是为了寻觅上面叹为观止的写真、艺术创造，而是为了解决青春期荷尔蒙沉淀过多问题。Tumblr上面有大量的喜闻乐见的po主，他们经常更新自己的站点，包括一颗赛艇的pic和video。而且，最重要的，到目前为止，GFW还没有明确的将网站放到黑名单…&lt;/p&gt;
&lt;p&gt;当你有了Tumblr博主账号之后，你可以轻松的访问获取他发布的每一条资源分享。然而可能因为服务器的缘故，国内请求受限，速度很慢，好吧，编程改变世界.|&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Res=list()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Res1=list()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;outputfile = open(&lt;span class=&quot;string&quot;&gt;&#39;result.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;blogname=input(&lt;span class=&quot;string&quot;&gt;&#39;plz input the username:&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(keys)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; keys:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        baseurl = &lt;span class=&quot;string&quot;&gt;&#39;http://&#39;&lt;/span&gt;+blogname.strip()+&lt;span class=&quot;string&quot;&gt;&#39;.tumblr.com/api/read?type=&#39;&lt;/span&gt;+key+&lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;num=50&amp;amp;start=&#39;&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;#pic&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        start = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;#start from num zero&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            url = baseurl + str(start)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            pagecontent = requests.get(url).text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; key==&lt;span class=&quot;string&quot;&gt;&#39;photo&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result=re.findall(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;photo-url .*?&amp;gt;(.*?)&amp;lt;/photo-url&amp;gt;&#39;&lt;/span&gt;,pagecontent)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; result:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    Res.append(item)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result=re.findall(&lt;span class=&quot;string&quot;&gt;&#39;source src=&quot;(.*?)&quot;&#39;&lt;/span&gt;,pagecontent)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; result:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    Res1.append(item)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (len(result) &amp;lt; &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                start += &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func((&lt;span class=&quot;string&quot;&gt;&#39;video&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;photo&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; Res:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; Res:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        outputfile.writelines(item+&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; Res1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; Res1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        outputfile.writelines(item+&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;outputfile.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#dbdnsjzbebhsuiwbdbdjsnd       guoyua&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行上面的代码，输入正确的站主name，就可以在当前目录下的&lt;code&gt;result.txt&lt;/code&gt;文件写入所有的pic和video。&lt;/p&gt;
&lt;p&gt;听过实验，pic会有很多的重复内容，因为会返回原图的不同尺寸url，这里我没有对他进行排重获取高分辨率，因为我懒。不会告诉你在代码最后一行不小心留下了潘多拉魔盒.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jianguoyun.com/p/DbSPNO0QpYz2BRi1qhM&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载戳我&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/tumblr2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/tumblr.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;本篇文章是&lt;a href=&quot;http://peihao.space/2016/03/16/alter_torrent/&quot;&gt;洗白种子文件&lt;/a&gt;的兄弟篇，也是为了安利一个宅男宅女极好的网站–&lt;a href=&quot;https://www.tumblr.com/&quot;&gt;汤不热&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://peihao.space/categories/python/"/>
    
    
      <category term="python" scheme="http://peihao.space/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>verilog过程块与赋值</title>
    <link href="http://peihao.space/2016/04/18/verilog-setvalue/"/>
    <id>http://peihao.space/2016/04/18/verilog-setvalue/</id>
    <published>2016-04-18T06:17:22.000Z</published>
    <updated>2016-04-18T13:05:56.736Z</updated>
    
    <content type="html">&lt;h2 id=&quot;过程块&quot;&gt;过程块&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;always过程块&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;模板：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;always @(&amp;lt;敏感信号表达式&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//过程赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//if语句	&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//case语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//while、repeat、for语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//task、function调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当敏感信号表达式的值改变时候，就执行一遍块内语句。同时always过程块是不能够嵌套使用的。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;&lt;code&gt;posedge&lt;/code&gt;与&lt;code&gt;negedge&lt;/code&gt;关键字分别是上升沿以及下降沿&lt;/p&gt;
&lt;p&gt;例如：同步时序电路的时钟信号为clk，clear为异步清零信号。敏感信号可写为：&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//上升沿触发，高电平清0有效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clk &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clear)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//上升沿触发，低电平清0有效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clk &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;negedge&lt;/span&gt; clear)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如当&lt;code&gt;negedge clear&lt;/code&gt;表示当&lt;code&gt;clear==0&lt;/code&gt;时&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clk &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;negedge&lt;/span&gt; clear)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;!&lt;/span&gt;clear)&lt;span class=&quot;comment&quot;&gt;//当clear==0时候，always会由事件驱动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			qout&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			qout&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;in;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;initial过程块&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;initial模板：&lt;/p&gt;
&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;initial&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	语句&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对变量和存贮器初始化&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;initial&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	reg1=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(addr=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;addr&amp;lt;size;addr=addr+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		memory[addr]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;initial语句主要面向功能模拟，通常不具有可综合性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模拟0时刻开始执行，只执行一次&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同一模块内的多个initial过程块，模拟0时刻开始并行执行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;initial与always语句一样，是不能嵌套使用的。即在initial语句中不能再次嵌套initial语句块。&lt;/p&gt;
&lt;h1 id=&quot;连续赋值&quot;&gt;连续赋值&lt;/h1&gt;&lt;p&gt;用连续赋值语句表达的是： &lt;code&gt;assign val=newval;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;任何一个输入的改变都将立即导致输出更新；&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module orand(&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;,a,b,c,&lt;span class=&quot;keyword&quot;&gt;d&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;e&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt; a,b,c,&lt;span class=&quot;keyword&quot;&gt;d&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;e&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	output &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	assign &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;=3&amp;amp;(a|b)&amp;amp;(c|&lt;span class=&quot;keyword&quot;&gt;d&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;过程赋值语句&quot;&gt;过程赋值语句&lt;/h1&gt;&lt;p&gt;过程赋值语句常用于对reg变量进行赋值。一般分为两种，&lt;em&gt;阻塞赋值&lt;/em&gt;与&lt;em&gt;非阻塞赋值&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;阻塞与非阻塞赋值&quot;&gt;阻塞与非阻塞赋值&lt;/h2&gt;&lt;p&gt;赋值的类型选择取决于建模的逻辑类型。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在时序块的RTL代码中使用&lt;em&gt;非阻塞赋值&lt;/em&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;。非阻塞赋值在块结束后才完成赋值操作。此赋值方式可以避免在仿真出现魔仙和竞争现象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在组合的RTL代码中使用&lt;em&gt;阻塞赋值&lt;/em&gt;&lt;code&gt;=&lt;/code&gt;。使用阻塞赋值方式对一个变量进行赋值时，此变量的值在赋值语句执行完后才能之后就立即改变。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;compare&quot;&gt;compare&lt;/h2&gt;&lt;p&gt;使用非阻塞赋值方式进行赋值时，各个赋值语句同步执行；因此通常在一个时钟沿对临时变量进行赋值，而在另一个时钟沿对其进行采样。因为在相同的时钟沿采样赋值，采样的还是原来的值，赋值操作是在块结束时进行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;阻塞赋值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面模块会综合成为触发器&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt; block(clk,a,b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt; clk,a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;output&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;reg&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clk)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		y&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		b&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endmodule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;非阻塞赋值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面的模块会综合成两个触发器&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt; block(clk,a,b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt; clk,a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;output&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;reg&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clk)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		y&lt;span class=&quot;keyword&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		b&lt;span class=&quot;keyword&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endmodule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;\img\article\ise\block-unblock-setvalue.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图左侧是阻塞赋值的综合结果，右侧则为非阻塞赋值。相比左侧，右侧的例子会造成一个时钟周期的延迟。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;过程块&quot;&gt;过程块&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;always过程块&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;模板：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;always @(&amp;lt;敏感信号表达式&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//过程赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//if语句	&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//case语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//while、repeat、for语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//task、function调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当敏感信号表达式的值改变时候，就执行一遍块内语句。同时always过程块是不能够嵌套使用的。
    
    </summary>
    
      <category term="Verilog" scheme="http://peihao.space/categories/Verilog/"/>
    
    
      <category term="Verilog" scheme="http://peihao.space/tags/Verilog/"/>
    
  </entry>
  
  <entry>
    <title>基于Xilinx的Synthesize</title>
    <link href="http://peihao.space/2016/04/18/ise-synthesize/"/>
    <id>http://peihao.space/2016/04/18/ise-synthesize/</id>
    <published>2016-04-18T06:17:22.000Z</published>
    <updated>2016-04-18T13:06:11.753Z</updated>
    
    <content type="html">&lt;p&gt;所谓综合，就是讲HDL语言、原理图等设计输入翻译成由与、或、非们和RAM、触发器登记本逻辑单元的逻辑连接（即网表）。并根据目标和要求（约束条件）优化生成的逻辑连接。&lt;/p&gt;
&lt;h1 id=&quot;ISE-XST&quot;&gt;ISE-XST&lt;/h1&gt;&lt;p&gt;XST是Xilinx公司自己的综合（Synthsize）工具。当我们完成输入、仿真以及管脚分配之后就可以进行综合和实现。&lt;/p&gt;
&lt;p&gt;双击Synthesize-XST，就可以完成综合。一般而言，会有三种结果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;仿真完成&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Warn警告&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ERROR错误&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Warn会在Synthesize-XST出现黄色警示，而Error有红色标识。&lt;/p&gt;
&lt;p&gt;综合完成之后可以通过使用XST的&lt;code&gt;View RTLSchematics&lt;/code&gt;工具查看RTL级结构图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/adder-RTL.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Synthesize_Proprtties&quot;&gt;Synthesize Proprtties&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[Optimization Goal]：优化的目标。该参数决定了综合工具对设计进行优化时，是以面积还是以速度作为优先原则。面积优先原则可以节省器件内部的逻辑资源，即尽可能地采用串行逻辑结构，但这是以牺牲速度为代价的。而速度优先原则保证了器件的整体工作速度，即尽可能地采用并行逻辑结构，但这样将会浪费器件内部大量的逻辑资源，因此，它是以牺牲逻辑资源为代价的。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Optimization Effort]：优化器努力程度。这里有[normal]和[high]两种选择方式。对于[normal]，优化器对逻辑设计仅仅进行普通的优化处理，其结果可能并不是最好的，但是综合和优化流程执行地较快。如果选择[high]，优化器对逻辑设计进行反复的优化处理和分析，并能生成最理想的综合和优化结果，在对高性能和最终的设计通常采用这种模式；当然在综合和优化时，需要的时间较长。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Use Synthesis Constraints File]：使用综合约束文件。如果选择了该选项，那么综合约束文件XCF有效。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Synthesis Constraints File]：综合约束文件。该选项用于指定XST综合约束文件XCF的路径。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Global Optimization Goal]：全局优化目标。可以选择的属性包括有[AllClockNets]、[Inpad To Outpad]、[Offest In Before]、[Offest Out After]、[Maximm Delay]。该参数仅对FPGA器件有效，可用于选择所设定的寄存器之间、输入引脚到寄存器之间、寄存器到输出引脚之间，或者是输入引脚到输出引脚之间逻辑的优化策略。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Generate RTL Schematic]：生成寄存器传输级视图文件。该参数用于将综合结果生成RTL视图。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Write Timing Constraints]：写时序约束。该参数仅对FPGA有效，用来设置是否将HDL源代码中用于控制综合的时序约束传给NGC网表文件，该文件用于布局和布线。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;HDL语言选项&quot;&gt;HDL语言选项&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[FSM Encoding Algorithm]：有限状态机编码算法。该参数用于指定有限状态机的编码方式。选项有[Auto]、[One-Hot]、[Compact]、[Sequential]、[Gray]、[Johnson]、[User]、[Speed1]、[None]编码方式，默认为[Auto]编码方式。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Safe Implementation]：将添加安全模式约束来实现有限状态机，将添加额外的逻辑将状态机从无效状态调转到有效状态，否则只能复位来实现，有[Yes]、[No]两种选择，默认为[No]。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Case Implementation Sytle]：条件语句实现类型。该参数用于控制XST综合工具解释和推论Verilog的条件语句。其中选项有[None]、[Full]、[Parallel]、[Full-Parallel]，默认为[None]。 对于这四种选项，区别如下：（1）[None]，XST将保留程序中条件语句的原型，不进行任何处理；（2）[Full]，XST认为条件语句是完整的，避免锁存器的产生；（3）[Parallel]，XST认为在条件语句中不能产生分支，并且不使用优先级编码器；（4）[Full-Parallel]，XST认为条件语句是完整的，并且在内部没有分支，不使用锁存器和优先级编码器。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[RAM Extraction]：存储器扩展。该参数仅对FPGA有效，用于使能和禁止RAM宏接口。默认为允许使用RAM宏接口。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[RAM Style]：RAM实现类型。该参数仅对FPGA有效，用于选择是采用块RAM还是分布式RAM来作为RAM的实现类型。默认为 [Auto]。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[ROM Extraction]：只读存储器扩展。该参数仅对FPGA有效，用于使能和禁止只读存储器ROM宏接口。默认为允许使用ROM宏接口。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[ROM Style]：ROM实现类型。该参数仅对FPGA有效，用于选择是采用块RAM还是分布式RAM来作为ROM的实现和推论类型。默认为[Auto]。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Mux Extraction]：多路复用器扩展。该参数用于使能和禁止多路复用器的宏接口。根据某些内定的算法，对于每个已识别的多路复用/选择器，XST能够创建一个宏，并进行逻辑的优化。可以选择[Yes]、[No]和[Force]中的任何一种，默认为[Yes]。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Mux Style]：多路复用实现类型。该参数用于胃宏生成器选择实现和推论多路复用/选择器的宏类型。可以选择[Auto]、[MUXF]和[MUXCY]中的任何一种，默认为[Auto]。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Decoder Extraction]：译码器扩展。该参数用于使能和禁止译码器宏接口，默认为允许使用该接口。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Priority Encoder Extraction]：优先级译码器扩展。该参数用于指定是否使用带有优先级的编码器宏单元。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Shift Register Extraction]：移位寄存器扩展。该参数仅对FPGA有效，用于指定是否使用移位寄存器宏单元。默认为使能。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Logical Shifter Extraction]：逻辑移位寄存器扩展。该参数仅对FPGA有效，用于指定是否使用逻辑移位寄存器宏单元。默认为使能。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[XOR Collapsing]：异或逻辑合并方式。该参数仅对FPGA有效，用于指定是否将级联的异或逻辑单元合并成一个大的异或宏逻辑结构。默认为使能。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Resource Sharing]：资源共享。该参数用于指定在XST综合时，是否允许复用一些运算处理模块，如加法器、减法器、加/减法器和乘法器。默认为使能。如果综合工具的选择是以速度为优先原则的，那么就不考虑资源共享。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Multiplier Style]：乘法器实现类型。该参数仅对FPGA有效，用于指定宏生成器使用乘法器宏单元的方式。选项有[Auto]、Block]、[LUT]和[Pipe_LUT]。默认为[Auto]。选择的乘法器实现类型和所选择的器件有关。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;特殊选项&quot;&gt;特殊选项&lt;/h1&gt;&lt;p&gt;Xilinx特殊选项用于将用户逻辑适配到Xilinx芯片的特殊结构中，不仅能节省资源，还能提高设计的工作频率&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[Add I/O Buffers]：插入I/O缓冲器。该参数用于控制对所综合的模块是否自动插入I/O缓冲器。默认为自动插入。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Max Fanout]：最大扇出数。该参数用于指定信号和网线的最大扇出数。这里扇出数的选择与设计的性能有直接的关系，需要用户合理选择。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Register Duplication]：寄存器复制。该参数用于控制是否允许寄存器的复制。对于高扇出和时序不能满足要求的寄存器进行复制，可以减少缓冲器输出的数目以及逻辑级数，改变时序的某些特性，提高设计的工作频率。默认为允许寄存器复制。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Equivalent Register Removal]：等效寄存器删除。该参数用于指定是否把寄存器传输级功能等效的寄存器删除，这样可以减少寄存器资源的使用。如果某个寄存器是用Xilinx的硬件原语指定的，那么就不会被删除。默认为使能。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Register Balancing]：寄存器配平。该参数仅对FPGA有效，用于指定是否允许平衡寄存器。可选项有[No]、[Yes]、    [Forward]和[Backward]。采用寄存器配平技术，可以改善某些设计的时序条件。其中，[Forward]为前移寄存器配平，[Backward]为后移寄存器配平。采用寄存器配平后，所用到的寄存器数就会相应地增减。默认为寄存器不配平。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Move First Flip-Flop Stage]：移动前级寄存器。该参数仅对FPGA有效，用于控制在进行寄存器配平时，是否允许移动前级寄存器。如果[Register Balancing]的设置为[No]，那么该参数的设置无效。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Move Last Flip-Flop Stage]：移动后级寄存器。该参数仅对FPGA有效，用于控制在进行寄存器配平时，是否允许移动后级寄存器。如果[Register Balancing]的设置为[No]，那么该参数的设置无效。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Pack I/O Registers into IOBs]：I/O寄存器置于输入输出块。该参数仅对FPGA有效，用于控制是否将逻辑设计中的寄存器用IOB内部寄存器实现。在Xilinx系列FPGA的IOB中分别有输入和输出寄存器。如果将设计中的第一级寄存器或最后一级寄存器用IOB内部寄存器实现，那么就可以缩短IO引脚到寄存器之间的路径，这通常可以缩短大约1~2ns的传输时延。默认为[Auto]。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Slice Packing]：优化Slice结构。该参数仅对FPGA有效，用于控制是否将关键路径的查找表逻辑尽量配置在同一个Slice或者CLB模块中，由此来缩短LUT之间的布线。这一功能对于提高设计的工作频率、改善时序特性是非常有用的。 默认为允许优化Slice结构。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Optimize Instantiated Primitives]：优化已例化的原语。该参数控制是否需要优化在HDL代码中已例化的原语。默认为不优化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;以上三个部分分别用于设置综合的全局目标和整体策略、HDL硬件语法规则以及Xilinx特有的结构属性。&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;所谓综合，就是讲HDL语言、原理图等设计输入翻译成由与、或、非们和RAM、触发器登记本逻辑单元的逻辑连接（即网表）。并根据目标和要求（约束条件）优化生成的逻辑连接。&lt;/p&gt;
&lt;h1 id=&quot;ISE-XST&quot;&gt;ISE-XST&lt;/h1&gt;&lt;p&gt;XST是Xilinx公司自己的综合（Synthsize）工具。当我们完成输入、仿真以及管脚分配之后就可以进行综合和实现。&lt;/p&gt;
&lt;p&gt;双击Synthesize-XST，就可以完成综合。一般而言，会有三种结果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;仿真完成&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Warn警告&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ERROR错误&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Warn会在Synthesize-XST出现黄色警示，而Error有红色标识。&lt;/p&gt;
&lt;p&gt;综合完成之后可以通过使用XST的&lt;code&gt;View RTLSchematics&lt;/code&gt;工具查看RTL级结构图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/adder-RTL.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Verilog" scheme="http://peihao.space/categories/Verilog/"/>
    
    
      <category term="Verilog" scheme="http://peihao.space/tags/Verilog/"/>
    
  </entry>
  
  <entry>
    <title>雌雄同体</title>
    <link href="http://peihao.space/2016/04/17/22/"/>
    <id>http://peihao.space/2016/04/17/22/</id>
    <published>2016-04-17T07:36:28.000Z</published>
    <updated>2016-04-17T12:42:56.443Z</updated>
    
    <content type="html">&lt;center&gt;&lt;br&gt;春天是他最爱的季节&lt;br&gt;&lt;br&gt;当微风随意吹乱他的头发&lt;br&gt;&lt;br&gt;他并不在意身边世界的吵杂&lt;br&gt;&lt;br&gt;只想著自己生命中的变化&lt;br&gt;&lt;br&gt;还有十五分钟才午休&lt;br&gt;&lt;br&gt;从早到晚没有想像中那么好过&lt;br&gt;&lt;br&gt;安定的日子不一定就是幸福&lt;br&gt;&lt;br&gt;忘不掉他在心里做过的梦&lt;br&gt;&lt;br&gt;他今年农历三月六号刚满二十二&lt;br&gt;&lt;br&gt;刚甩开课本要离开家看看这世界&lt;br&gt;&lt;br&gt;却发现许多烦恼要面对&lt;br&gt;&lt;br&gt;oh yeah&lt;br&gt;&lt;br&gt;他常会想望能回到那年他一十二&lt;br&gt;&lt;br&gt;只需要好好上学生活单纯没忧愁&lt;br&gt;&lt;br&gt;他就像一朵蓓蕾满怀希望&lt;br&gt;&lt;br&gt;秋天是忽然间就来临&lt;br&gt;&lt;br&gt;青春虽然有本钱可以洒脱&lt;br&gt;&lt;br&gt;一场恋爱二十二个月后结束&lt;br&gt;&lt;br&gt;才知道有些感情不值得赌&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;九月天气还是有点热&lt;br&gt;&lt;br&gt;他想公车再不来就走一走路&lt;br&gt;&lt;br&gt;他开始明白等待未必有结果&lt;br&gt;&lt;br&gt;一个人也能走上梦的旅途&lt;br&gt;&lt;br&gt;他今年农历三月六号刚满二十二&lt;br&gt;&lt;br&gt;刚甩开课本要离开家看看这世界&lt;br&gt;&lt;br&gt;却发现许多烦恼要面对&lt;br&gt;&lt;br&gt;oh yeah&lt;br&gt;&lt;br&gt;他常会想望能回到那年他一十二&lt;br&gt;&lt;br&gt;只需要好好上学生活单纯没忧愁&lt;br&gt;&lt;br&gt;他一直满怀希望&lt;br&gt;&lt;br&gt;人生偶尔会走上一条陌路&lt;br&gt;&lt;br&gt;像是没有指标的地图&lt;br&gt;&lt;br&gt;别让他们说你该知足&lt;br&gt;&lt;br&gt;只有你知道什么是你的幸福&lt;br&gt;&lt;br&gt;他常会想望能回到那年他一十二&lt;br&gt;&lt;br&gt;只需要好好上学生活单纯没忧愁&lt;br&gt;&lt;br&gt;他笑著想过未来&lt;br&gt;&lt;br&gt;oh 他应该得到幸福&lt;br&gt;&lt;br&gt;如此的简单的梦&lt;br&gt;&lt;br&gt;有没有实现&lt;br&gt;&lt;br&gt;&lt;embed border=&quot;0&quot; src=&quot;http://music.163.com/outchain/player?type=2&amp;id=150454&amp;auto=1&amp;width=200&amp;height=100&quot;&gt;&lt;br&gt;&lt;/center&gt;</content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;br&gt;春天是他最爱的季节&lt;br&gt;&lt;br&gt;当微风随意吹乱他的头发&lt;br&gt;&lt;br&gt;他并不在意身边世界的吵杂&lt;br&gt;&lt;br&gt;只想著自己生命中的变化&lt;br&gt;&lt;br&gt;还有十五分钟才午休&lt;br&gt;&lt;br&gt;从早到晚没有想像中那么好过&lt;br&gt;&lt;br&gt;安定的日子不一定就是幸福&lt;br&gt;&lt;br&gt;忘不掉他在心里做过的梦&lt;br&gt;&lt;br&gt;他今年农历三月六号刚满二十二&lt;br&gt;&lt;br&gt;刚甩开课本要离开家看看这世界&lt;br&gt;&lt;br&gt;却发现许多烦恼要面对&lt;br&gt;&lt;br&gt;oh yeah&lt;br&gt;&lt;br&gt;他常会想望能回到那年他一十二&lt;br&gt;&lt;br&gt;只需要好好上学生活单纯没忧愁&lt;br&gt;&lt;br&gt;他就像一朵蓓蕾满怀希望&lt;br&gt;&lt;br&gt;秋天是忽然间就来临&lt;br&gt;&lt;br&gt;青春虽然有本钱可以洒脱&lt;br&gt;&lt;br&gt;一场恋爱二十二个月后结束&lt;br&gt;&lt;br&gt;才知道有些感情不值得赌&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://peihao.space/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://peihao.space/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="音乐" scheme="http://peihao.space/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>Gray Code</title>
    <link href="http://peihao.space/2016/04/16/Gray-code/"/>
    <id>http://peihao.space/2016/04/16/Gray-code/</id>
    <published>2016-04-16T14:17:22.000Z</published>
    <updated>2016-04-17T07:22:34.388Z</updated>
    
    <content type="html">&lt;p&gt;The gray code is a binary numeral system where two successive values differ in only one bit.&lt;/p&gt;
&lt;p&gt;Given a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.&lt;/p&gt;
&lt;p&gt;For example, given n = 2, return [0,1,3,2]. Its gray code sequence is:&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Note:&lt;br&gt;For a given n, a gray code sequence is not uniquely defined.&lt;/p&gt;
&lt;p&gt;For example, [0,2,3,1] is also a valid gray code sequence according to the above definition.&lt;/p&gt;
&lt;p&gt;For now, the judge is able to judge based on one instance of gray code sequence. Sorry about that.&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Integer&amp;gt; grayCode(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		List &lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;lt;&amp;lt;n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;length;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;.add(i^(i&amp;gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;格雷码的是特点是：&lt;br&gt;相邻两数的格雷码，仅仅有一位二进制发生变化。&lt;br&gt;而且在其范围内的最小值和最大值，也仅仅有一位二进制发生变化。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;000&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;000&lt;/span&gt;--&amp;gt;&lt;span class=&quot;number&quot;&gt;000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;001&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;000&lt;/span&gt;--&amp;gt;&lt;span class=&quot;number&quot;&gt;001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;010&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;001&lt;/span&gt;--&amp;gt;&lt;span class=&quot;number&quot;&gt;011&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;011&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;001&lt;/span&gt;--&amp;gt;&lt;span class=&quot;number&quot;&gt;010&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;010&lt;/span&gt;--&amp;gt;&lt;span class=&quot;number&quot;&gt;110&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;101&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;010&lt;/span&gt;--&amp;gt;&lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;110&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;011&lt;/span&gt;--&amp;gt;&lt;span class=&quot;number&quot;&gt;101&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;011&lt;/span&gt;--&amp;gt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每两个数字作为一组，每组之间都只会差一个数字，即最后一位，第一个是0，第二个是1.组内的两个数字与之异或的数字是相同的，所以保证了组内变换后两个数字一定会有差别，而且只会有一位差别.&lt;/p&gt;
&lt;p&gt;组与组之间靠近的两个数字，后面一个将前面一个数字最右方连续的1全部置为0，然后在连续1前面一位置为1，而与他们异或的格式也很是类似。全都相对于本身右移一位，结果两两异或，数字相同的（1与1、0与0）结果为0，只在原本自身相对变化的两位出现交替，后面一个数字比前面一个数字在最前方多了一个1.&lt;/p&gt;
&lt;p&gt;这样组内、组间都与前面数字差一位，保证了Gray Code的间隔都为1，而最大的数字与最小的数字也只差一位，因为异或的特性，使后面部分都变为了0.&lt;/p&gt;
&lt;p&gt;递归生成码表&lt;/p&gt;
&lt;p&gt;这种方法基于格雷码是反射码的事实，利用递归的如下规则来构造：&lt;br&gt;1位格雷码有两个码字&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(n+1)位格雷码中的前2n个码字等于n位格雷码的码字，按顺序书写，加前缀0&lt;/li&gt;
&lt;li&gt;(n+1)位格雷码中的后2n个码字等于n位格雷码的码字，按逆序书写，加前缀1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/gray-code.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;The gray code is a binary numeral system where two successive values differ in only one bit.&lt;/p&gt;
&lt;p&gt;Given a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.&lt;/p&gt;
&lt;p&gt;For example, given n = 2, return [0,1,3,2]. Its gray code sequence is:&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;01&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="algorithm" scheme="http://peihao.space/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="http://peihao.space/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Router源代码架构--Filt_sink</title>
    <link href="http://peihao.space/2016/04/15/router-source-file-architecture-Filt_sink/"/>
    <id>http://peihao.space/2016/04/15/router-source-file-architecture-Filt_sink/</id>
    <published>2016-04-15T14:17:22.000Z</published>
    <updated>2016-04-15T15:11:02.747Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Filt_sink源码结构&quot;&gt;Filt_sink源码结构&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/flit-sink01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;先来讲flit_sink，也就是汇聚节点（网关）的微片控制模块。整个大模块下分4个相对小的模块结构。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;chi-rtr_channel_input&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接收端信道接口   input channel interface&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gnt_ivc_arb&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通用仲裁，指出哪一个虚拟信道 generic arbiter&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fb&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微片缓冲 flit buffer&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fco&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;发送端的流量控制接口 output port flow control&lt;/p&gt;
&lt;h1 id=&quot;chi_接收端信道接口&quot;&gt;chi 接收端信道接口&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/flit-sink02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;信道接口分管的模块比较多:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;link_activityq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;活动链表队列寄存器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flit_dataq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微片数据队列寄存器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flit_validq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微片验证寄存器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flit_ctrlq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微片控制信号队列寄存器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flit_sel_out_ivc_dec&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;indicate which VC the current flit (if any) belongs to，指明目前的微片属于哪个虚拟信道。从one-hot编码转换成二进制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flit_headq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;头微片队列寄存器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flit_head_out_sel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指明头微片&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flit_ctrq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微片数目队列计算器 flit_counter&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flit_tail_out_sel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指明尾微片&lt;/p&gt;
&lt;h1 id=&quot;gnt_ivc_arb仲裁&quot;&gt;gnt_ivc_arb仲裁&lt;/h1&gt;&lt;p&gt;最后获取的是仲裁的虚拟信道结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/flit-sink03.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gnt_lod&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;leading one detector前导1检测方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rr_arb&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;轮询调度仲裁&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;prefix_arb&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于轮询调度的前缀树&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;matrix_arb-c_matrix_arbiter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;矩阵仲裁&lt;/p&gt;
&lt;h1 id=&quot;flit_buffer微片缓冲&quot;&gt;flit buffer微片缓冲&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/flit-sink04.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;微片缓冲是NoC Router接收端非常重要的一部分:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;has_tail_ivcq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指出哪个虚拟信道有尾微片&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;push_mask_dec&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;掩码压栈解码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tailq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;尾微片队列寄存器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pop_mask_dec&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;掩码出栈解码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pop_tail_sel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;尾微片选择&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;samqc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;controller for statically allocated multi-queue. 已分配的多静态队列的控制器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;push_addr_sel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;压栈地址选择&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;damqc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;已分配的动态队列控制器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pop_addr_sel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;出栈地址选择&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;empty_sel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;空的虚拟信道选择&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pop_dataq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据寄存器出栈&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;read_addrq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;读地址&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bf&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;buffer file  缓存的寄存器文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pop_next_addr_sel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下个出栈的地址选择&lt;/p&gt;
&lt;h1 id=&quot;fco输出端流控&quot;&gt;fco输出端流控&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/flit-sink05.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;发送端流量控制模块的下属模块很简洁，主要包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cred_validq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;信用验证&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cred_vc_enc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虚拟信道信用编码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cred_vcq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虚拟信道信用&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Filt_sink源码结构&quot;&gt;Filt_sink源码结构&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/flit-sink01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;先来讲flit_sink，也就是汇聚节点（网关）的微片控制模块。整个大模块下分4个相对小的模块结构。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;chi-rtr_channel_input&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接收端信道接口   input channel interface&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gnt_ivc_arb&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通用仲裁，指出哪一个虚拟信道 generic arbiter&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fb&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微片缓冲 flit buffer&lt;br&gt;
    
    </summary>
    
      <category term="Verilog" scheme="http://peihao.space/categories/Verilog/"/>
    
    
      <category term="Verilog" scheme="http://peihao.space/tags/Verilog/"/>
    
  </entry>
  
  <entry>
    <title>Verilog的testbench笔记</title>
    <link href="http://peihao.space/2016/04/14/router-global-functions/"/>
    <id>http://peihao.space/2016/04/14/router-global-functions/</id>
    <published>2016-04-14T11:17:22.000Z</published>
    <updated>2016-04-14T13:01:32.299Z</updated>
    
    <content type="html">&lt;p&gt;记录下Router这个工程的几个全局函数.&lt;/p&gt;
&lt;h1 id=&quot;clogb&quot;&gt;clogb&lt;/h1&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;function integer &lt;span class=&quot;title&quot;&gt;clogb&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(input integer argument)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   integer 		     i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      clogb = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i = argument - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i = i &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		clogb = clogb + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endfunction&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;函数的逻辑相当简单，计算二进制参数能够右移的数目，换算成十进制，就是计算能够除2多少次。这个逻辑大家都不回陌生，就是对数函数。以2为底的对数函数。&lt;/p&gt;
&lt;p&gt;例如： res=clog(8)&lt;/p&gt;
&lt;p&gt;参数为8，结果为3.显而易见，这个函数是典型的向上取整。&lt;/p&gt;
&lt;h1 id=&quot;croot&quot;&gt;croot&lt;/h1&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;function integer &lt;span class=&quot;title&quot;&gt;croot&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(input integer argument, input integer base)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   integer i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   integer j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      croot = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(i &amp;lt; argument)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		   croot = croot + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		   i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; base; j = j + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		     i = i * croot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endfunction&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;函数有两个参数，一个是传入的需要计算的参数&lt;code&gt;argument&lt;/code&gt;，另外则是&lt;code&gt;base&lt;/code&gt;基数。整个函数的逻辑就是base个&lt;code&gt;croot&lt;/code&gt;相乘，看是否能够大于argument。croot逐次增加，直到满足要求。同样的，函数也是向上取整&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;argument:10~16 base:2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;croot=4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;argument:9~27 base:3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;croot=3&lt;/p&gt;
&lt;p&gt;显然，函数的逻辑是将argument开base根.&lt;/p&gt;
&lt;h1 id=&quot;pop_count&quot;&gt;pop_count&lt;/h1&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;function integer &lt;span class=&quot;title&quot;&gt;pop_count&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(input integer argument)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   integer i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      pop_count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i = argument; i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i = i &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pop_count = pop_count + (i &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endfunction&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;判断参数最低位是否为1，然后将参数右移，继续判断，判定正确则加1.&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;suffix_length&quot;&gt;suffix_length&lt;/h1&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;function integer &lt;span class=&quot;title&quot;&gt;suffix_length&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(input integer value1, input integer value2)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   integer v1, v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      v1 = value1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      v2 = value2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      suffix_length = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(v1 != v2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		   suffix_length = suffix_length + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		   v1 = v1 &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		   v2 = v2 &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endfunction&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;计算两个传入的参数从最低位开始到最高位有多少位数不相同。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;记录下Router这个工程的几个全局函数.&lt;/p&gt;
&lt;h1 id=&quot;clogb&quot;&gt;clogb&lt;/h1&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;function integer &lt;span class=&quot;title&quot;&gt;clogb&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(input integer argument)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   integer 		     i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      clogb = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i = argument - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i = i &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		clogb = clogb + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endfunction&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Verilog" scheme="http://peihao.space/categories/Verilog/"/>
    
    
      <category term="Verilog" scheme="http://peihao.space/tags/Verilog/"/>
    
  </entry>
  
  <entry>
    <title>Verilog的testbench笔记</title>
    <link href="http://peihao.space/2016/04/13/verilog-testbench-note/"/>
    <id>http://peihao.space/2016/04/13/verilog-testbench-note/</id>
    <published>2016-04-13T11:17:22.000Z</published>
    <updated>2016-04-13T13:12:20.203Z</updated>
    
    <content type="html">&lt;h1 id=&quot;并行块&quot;&gt;并行块&lt;/h1&gt;&lt;p&gt;在测试中经常会用到    &lt;code&gt;fork...join&lt;/code&gt;块。使用并行块能表示以同一个时间起点算起的多个时间的运行，并行的执行复杂的过程结构，如循环或任务。&lt;/p&gt;
&lt;h2 id=&quot;eg&quot;&gt;eg&lt;/h2&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight oxygene&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt; inilne_tb;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reg [&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] data_bus;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	initial fork&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		data_bus=&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;b00;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		#10 data_bus=8&#39;&lt;/span&gt;h45;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//以下的两个repeat开始执行时间不同，但可以并行同时执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;#20&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;string&quot;&gt;#10&lt;/span&gt; data_bus=data_bus+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;#25&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;string&quot;&gt;#20&lt;/span&gt; data_bus=data_bus&amp;lt;&amp;lt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;#140&lt;/span&gt; data_bus=&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;h0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	join&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/fork-join.png?imageView/2/w/610/q/100&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;0时刻对data_bus赋初始值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;10个单位时间之后对data_bus重新赋值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从20单位时间开始，每10个单位时间数据自加&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从25单位时间开始，没20个单位时间数据左移，与上一条指令并行执行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;140单位时间再赋值&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;建立时钟&quot;&gt;建立时钟&lt;/h1&gt;&lt;p&gt;虽然有时候在设计中会包含时钟，但时钟通常在测试模块中。可以使用门级和行为级建立时钟模型。行为描述一般使用的人较多。&lt;/p&gt;
&lt;h2 id=&quot;简单的对称方波&quot;&gt;简单的对称方波&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;reg clk;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;always begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;preprocessor&quot;&gt;#peroid/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; clk=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;preprocessor&quot;&gt;#peroid/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; clk=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;简单带延迟的对称方波时钟&quot;&gt;简单带延迟的对称方波时钟&lt;/h2&gt;&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;reg&lt;/span&gt; clk;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;initial&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	clk&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;value&quot;&gt;#(peroid)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;forever&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;value&quot;&gt;#(peroid/2)&lt;/span&gt; clk&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;!&lt;/span&gt;clk;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;不规则形&quot;&gt;不规则形&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;reg clk;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;initial begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;preprocessor&quot;&gt;#(peroid+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) clk=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;preprocessor&quot;&gt;#(peroid/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	forever begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;preprocessor&quot;&gt;#(peroid/&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) clk=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;preprocessor&quot;&gt;#(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;*peroid/&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) clk=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将会产生一个带延迟的，占空比不为1，同时投脉冲不规则的时钟。&lt;/p&gt;
&lt;h1 id=&quot;Verilog高级结构&quot;&gt;Verilog高级结构&lt;/h1&gt;&lt;h2 id=&quot;task&quot;&gt;task&lt;/h2&gt;&lt;p&gt;一般用于编写测试模块或者行为描述的模块。其中可以包含时间控制（如： #delays,@,wait）；也可以包含input、output、inout端口定义和参数；同时也可以调用其他任务或函数。&lt;/p&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt; bus_ctrl_tb;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;typename&quot;&gt;reg&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;typename&quot;&gt;reg&lt;/span&gt; data_valid,data_rd;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cpu ul(data_valid,data,data_in);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;initial&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//在模块中调用task&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cpu_driver(&lt;span class=&quot;number&quot;&gt;8&#39;b0000&lt;/span&gt;_0000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cpu_driver(&lt;span class=&quot;number&quot;&gt;8&#39;b0000&lt;/span&gt;_0000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cpu_driver(&lt;span class=&quot;number&quot;&gt;8&#39;b0000&lt;/span&gt;_0000)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//定义task&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt; cpu_driver;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] data_in;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt; data_valid&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;wait&lt;/span&gt;(data_rd&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; data&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;data_in;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;wait&lt;/span&gt;(data_rd&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; data&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;8&#39;hzz&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt; data_valid&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;endtask&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endmodule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在测试模块中使用任务可以提高程序代码的效率，可以用任务把多次重复的操作包装起来。&lt;/p&gt;
&lt;p&gt;同时要注意的是，模块的任务中，用于定时控制的信号，例如clk绝对不能作为任务的输入。因为输入值只想任务内部传递第一次，而定时控制一般来讲绝对不止一次传递控制。&lt;/p&gt;
&lt;p&gt;不要在程序的不同部分同时调用一个任务。这是因为任务只有一组本地变量，同一时刻调用两次相同的任务将会导致错误。这种情况同时发生在使用定时控制的任务中。&lt;/p&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;parameter&lt;/span&gt; MAX_BITS&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;reg&lt;/span&gt;[MAX_BITS&lt;span class=&quot;keyword&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] D;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt; reverse_bits;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//双向总线端口被当做寄存器类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;inout&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;integer&lt;/span&gt; K;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(K&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;K&lt;span class=&quot;keyword&quot;&gt;&amp;lt;&lt;/span&gt;MAX_BITS;K&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;K&lt;span class=&quot;keyword&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		reverse_bits[MAX_BITS&lt;span class=&quot;keyword&quot;&gt;-&lt;/span&gt;(K&lt;span class=&quot;keyword&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;data[K];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endtask&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clk)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	reverse_bits(D);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码可以看出，在task定义过程中，有直接使用&lt;code&gt;reverse_bits[MAX_BITS-(K+1)]=data[K];&lt;/code&gt;，也就是说，在Verilog中与函数一样，task、function调用都是直接将参数代替函数名直接改变。上面的调用 &lt;code&gt;reverse_bits(D)&lt;/code&gt;等价于:&lt;/p&gt;
&lt;figure class=&quot;highlight mathematica&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;inout [&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;integer &lt;span class=&quot;keyword&quot;&gt;K&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for(&lt;span class=&quot;keyword&quot;&gt;K&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;K&lt;/span&gt;&amp;lt;MAX_BITS;&lt;span class=&quot;keyword&quot;&gt;K&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;K&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;D&lt;/span&gt;[MAX_BITS-(&lt;span class=&quot;keyword&quot;&gt;K&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]=data[&lt;span class=&quot;keyword&quot;&gt;K&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;任务只含有一个双向总线（inout）端口和一个内部变量，没有其他输入端口、输出端口和定时控制，没有引用模块变量。&lt;/p&gt;
&lt;p&gt;在任务调用时候，任务的输入变量（端口）在任务内部被当做寄存器类型变量处理（D）。&lt;/p&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module mult(clk,a,b,&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;,en_mult);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	input clk,en_mult;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	input [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]a,b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	output [&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	reg[&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		always @ (posedge clk)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			//任务调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			multme(a,b,&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	task multme;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		input [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] xme,tome;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		output [&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		wait(en_mult)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;=xme*tome;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	endtask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;模块中定义的任务含有输入，输出，时间控制和一个内部变量，并且引用了一个本模块的变量。任务调用时候参数的顺序应该与任务定义声明的变量顺序相同。&lt;/p&gt;
&lt;h2 id=&quot;function&quot;&gt;function&lt;/h2&gt;&lt;p&gt;函数不能包含定时控制，但是可以在包含定时控制的过程块中调用函数。&lt;/p&gt;
&lt;p&gt;在模块中，使用名为func的函数时，是将它作为名为func的寄存器类型变量来处理。&lt;/p&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module orand(a,b,c,&lt;span class=&quot;keyword&quot;&gt;d&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;e&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt; [&amp;amp;;0] a,b,c,&lt;span class=&quot;keyword&quot;&gt;d&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;e&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	output[7:0] &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;reg&lt;/span&gt;[7:0] &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	always @(a,b,c,&lt;span class=&quot;keyword&quot;&gt;d&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;e&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;=func(a,b,c,&lt;span class=&quot;keyword&quot;&gt;d&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;e&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	function [7:0] func;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt; [7:0] a,b,c,&lt;span class=&quot;keyword&quot;&gt;d&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;e&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;e&lt;/span&gt;==1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			func=(a|b)&amp;amp;(c|&lt;span class=&quot;keyword&quot;&gt;d&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			func=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	endfunction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;不包含任何定时控制语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;至少一个输入，不能含有任何输出和总线口&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;只返回一个值，值的变量名与函数名同名，数据类型默认为reg&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;传递给函数的参数顺序与函数输入口声明的顺序相同&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;函数定义必须在模块定义内&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;函数不能调用任务（因为任务可能包含时间控制），反之可以&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;虽然函数只能返回一个值，但是他的返回值可以直接赋给一个由多个子信号拼购成的信号变量。&lt;code&gt;{o1,o2,o3,o4}=func(a,b,c,d,e)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在函数定义时，如果在函数名之前定义了位宽，则函数就可以返回多bit构成的矢量。如果定义函数的语句比较多时，可以使用&lt;code&gt;begin...end&lt;/code&gt;块。&lt;/p&gt;
&lt;p&gt;函数名前面的位宽代表了返回值（一般就是以函数名为名的reg）的位宽。&lt;/p&gt;
&lt;p&gt;若把函数定义为整型、实型或时间类型，就可以返回相应类型的数据。可以在任何类型的表达式中调用函数。&lt;/p&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight scilab&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module checksub(neg,in_a,in_b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;output neg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input a,b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reg neg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;subtr&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		input &lt;span class=&quot;matrix&quot;&gt;[&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt; in_a,in_b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		subtr=in_a-in_b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endfunction&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;always @(a &lt;span class=&quot;built_in&quot;&gt;or&lt;/span&gt; b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	begin &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(subtr(a,b)&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			neg=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		neg=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;并行块&quot;&gt;并行块&lt;/h1&gt;&lt;p&gt;在测试中经常会用到    &lt;code&gt;fork...join&lt;/code&gt;块。使用并行块能表示以同一个时间起点算起的多个时间的运行，并行的执行复杂的过程结构，如循环或任务。&lt;/p&gt;
&lt;h2 id=&quot;eg&quot;&gt;eg&lt;/h2&gt;
    
    </summary>
    
      <category term="Verilog" scheme="http://peihao.space/categories/Verilog/"/>
    
    
      <category term="Verilog" scheme="http://peihao.space/tags/Verilog/"/>
    
  </entry>
  
  <entry>
    <title>小记(3)</title>
    <link href="http://peihao.space/2016/04/13/%E5%B0%8F%E8%AE%B03/"/>
    <id>http://peihao.space/2016/04/13/小记3/</id>
    <published>2016-04-13T07:54:57.543Z</published>
    <updated>2016-04-13T07:54:57.543Z</updated>
    
    <content type="html">&lt;p&gt;过了17岁的青涩无知，祛了十多岁朝气蓬勃的精神气儿。逐渐长大接近这个社会的真实，逐渐接受麻木的驯服。一个接一个憧憬的或事物，每一个我所认知的、欣赏的人物。这可是我们当中最好的一批人啊，却也跟我一样肮脏、黑暗。不自觉的每个任性闪光，最终都会在挖掘之后令人作呕。&lt;/p&gt;
&lt;p&gt;23分的黑色阳光洒在白皙纯真的脸庞，每一寸都是黑色。乘着城堡下遮盖的柔软龙猫，不想要看到任何物质。每个生物都如此污秽，我无法接受你。越来越快在齿轮的碾压下破碎的理想，编织成三伏天的网。&lt;/p&gt;
&lt;p&gt;自私虚伪。人生不如意之八八九九，心切切不可闻。坐上西部的老爷车，飞向没有卢瑟与温拿的理想世界。十四岁写下的种种缺诬，一百四十年不会削减的向阳花。&lt;/p&gt;
&lt;p&gt;谎言杀死自由，情话强奸温柔。那些或清晰或模糊的片段，随着离去的大风，依旧留在二十岁的铁轨。像当初分开时的那种情节，有时候还是想回到过去。黑暗的不是人间，是完善的人格。回到90岁的中世纪世界,不是卢瑟夫的狂想，我不爱它。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/img/slim-note.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;http://music.163.com/outchain/player?type=2&amp;id=30260069&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;过了17岁的青涩无知，祛了十多岁朝气蓬勃的精神气儿。逐渐长大接近这个社会的真实，逐渐接受麻木的驯服。一个接一个憧憬的或事物，每一个我所认知的、欣赏的人物。这可是我们当中最好的一批人啊，却也跟我一样肮脏、黑暗。不自觉的每个任性闪光，最终都会在挖掘之后令人作呕。&lt;/p&gt;
&lt;p&gt;23分的黑色阳光洒在白皙纯真的脸庞，每一寸都是黑色。乘着城堡下遮盖的柔软龙猫，不想要看到任何物质。每个生物都如此污秽，我无法接受你。越来越快在齿轮的碾压下破碎的理想，编织成三伏天的网。&lt;/p&gt;
&lt;p&gt;自私虚伪。人生不如意之八八九九，心切切不可闻。坐上西部的老爷车，飞向没有卢瑟与温拿的理想世界。十四岁写下的种种缺诬，一百四十年不会削减的向阳花。&lt;/p&gt;
&lt;p&gt;谎言杀死自由，情话强奸温柔。那些或清晰或模糊的片段，随着离去的大风，依旧留在二十岁的铁轨。像当初分开时的那种情节，有时候还是想回到过去。黑暗的不是人间，是完善的人格。回到90岁的中世纪世界,不是卢瑟夫的狂想，我不爱它。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/img/slim-note.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://peihao.space/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://peihao.space/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>太聪明</title>
    <link href="http://peihao.space/2016/04/12/%E5%A4%AA%E8%81%AA%E6%98%8E/"/>
    <id>http://peihao.space/2016/04/12/太聪明/</id>
    <published>2016-04-12T07:36:28.000Z</published>
    <updated>2016-04-17T12:34:54.039Z</updated>
    
    <content type="html">&lt;center&gt;&lt;br&gt;总以为谜一般难懂的我&lt;br&gt;&lt;br&gt;在你了解了以后&lt;br&gt;&lt;br&gt;其实也没什么&lt;br&gt;&lt;br&gt;我总是忽冷又忽热&lt;br&gt;&lt;br&gt;隐藏我的感受&lt;br&gt;&lt;br&gt;只是怕爱你的心被你看透&lt;br&gt;&lt;br&gt;猜的没错想得太多&lt;br&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;不会有结果&lt;br&gt;&lt;br&gt;被你看穿了以后&lt;br&gt;&lt;br&gt;我更无处可躲&lt;br&gt;&lt;br&gt;我开始后悔不应该太聪明的卖弄&lt;br&gt;&lt;br&gt;只是怕亲手将我的真心葬送&lt;br&gt;&lt;br&gt;我猜着你的心&lt;br&gt;&lt;br&gt;要再一次确定&lt;br&gt;&lt;br&gt;遥远的距离都是因为太过聪明&lt;br&gt;&lt;br&gt;要猜着你的心&lt;br&gt;&lt;br&gt;要再一次确定&lt;br&gt;&lt;br&gt;混乱的思绪都是因为太想靠近你&lt;br&gt;&lt;br&gt;猜的没错想得太多&lt;br&gt;&lt;br&gt;不会有结果&lt;br&gt;&lt;br&gt;被你看穿了以后&lt;br&gt;&lt;br&gt;我更无处可躲&lt;br&gt;&lt;br&gt;我开始后悔不应该太聪明的卖弄&lt;br&gt;&lt;br&gt;只是怕亲手将我的真心葬送&lt;br&gt;&lt;br&gt;我猜着你的心&lt;br&gt;&lt;br&gt;要再一次确定&lt;br&gt;&lt;br&gt;遥远的距离都是因为太过聪明&lt;br&gt;&lt;br&gt;要猜着你的心&lt;br&gt;&lt;br&gt;要再一次确定&lt;br&gt;&lt;br&gt;混乱的思绪都是因为太想靠近你&lt;br&gt;&lt;br&gt;猜的没错想得太多&lt;br&gt;&lt;br&gt;不会有结果&lt;br&gt;&lt;br&gt;被你看穿了以后&lt;br&gt;&lt;br&gt;我更无处可躲&lt;br&gt;&lt;br&gt;我开始后悔不应该太聪明的卖弄&lt;br&gt;&lt;br&gt;只是怕亲手将我的真心葬送&lt;br&gt;&lt;br&gt;&lt;embed border=&quot;0&quot; src=&quot;http://music.163.com/outchain/player?type=2&amp;id=209196&amp;auto=1&amp;width=200&amp;height=100&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/center&gt;</content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;br&gt;总以为谜一般难懂的我&lt;br&gt;&lt;br&gt;在你了解了以后&lt;br&gt;&lt;br&gt;其实也没什么&lt;br&gt;&lt;br&gt;我总是忽冷又忽热&lt;br&gt;&lt;br&gt;隐藏我的感受&lt;br&gt;&lt;br&gt;只是怕爱你的心被你看透&lt;br&gt;&lt;br&gt;猜的没错想得太多&lt;br&gt;&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://peihao.space/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://peihao.space/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="音乐" scheme="http://peihao.space/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>testbench实例</title>
    <link href="http://peihao.space/2016/04/12/verilog-testbench-001/"/>
    <id>http://peihao.space/2016/04/12/verilog-testbench-001/</id>
    <published>2016-04-12T06:17:22.000Z</published>
    <updated>2016-04-12T14:03:48.398Z</updated>
    
    <content type="html">&lt;p&gt;本文介绍在ISE开发环境下，由两个16bit加法器构成的、可以完成4个16bit输入的18bit输出加法器。&lt;/p&gt;
&lt;h1 id=&quot;IP核&quot;&gt;IP核&lt;/h1&gt;&lt;p&gt;IP Core就是预先设计好、经过严格测试和优化过的电路功能模块，如乘法器、FIR滤波器、PCI接口等，并且一般采用参数可配置的结构，方便用户根据实际情况来调用这些模块。随着FPGA规模的增加，使用IP core完成设计成为发展趋势。&lt;/p&gt;
&lt;p&gt;IP Core生成器（Core Generator）是Xilinx FPGA设计中的一个重要设计工具，提供了大量成熟的、高效的IP Core为用户所用，涵盖了汽车工业、基本单元、通信和网络、数字信号处理、FPGA特点和设计、数学函数、记忆和存储单元、标准总线接口等8大类。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;IP核生成器的使用&quot;&gt;IP核生成器的使用&lt;/h1&gt;&lt;p&gt;在这里，我们使用ISE提供的IP Core生成器创建3个加法器IP Core。包含2个16bit 2输入加法器与1个17bit 2输入加法器。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;\img\article\ise\ise-newsource-wizard.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击工程器件，右键新建源文件。选择IP Core，填写基本信息后，在IP Core目录中选择&lt;code&gt;Math Function&lt;/code&gt;-&amp;gt;&lt;code&gt;Adders Subtracter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/IP-Core-proper.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;填写基本的IP Core属性。16bit输入的加法器，输出时17bit；同理17bit输入、输出时18bit。&lt;/p&gt;
&lt;p&gt;IP Core在综合时被认为是黑盒子，综合器不对IP Core做任何编译。IP Core的仿真主要是运用Core Generator的仿真模型来完成的，会自动生成扩展名为.v的源代码文件。设计人员只需要从该源文件中查看其端口声明，将其作为一个普通的子程序进行调用即可。&lt;/p&gt;
&lt;h1 id=&quot;逻辑生成&quot;&gt;逻辑生成&lt;/h1&gt;&lt;figure class=&quot;highlight openscad&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`timescale &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ns / &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    input clk,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    input [&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] a1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    input [&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] a2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    input [&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] b1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    input [&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] b2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    output [&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    )&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;wire&lt;/span&gt; [16:0] &lt;span class=&quot;title&quot;&gt;ab1&lt;/span&gt;,&lt;span class=&quot;title&quot;&gt;ab2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;adder16_1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.a&lt;span class=&quot;params&quot;&gt;(a1)&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.b&lt;span class=&quot;params&quot;&gt;(a2)&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.s&lt;span class=&quot;params&quot;&gt;(ab1)&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.clk&lt;span class=&quot;params&quot;&gt;(clk)&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;adder16_2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.a&lt;span class=&quot;params&quot;&gt;(b1)&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.b&lt;span class=&quot;params&quot;&gt;(b2)&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.s&lt;span class=&quot;params&quot;&gt;(ab2)&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.clk&lt;span class=&quot;params&quot;&gt;(clk)&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;adder17&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;adder7&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.a&lt;span class=&quot;params&quot;&gt;(ab1)&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.b&lt;span class=&quot;params&quot;&gt;(ab2)&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.s&lt;span class=&quot;params&quot;&gt;(c)&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.clk&lt;span class=&quot;params&quot;&gt;(clk)&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;endmodule&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里定义了两个wire类型变量存储16bit输入的加法器输出结果，同时作为17bit加法器的输入。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/adder-RTL.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图是RTL级结构。&lt;/p&gt;
&lt;h1 id=&quot;TestBench文件编写&quot;&gt;TestBench文件编写&lt;/h1&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`timescale &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ns / &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;module&lt;/span&gt; ttt&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Inputs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	reg clk&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	reg [&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;literal&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	reg [&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;literal&quot;&gt;a2&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	reg [&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;b1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;	reg [&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;b2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Outputs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wire [&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] c&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Instantiate the Unit Under Test (UUT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;add &lt;/span&gt;uut (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.clk(clk), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.a1(&lt;span class=&quot;literal&quot;&gt;a1&lt;/span&gt;), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.a2(&lt;span class=&quot;literal&quot;&gt;a2&lt;/span&gt;), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.&lt;span class=&quot;keyword&quot;&gt;b1(b1), &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.&lt;span class=&quot;keyword&quot;&gt;b2(b2), &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.c(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	initial &lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;		// Initialize Inputs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		clk = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;literal&quot;&gt;a1&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;literal&quot;&gt;a2&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;b1 &lt;/span&gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;b2 &lt;/span&gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// Wait &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; ns for &lt;span class=&quot;preprocessor&quot;&gt;global&lt;/span&gt; reset to finish&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;number&quot;&gt;#100&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// &lt;span class=&quot;keyword&quot;&gt;Add &lt;/span&gt;stimulus here&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		forever &lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;			&lt;span class=&quot;number&quot;&gt;#5&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			clk=~clk&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt;(clk=&lt;span class=&quot;number&quot;&gt;=1&lt;/span&gt;)&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;				&lt;span class=&quot;literal&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;label&quot;&gt;=a1&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;literal&quot;&gt;a2&lt;/span&gt;&lt;span class=&quot;label&quot;&gt;=a2&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;b1=b1+1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;				&lt;span class=&quot;keyword&quot;&gt;b2=b2+1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;			&lt;span class=&quot;preprocessor&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;preprocessor&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;preprocessor&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;endmodule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面设置的激励规定了输入初始值全为0，同时每隔10ns，4个模块15bit变量输入值加1。在仿真中可以看到仿真结果，由于每一级都会产生一个时钟周期的延迟，最终会有2个时钟周期的延迟。&lt;/p&gt;
&lt;h1 id=&quot;Tips&quot;&gt;Tips&lt;/h1&gt;&lt;p&gt;要注意的是，在IP Core创建的时候，一定要确保所有输入端口都有用到。我刚开始生成的时候，多选择了&lt;code&gt;C_in&lt;/code&gt;输入，导致在综合是由Warn提醒，同时在测试时，输出仿真失败，显示红色警告。18bit的输出结果最低2bit一直是xx.这里一定要注意。对于FPGA仿真而言，每一个值都应该有初始值设置。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍在ISE开发环境下，由两个16bit加法器构成的、可以完成4个16bit输入的18bit输出加法器。&lt;/p&gt;
&lt;h1 id=&quot;IP核&quot;&gt;IP核&lt;/h1&gt;&lt;p&gt;IP Core就是预先设计好、经过严格测试和优化过的电路功能模块，如乘法器、FIR滤波器、PCI接口等，并且一般采用参数可配置的结构，方便用户根据实际情况来调用这些模块。随着FPGA规模的增加，使用IP core完成设计成为发展趋势。&lt;/p&gt;
&lt;p&gt;IP Core生成器（Core Generator）是Xilinx FPGA设计中的一个重要设计工具，提供了大量成熟的、高效的IP Core为用户所用，涵盖了汽车工业、基本单元、通信和网络、数字信号处理、FPGA特点和设计、数学函数、记忆和存储单元、标准总线接口等8大类。
    
    </summary>
    
      <category term="Verilog" scheme="http://peihao.space/categories/Verilog/"/>
    
    
      <category term="Verilog" scheme="http://peihao.space/tags/Verilog/"/>
    
  </entry>
  
  <entry>
    <title>Verilog的testbench入门</title>
    <link href="http://peihao.space/2016/04/11/verilog-testbench-intro/"/>
    <id>http://peihao.space/2016/04/11/verilog-testbench-intro/</id>
    <published>2016-04-11T06:17:22.000Z</published>
    <updated>2016-04-11T13:27:10.955Z</updated>
    
    <content type="html">&lt;h1 id=&quot;基础知识&quot;&gt;基础知识&lt;/h1&gt;&lt;p&gt;Test bench即Verilog需要编写的测试文件。在module设计完成、综合之后我们需要通过测试文件完成对设计module的测试。&lt;/p&gt;
&lt;p&gt;Test bench大致分为下面三个部分:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时钟控制 clock control&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般采用always实现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;实例化instantiate要测试的module&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对实例的输入赋值&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;与待测模块的接口:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;与输出端口相连接的变量定义为reg&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;与输出端口相连的定义为wire&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;初始化变量&quot;&gt;初始化变量&lt;/h2&gt;&lt;p&gt;Verilog中使用&lt;code&gt;initial&lt;/code&gt;block初始化变量。&lt;/p&gt;
&lt;h2 id=&quot;时钟的产生&quot;&gt;时钟的产生&lt;/h2&gt;&lt;p&gt;&lt;code&gt;always # 10 clk=~clk;&lt;/code&gt; 产生时钟&lt;/p&gt;
&lt;p&gt;&lt;code&gt;initial repeat(13) #5 clk=~clk&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;控制只产生13个时钟&lt;/p&gt;
&lt;h2 id=&quot;同步数据&quot;&gt;同步数据&lt;/h2&gt;&lt;p&gt;&lt;code&gt;initial forever @ (posedge clk) #3 x=$random;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;为了降低多个输入同时翻转的概率，对时序电路的输入一般采用素数作为时间间隔&lt;/p&gt;
&lt;h2 id=&quot;随机数据&quot;&gt;随机数据&lt;/h2&gt;&lt;p&gt;&lt;code&gt;initial repeat(5) #7 x=$random;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a=$random%60;&lt;/code&gt; //产生-59到59之间的随机数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a={$random}%60;&lt;/code&gt; //产生0到59之间的随机数&lt;/p&gt;
&lt;h2 id=&quot;产生随机事件间隔&quot;&gt;产生随机事件间隔&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;always &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;t&lt;/span&gt;=$random&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	#(&lt;span class=&quot;keyword&quot;&gt;t&lt;/span&gt;) x=$random;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;数据缓存&quot;&gt;数据缓存&lt;/h2&gt;&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;initial&lt;/span&gt; buffer &lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&#39;b1110&lt;/span&gt;_0001_1011_0101;&lt;span class=&quot;comment&quot;&gt;//将测试数据进行初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;always&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clk)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;x&lt;/span&gt;,buffer&lt;span class=&quot;keyword&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;&amp;#123;&lt;/span&gt;buffer,&lt;span class=&quot;number&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//可以在控制的数据下输入信号x&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;读取数据文件&quot;&gt;读取数据文件&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;reg [&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] mem1[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;//定义一个1KB的存储&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;initial begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	$readmemh(data1.dat,mem1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;简单的实例&quot;&gt;简单的实例&lt;/h1&gt;&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;timescale&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ns &lt;span class=&quot;keyword&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;ps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;`&lt;/span&gt;include &lt;span class=&quot;string&quot;&gt;&quot;adder.v&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt; test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Inputs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;typename&quot;&gt;reg&lt;/span&gt; a,b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;typename&quot;&gt;wire&lt;/span&gt; sum,count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 实例化待测试模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	add uut (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;typename&quot;&gt;.sum&lt;/span&gt;(sum),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;typename&quot;&gt;.c&lt;/span&gt;(count), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;typename&quot;&gt;.b&lt;/span&gt;(b), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;typename&quot;&gt;.a&lt;/span&gt;(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;initial&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// Initialize Inputs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		a&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//没经过20个单位时间，a取反&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;forever&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; a&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;~&lt;/span&gt;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;initial&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// Initialize Inputs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		b&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//没经过10个单位时间，b取反&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;forever&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; b&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;~&lt;/span&gt;b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;initial&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//监控输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		$monitor()$&lt;span class=&quot;typename&quot;&gt;time&lt;/span&gt;,,,&lt;span class=&quot;string&quot;&gt;&quot;%d+%d=&amp;#123;%d,%d&amp;#125;&quot;&lt;/span&gt;,a,b,count,sum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt; $stop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endmodule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Tip&quot;&gt;Tip&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$monitor&lt;/code&gt;  出输出打印显示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$stop&lt;/code&gt;  停止当前仿真&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;￥finish&lt;/code&gt;  结束仿真&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;时钟产生&quot;&gt;时钟产生&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用initial语句&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;reg&lt;/span&gt; clock;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;initial&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	clock&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;forever&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; clock&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;~&lt;/span&gt;clock;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用always语句&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;reg&lt;/span&gt; clock;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;initial&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	clock=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;always&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;#10 clock=~clock;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基础知识&quot;&gt;基础知识&lt;/h1&gt;&lt;p&gt;Test bench即Verilog需要编写的测试文件。在module设计完成、综合之后我们需要通过测试文件完成对设计module的测试。&lt;/p&gt;
&lt;p&gt;Test bench大致分为下面三个部分:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时钟控制 clock control&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般采用always实现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;实例化instantiate要测试的module&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对实例的输入赋值&lt;/p&gt;
    
    </summary>
    
      <category term="Verilog" scheme="http://peihao.space/categories/Verilog/"/>
    
    
      <category term="Verilog" scheme="http://peihao.space/tags/Verilog/"/>
    
  </entry>
  
  <entry>
    <title>Verilog中的timescale</title>
    <link href="http://peihao.space/2016/04/10/verilog-timescale/"/>
    <id>http://peihao.space/2016/04/10/verilog-timescale/</id>
    <published>2016-04-10T06:17:22.000Z</published>
    <updated>2016-04-10T09:12:32.741Z</updated>
    
    <content type="html">&lt;p&gt;在Verilog HDL 模型中，所有时延都用单位时间表述。使用`timescale&lt;br&gt;编译器指令将时间单位与实际时间相关联。该指令用于定义时延的单位和时延精度。&lt;/p&gt;
&lt;p&gt;`timescale编译器指令格式为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timescale time_unit / time_precision&lt;/code&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;time_unit 单位时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;time_precision  时间精度&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;time_unit 和time_precision 由值1、10、和100以及单位s、ms、us、ns、ps和fs组成。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`timescale &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ns/ &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;ps &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;module &lt;span class=&quot;title&quot;&gt;AndFunc&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(Z, A, B)&lt;/span&gt;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;output Z; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input A, B;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;and &lt;span class=&quot;preprocessor&quot;&gt;# (&lt;span class=&quot;number&quot;&gt;5.22&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6.17&lt;/span&gt; ) Al (Z, A, B); &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//规定了上升及下降时延值。 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译器指令定义时延以ns为单位，并且时延精度为 0.1 ns（100 ps）。因此，时延值(#5.22)即代表5.22ns，5.22对应5.2 ns, 时延6.17对应6.2 ns。如果用如下的`timescale程序指令代替上例中的编译器指令,&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`timescale &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;ns/&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ns&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;则基础的时间单位为10ns，精度1ns。5.22代表52.2ns，固定到精度上就是52ns。同理，6.17转换为62ns。&lt;/p&gt;
&lt;p&gt;在编译过程中，timescale指令影响这一编译器指令后面所有模块中的时延值，直至遇到另一timescale指令或resetall指令。当一个设计中的多个模块带有自身的`timescale编译指令时将发生什么？在这种情况下，模拟器总是定位在所有模块的最小时延精度上，并且所有时延都相应地换算为最小时延精度。&lt;/p&gt;
&lt;p&gt;在verilog中是没有默认timescale的。一个没有指定timescale的verilog模块就有可能错误的继承了前面编译模块的无效timescale参数。所以在verilog的LRM中推荐在每个module的前面指定&lt;code&gt;timescale,并且相
应的在最后加一个&lt;/code&gt;resetall来确保timescale的局部有效。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在Verilog HDL 模型中，所有时延都用单位时间表述。使用`timescale&lt;br&gt;编译器指令将时间单位与实际时间相关联。该指令用于定义时延的单位和时延精度。&lt;/p&gt;
&lt;p&gt;`timescale编译器指令格式为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timescale time_unit / time_precision&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Verilog" scheme="http://peihao.space/categories/Verilog/"/>
    
    
      <category term="Verilog" scheme="http://peihao.space/tags/Verilog/"/>
    
  </entry>
  
  <entry>
    <title>ISE数字设计入门体验</title>
    <link href="http://peihao.space/2016/04/09/Ise-wizard/"/>
    <id>http://peihao.space/2016/04/09/Ise-wizard/</id>
    <published>2016-04-09T15:17:22.000Z</published>
    <updated>2016-04-09T14:51:35.320Z</updated>
    
    <content type="html">&lt;h1 id=&quot;ISE数字设计&quot;&gt;ISE数字设计&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;\img\article\ise\3bit-counter.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;一个典型的使用ISE设计的数字系统一般包含以下步骤:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;工程的建立&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模块设计&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设计综合和查看综合结果&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;工程设计仿真&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分频器的设计&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用户约束的添加和设计是实现&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;布局布线结果查看&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设计下载到FPGA芯片&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PROM文件的生成和下载到PROM中&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;源文件类型&quot;&gt;源文件类型&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;\img\article\ise\ise-newsource-wizard.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如上图，在添加新的源文件时候，会根据我们目的的不同选择文件类型。这些文件类型从上往下依次是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;块存储器映像文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在线逻辑分析仪Chipscope定义和连接文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实现约束文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IP生成向导&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;存储器文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;原理图文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用户文档文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Verilog模块模板文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Verilog测试平台模板文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;VHDL模块模板文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;VHDL库模板文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;VHDL包模板文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;VHDL测试平台模板文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;片上系统设计向导&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;three-bit-counter&quot;&gt;three-bit-counter&lt;/h1&gt;&lt;p&gt;新建一个VHDL模块模板文件之后，根据我们要设计的3位计数器设计逻辑：&lt;/p&gt;
&lt;figure class=&quot;highlight vhdl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;library&lt;/span&gt; IEEE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; IEEE.STD_LOGIC_1164.&lt;span class=&quot;keyword&quot;&gt;ALL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; IEEE.STD_LOGIC_ARITH.&lt;span class=&quot;keyword&quot;&gt;ALL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; IEEE.STD_LOGIC_UNSIGNED.&lt;span class=&quot;keyword&quot;&gt;ALL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Uncomment the following library declaration if using&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- arithmetic functions with Signed or Unsigned values&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--use IEEE.NUMERIC_STD.ALL;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Uncomment the following library declaration if instantiating&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- any Xilinx primitives in this code.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--library UNISIM;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--use UNISIM.VComponents.all;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;entity&lt;/span&gt; top &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//此处添加端口声明语句&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;port&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	clk	: &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;std_logic&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rst	: &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;std_logic&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	counter 	: &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;std_logic_vector&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;downto&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; top;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;architecture&lt;/span&gt; Behavioral &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; top &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//内部信号量声明语句&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt; counter_tmp : &lt;span class=&quot;typename&quot;&gt;std_logic_vector&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;downto&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//添加信号连接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;counter&amp;lt;=counter_tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;process&lt;/span&gt;(clk,rst)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;typename&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;进制计数器模块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(rst=&lt;span class=&quot;literal&quot;&gt;&#39;0&#39;&lt;/span&gt;)&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			counter_tmp&amp;lt;=&lt;span class=&quot;string&quot;&gt;&quot;000&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;elsif&lt;/span&gt; rising_edge(clk)&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			counter_tmp&amp;lt;=counter_tmp+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;process&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; Behavioral;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;设计的综合&quot;&gt;设计的综合&lt;/h1&gt;&lt;p&gt;ISE综合工具在对设计的综合过程中，主要执行以下三个步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;语法检查过程，检查设计文件语法是否有错误&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编译过程，翻译和优化HDL代码，将其转化为综合工具可以识别的&lt;strong&gt;元件序列&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;映射过程，将这些可以识别的元件序列转化为可识别的目标技术的基本原件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在ISEden主页面的处理子串口的&lt;strong&gt;Synthesis&lt;/strong&gt;工具可以完成:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;查看RTL原理图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看技术原理图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;检查语法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;产生综合后仿真模型&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;进行行为仿真&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在ISE主页面的Design区域选中Simulation选项.选中已经添加的逻辑模块右键添加测试文件.&lt;/p&gt;
&lt;figure class=&quot;highlight vhdl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;LIBRARY&lt;/span&gt; ieee;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;USE&lt;/span&gt; ieee.std_logic_1164.&lt;span class=&quot;keyword&quot;&gt;ALL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Uncomment the following library declaration if using&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- arithmetic functions with Signed or Unsigned values&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--USE ieee.numeric_std.ALL;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ENTITY&lt;/span&gt; test &lt;span class=&quot;keyword&quot;&gt;IS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;END&lt;/span&gt; test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ARCHITECTURE&lt;/span&gt; behavior &lt;span class=&quot;keyword&quot;&gt;OF&lt;/span&gt; test &lt;span class=&quot;keyword&quot;&gt;IS&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;-- Component Declaration for the Unit Under Test (UUT)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;COMPONENT&lt;/span&gt; top&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;PORT&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         clk : &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;  &lt;span class=&quot;typename&quot;&gt;std_logic&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         rst : &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;  &lt;span class=&quot;typename&quot;&gt;std_logic&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         counter : &lt;span class=&quot;keyword&quot;&gt;OUT&lt;/span&gt;  &lt;span class=&quot;typename&quot;&gt;std_logic_vector&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;downto&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMPONENT&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;--Inputs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt; clk : &lt;span class=&quot;typename&quot;&gt;std_logic&lt;/span&gt; := &lt;span class=&quot;literal&quot;&gt;&#39;0&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt; rst : &lt;span class=&quot;typename&quot;&gt;std_logic&lt;/span&gt; := &lt;span class=&quot;literal&quot;&gt;&#39;0&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;comment&quot;&gt;--Outputs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt; counter : &lt;span class=&quot;typename&quot;&gt;std_logic_vector&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;downto&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;-- Clock period definitions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;constant&lt;/span&gt; clk_period : &lt;span class=&quot;typename&quot;&gt;time&lt;/span&gt; := &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; ns;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;BEGIN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;-- Instantiate the Unit Under Test (UUT)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   uut: top &lt;span class=&quot;keyword&quot;&gt;PORT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;MAP&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          clk =&amp;gt; clk,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          rst =&amp;gt; rst,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          counter =&amp;gt; counter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//添加rst信号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;process&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rst&amp;lt;=&lt;span class=&quot;literal&quot;&gt;&#39;0&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; ns;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rst&amp;lt;=&lt;span class=&quot;literal&quot;&gt;&#39;1&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ms;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;process&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//生成clk信号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;process&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	clk&amp;lt;=&lt;span class=&quot;literal&quot;&gt;&#39;0&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; ns;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	clk&amp;lt;=&lt;span class=&quot;literal&quot;&gt;&#39;1&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; ns;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;process&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;END&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;完成之后点击子任务区域的SImulate Behavioral Model，手动Zoom Out测试。&lt;/p&gt;
&lt;p&gt;为了在硬件上看到灯的变化所反映的计数器工作状态，需要在top.vhd文件添加分频时钟代码。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ISE数字设计&quot;&gt;ISE数字设计&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;\img\article\ise\3bit-counter.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;一个典型的使用ISE设计的数字系统一般包含以下步骤:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;工程的建立&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模块设计&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设计综合和查看综合结果&lt;/p&gt;
    
    </summary>
    
      <category term="ISE" scheme="http://peihao.space/categories/ISE/"/>
    
    
      <category term="ISE" scheme="http://peihao.space/tags/ISE/"/>
    
  </entry>
  
  <entry>
    <title>Android之Context、this</title>
    <link href="http://peihao.space/2016/04/07/context/"/>
    <id>http://peihao.space/2016/04/07/context/</id>
    <published>2016-04-07T06:17:22.000Z</published>
    <updated>2016-04-07T05:09:49.463Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Context&quot;&gt;Context&lt;/h1&gt;&lt;p&gt;context不是函数而是一个类。如果不太了解面向对象，可以把“类”看做一种数据类型，就像int，不过类型为“类”的数据（称为对象）可能储存远比int多的信息，比如这里的类型为Context的对象就储存关于程序、窗口的一些资源。&lt;/p&gt;
&lt;p&gt;有些函数调用时需要一个Context参数，比如Toast.makeText，因为函数需要知道是在哪个界面中显示的Toast。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;再比如，ButtonmyButton = new Button(this); 这里也需要Context参数（this），表示这个按钮是在“this”这个屏幕中显示的。&lt;/p&gt;
&lt;p&gt;Android开发使用（纯粹的）面向对象语言，一切都是对象，就连我们写的函数都是对象的函数。&lt;/p&gt;
&lt;h1 id=&quot;小例&quot;&gt;小例&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Toast.makeText(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;OK!&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Button button1 = (Button)findViewById(R.id.button1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       button1.setOnClickListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Button.OnClickListener()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View v)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               Toast.makeText(MainActivity.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里OnCreate就是MainActivity的对象的函数（MainActivity是类），所以这个函数中的this就表示当前的、包含这个函数的MainActivity对象。&lt;/p&gt;
&lt;p&gt;MainActivity extends Activity，意思是MainActivity 继承 Activity，即MainActivity 是 Activity 的一种，所有的MainActivity 都是 Activity。同样，在Android文档中Activity继承ContextThemeWrapper，ContextThemeWrapper继承ContextWrapper，ContextWrapper继承Context。所以this这个MainActivity也是Context，把this传入Toast.makeText表示“OK!”是在当前的MainActivity对象（也是Context）中显示的。&lt;/p&gt;
&lt;p&gt;对于显示”Hello,world!”的Toast.makeText，这个函数在onClick中，而onClick是new Button.OnClickListener(){…}这个没有名字的类的函数，this表示匿名类的对象，不表示MainActivity对象，所以这里用MainActivity.this，强制选择外面一层MainActivity的this。&lt;br&gt;在activity和 service中使用的this，的确可以代替context，因为activity和service本身就是继承于context类的，也就是说，那里面的this，就是一个context。&lt;/p&gt;
&lt;p&gt;再来说上面这个context为什么不能用。因为toast是一个view，每一个view被添加的时候都需要一个token，activity中的context就包含了当前activity窗口的token，所以能够使用，而onReceive中的context，并不是隶属于某个应用程序进程的，而是属于系统的context，所以这里会报错。&lt;/p&gt;
&lt;p&gt;将this替换成为context是因为此类继承自BroadcastReceiver，并非继承自Activity.&lt;/p&gt;
&lt;p&gt;activity继承自context,activity.this可以当做一个context。而BroadcastReceiver直接继承自Object，它的this不再属于context，不能当做上下文，成为函数的参数&lt;/p&gt;
&lt;h1 id=&quot;Context的类型&quot;&gt;Context的类型&lt;/h1&gt;&lt;p&gt;应用程序创建Context实例的情况有如下几种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建Application 对象时， 而且整个App共一个Application对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建Service对象时&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建Activity对象时&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此应用程序App共有的Context数目公式为：&lt;/p&gt;
&lt;p&gt;总Context实例个数 = Service个数 + Activity个数 + 1（Application对应的Context实例）&lt;/p&gt;
&lt;p&gt;并不是所有的context实例都是等价的。根据Android应用的组件不同，你访问的context推向有些细微的差别。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Application&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是一个运行在你的应用进程中的单例。在Activity或者Service中，它可以通过getApplication()函数获得，或者人和继承于context的对象中，通过getApplicationContext()方法获得。不管你是通过何种方法在哪里获得的，在一个进程内，你总是获得到同一个实例。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Activity/Service&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;继承于ContextWrapper，它实现了与context同样API，但是代理这些方法调用到内部隐藏的Context实例，即我们所知道的基础context。任何时候当系统创建一个新的Activity或者Service实例的时候，它也创建一个新的ContextImpl实例来做所有的繁重的工作。每一个Activity和Service以及其对应的基础context，对每个实例来说都是唯一的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BroadcastReciver&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它本身不是context，也没有context在它里面，但是每当一个新的广播到达的时候，框架都传递一个context对象到onReceive()。这个context是一个ReceiverRestrictedContext实例，它有两个主要函数被禁掉：registerReceiver()和bindService()。这两个函数在BroadcastReceiver.onReceive()不允许调用。每次Receiver处理一个广播，传递进来的context都是一个新的实例。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ContentProvider&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它本身也不是一个Context，但是它可以通过getContext()函数给你一个Context对象。如果ContentProvider是在调用者的的本地（例如，在同一个应用进程），getContext()将返回的是Application单例。然而，如果调用这和ContentProvider在不同的进程的时候，它将返回一个新创建的实例代表这个Provider所运行的包。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Context&quot;&gt;Context&lt;/h1&gt;&lt;p&gt;context不是函数而是一个类。如果不太了解面向对象，可以把“类”看做一种数据类型，就像int，不过类型为“类”的数据（称为对象）可能储存远比int多的信息，比如这里的类型为Context的对象就储存关于程序、窗口的一些资源。&lt;/p&gt;
&lt;p&gt;有些函数调用时需要一个Context参数，比如Toast.makeText，因为函数需要知道是在哪个界面中显示的Toast。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://peihao.space/categories/Android/"/>
    
    
      <category term="Android" scheme="http://peihao.space/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Gulp介绍</title>
    <link href="http://peihao.space/2016/04/06/Gulp-intro/"/>
    <id>http://peihao.space/2016/04/06/Gulp-intro/</id>
    <published>2016-04-06T06:17:22.000Z</published>
    <updated>2016-04-06T06:15:57.168Z</updated>
    
    <content type="html">&lt;h1 id=&quot;介绍&quot;&gt;介绍&lt;/h1&gt;&lt;h2 id=&quot;什么是Gulp&quot;&gt;什么是Gulp&lt;/h2&gt;&lt;p&gt;&lt;code&gt;gulp.js&lt;/code&gt;是一种基于流的，代码优于配置的新一代构建工具.&lt;a href=&quot;https://github.com/gulpjs/gulp/tree/master/docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Gulp&lt;/code&gt;和&lt;code&gt;Grunt&lt;/code&gt;类似。但相比于 Grunt 的频繁的 I/O 操作，Gulp 的流操作，能更快地完成构建&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Gulp特性&quot;&gt;Gulp特性&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用方便&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过代码优于配置的策略，Gulp可以让简单的任务简单，复杂的任务更可管理。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构建快速&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过流式操作，减少频繁的 IO 操作，更快地构建项目。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插件高质&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gulp 有严格的插件指导策略，确保插件能简单高质的工作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;易于学习&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;少量的API，掌握Gulp可以毫不费力。构建就像流管道一样，轻松加愉快。&lt;/p&gt;
&lt;h1 id=&quot;Gulp安装&quot;&gt;Gulp安装&lt;/h1&gt;&lt;p&gt;Gulp是基于&lt;code&gt;Node.js&lt;/code&gt;的，故要首先安装 Node.js。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install -g gulp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后按以下清单文件安装&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;gulp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-htmlclean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-htmlmin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-imagemin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-minify-css&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-uglify&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;方法是同样的,&lt;code&gt;npm install xxx --save&lt;/code&gt;，xxx即为清单列表文件名&lt;/p&gt;
&lt;p&gt;其中gulp是工程的核心程序，Gulp采用插件方式进行工作，下面的5个文件就是基于Gulp的插件.&lt;a href=&quot;http://gulpjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gulp插件列表&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;使用Gulp优化Hexo&quot;&gt;使用Gulp优化Hexo&lt;/h1&gt;&lt;h2 id=&quot;建立gulpfile-js&quot;&gt;建立gulpfile.js&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; gulp = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Plugins模块获取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; minifycss = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-minify-css&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; uglify = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-uglify&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; htmlmin = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-htmlmin&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; htmlclean = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-htmlclean&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; imagemin = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-imagemin&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 压缩 public 目录 css文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;minify-css&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./public/**/*.css&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(minifycss())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./public&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 压缩 public 目录 html文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;minify-html&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./public/**/*.html&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(htmlclean())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(htmlmin(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             removeComments: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             minifyJS: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             minifyCSS: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             minifyURLs: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./public&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 压缩 public/js 目录 js文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;minify-js&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./public/**/*.js&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(uglify())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./public&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 压缩图片任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 在命令行输入 gulp images 启动此任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;images&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 1. 找到图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./photos/*.*&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 2. 压缩图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(imagemin(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                progressive: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 3. 另存图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;dist/images&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 执行 gulp 命令时执行的任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;default&#39;&lt;/span&gt;, [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;minify-html&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;minify-css&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;minify-js&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;images&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;运行&quot;&gt;运行&lt;/h2&gt;&lt;p&gt;要运行gulp任务，只需切换到存放gulpfile.js文件的目录，然后在终端中执行gulp命令就行了，gulp后面可以加上要执行的任务名，例如gulp task1，如果没有指定任务名，则会执行任务名为default的默认任务。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;介绍&quot;&gt;介绍&lt;/h1&gt;&lt;h2 id=&quot;什么是Gulp&quot;&gt;什么是Gulp&lt;/h2&gt;&lt;p&gt;&lt;code&gt;gulp.js&lt;/code&gt;是一种基于流的，代码优于配置的新一代构建工具.&lt;a href=&quot;https://github.com/gulpjs/gulp/tree/master/docs&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Gulp&lt;/code&gt;和&lt;code&gt;Grunt&lt;/code&gt;类似。但相比于 Grunt 的频繁的 I/O 操作，Gulp 的流操作，能更快地完成构建
    
    </summary>
    
      <category term="Gulp" scheme="http://peihao.space/categories/Gulp/"/>
    
    
      <category term="Gulp" scheme="http://peihao.space/tags/Gulp/"/>
    
  </entry>
  
  <entry>
    <title>gitignore忽略规则</title>
    <link href="http://peihao.space/2016/04/05/gitignore/"/>
    <id>http://peihao.space/2016/04/05/gitignore/</id>
    <published>2016-04-05T08:17:22.000Z</published>
    <updated>2016-04-06T05:44:44.214Z</updated>
    
    <content type="html">&lt;p&gt;.gitignore 配置文件用于配置不需要加入版本管理的文件，配置好该文件可以为我们的版本管理带来很大的便利，以下是个人对于配置 .gitignore 的一些心得。&lt;/p&gt;
&lt;h1 id=&quot;配置语法&quot;&gt;配置语法&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;以斜杠“/”开头表示目录；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以星号“*”通配多个字符；&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以问号“?”通配单个字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以方括号“[]”包含单个字符的匹配列表；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以叹号“!”表示是跟踪（不忽略）某个文件或目录。；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;#此为注释 – 将被 Git 忽略&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[ ^abc]：代表必须不是a,b,c中任一字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[abc]：代表a,b,c中任一字符即可&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;{ab,bb,cx}：代表ab,bb,cx中任一类型即可&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;{!ab}：必须不是此类型    &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　&lt;/p&gt;
&lt;p&gt;此外，git 对于 .ignore 配置文件是按行从上到下进行规则匹配的，意味着如果前面的规则匹配的范围更大，则后面的规则将不会生效；&lt;/p&gt;
&lt;h1 id=&quot;示例&quot;&gt;示例&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;fd1/*&lt;/code&gt;&lt;br&gt;说明：忽略目录 fd1 下的全部内容；注意，不管是根目录下的 /fd1/ 目录，还是某个子目录 /child/fd1/ 目录，都会被忽略；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/fd1/*&lt;/code&gt;&lt;br&gt;说明：忽略根目录下的 /fd1/ 目录的全部内容；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;3.&lt;br&gt;&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;change&quot;&gt;!.gitignore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;change&quot;&gt;!/fw/bin/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;change&quot;&gt;!/fw/sf/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4.&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*.a       #忽略所有 .a 结尾的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;!lib.a    #但 lib.a 除外&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/TODO     #仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;build/    #忽略 build/ 目录下的所有文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;doc/*.txt #会忽略 doc/notes.txt 但不包括 doc/server/arch.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说明：忽略全部内容，但是不忽略 .gitignore 文件、根目录下的 /fw/bin/ 和 /fw/sf/ 目录&lt;/p&gt;
&lt;h1 id=&quot;Tip&quot;&gt;Tip&lt;/h1&gt;&lt;p&gt;规则很简单，但是有时候在项目开发过程中，突然心血来潮想把某些目录或文件加入忽略规则，按照上述方法定义后发现并未生效。原因是.gitignore只能忽略那些原来没有被track（跟踪过）的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。那么解决方法就是先把本地缓存删除（改变成未track状态），然后再提交。&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git rm -r --cached &lt;span class=&quot;class&quot;&gt;.gitignore&lt;/span&gt; #从版本库中删除文件，但不从硬盘删除&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add &lt;span class=&quot;class&quot;&gt;.gitignore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&#39;update .gitignore&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者直接&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git rm &amp;lt;file&amp;gt;  #从版本库中删除文件，同时在硬盘中剔除&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;.gitignore 配置文件用于配置不需要加入版本管理的文件，配置好该文件可以为我们的版本管理带来很大的便利，以下是个人对于配置 .gitignore 的一些心得。&lt;/p&gt;
&lt;h1 id=&quot;配置语法&quot;&gt;配置语法&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;以斜杠“/”开头表示目录；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以星号“*”通配多个字符；&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://peihao.space/categories/Git/"/>
    
    
      <category term="Git" scheme="http://peihao.space/tags/Git/"/>
    
  </entry>
  
</feed>

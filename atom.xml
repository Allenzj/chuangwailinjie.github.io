<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>窗外临街</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://peihao.space/"/>
  <updated>2016-04-07T05:09:49.463Z</updated>
  <id>http://peihao.space/</id>
  
  <author>
    <name>培豪</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android之Context、this</title>
    <link href="http://peihao.space/2016/04/07/context/"/>
    <id>http://peihao.space/2016/04/07/context/</id>
    <published>2016-04-07T06:17:22.000Z</published>
    <updated>2016-04-07T05:09:49.463Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Context&quot;&gt;Context&lt;/h1&gt;&lt;p&gt;context不是函数而是一个类。如果不太了解面向对象，可以把“类”看做一种数据类型，就像int，不过类型为“类”的数据（称为对象）可能储存远比int多的信息，比如这里的类型为Context的对象就储存关于程序、窗口的一些资源。&lt;/p&gt;
&lt;p&gt;有些函数调用时需要一个Context参数，比如Toast.makeText，因为函数需要知道是在哪个界面中显示的Toast。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;再比如，ButtonmyButton = new Button(this); 这里也需要Context参数（this），表示这个按钮是在“this”这个屏幕中显示的。&lt;/p&gt;
&lt;p&gt;Android开发使用（纯粹的）面向对象语言，一切都是对象，就连我们写的函数都是对象的函数。&lt;/p&gt;
&lt;h1 id=&quot;小例&quot;&gt;小例&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Toast.makeText(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;OK!&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Button button1 = (Button)findViewById(R.id.button1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       button1.setOnClickListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Button.OnClickListener()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View v)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               Toast.makeText(MainActivity.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里OnCreate就是MainActivity的对象的函数（MainActivity是类），所以这个函数中的this就表示当前的、包含这个函数的MainActivity对象。&lt;/p&gt;
&lt;p&gt;MainActivity extends Activity，意思是MainActivity 继承 Activity，即MainActivity 是 Activity 的一种，所有的MainActivity 都是 Activity。同样，在Android文档中Activity继承ContextThemeWrapper，ContextThemeWrapper继承ContextWrapper，ContextWrapper继承Context。所以this这个MainActivity也是Context，把this传入Toast.makeText表示“OK!”是在当前的MainActivity对象（也是Context）中显示的。&lt;/p&gt;
&lt;p&gt;对于显示”Hello,world!”的Toast.makeText，这个函数在onClick中，而onClick是new Button.OnClickListener(){…}这个没有名字的类的函数，this表示匿名类的对象，不表示MainActivity对象，所以这里用MainActivity.this，强制选择外面一层MainActivity的this。&lt;br&gt;在activity和 service中使用的this，的确可以代替context，因为activity和service本身就是继承于context类的，也就是说，那里面的this，就是一个context。&lt;/p&gt;
&lt;p&gt;再来说上面这个context为什么不能用。因为toast是一个view，每一个view被添加的时候都需要一个token，activity中的context就包含了当前activity窗口的token，所以能够使用，而onReceive中的context，并不是隶属于某个应用程序进程的，而是属于系统的context，所以这里会报错。&lt;/p&gt;
&lt;p&gt;将this替换成为context是因为此类继承自BroadcastReceiver，并非继承自Activity.&lt;/p&gt;
&lt;p&gt;activity继承自context,activity.this可以当做一个context。而BroadcastReceiver直接继承自Object，它的this不再属于context，不能当做上下文，成为函数的参数&lt;/p&gt;
&lt;h1 id=&quot;Context的类型&quot;&gt;Context的类型&lt;/h1&gt;&lt;p&gt;应用程序创建Context实例的情况有如下几种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建Application 对象时， 而且整个App共一个Application对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建Service对象时&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建Activity对象时&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此应用程序App共有的Context数目公式为：&lt;/p&gt;
&lt;p&gt;总Context实例个数 = Service个数 + Activity个数 + 1（Application对应的Context实例）&lt;/p&gt;
&lt;p&gt;并不是所有的context实例都是等价的。根据Android应用的组件不同，你访问的context推向有些细微的差别。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Application&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是一个运行在你的应用进程中的单例。在Activity或者Service中，它可以通过getApplication()函数获得，或者人和继承于context的对象中，通过getApplicationContext()方法获得。不管你是通过何种方法在哪里获得的，在一个进程内，你总是获得到同一个实例。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Activity/Service&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;继承于ContextWrapper，它实现了与context同样API，但是代理这些方法调用到内部隐藏的Context实例，即我们所知道的基础context。任何时候当系统创建一个新的Activity或者Service实例的时候，它也创建一个新的ContextImpl实例来做所有的繁重的工作。每一个Activity和Service以及其对应的基础context，对每个实例来说都是唯一的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BroadcastReciver&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它本身不是context，也没有context在它里面，但是每当一个新的广播到达的时候，框架都传递一个context对象到onReceive()。这个context是一个ReceiverRestrictedContext实例，它有两个主要函数被禁掉：registerReceiver()和bindService()。这两个函数在BroadcastReceiver.onReceive()不允许调用。每次Receiver处理一个广播，传递进来的context都是一个新的实例。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ContentProvider&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它本身也不是一个Context，但是它可以通过getContext()函数给你一个Context对象。如果ContentProvider是在调用者的的本地（例如，在同一个应用进程），getContext()将返回的是Application单例。然而，如果调用这和ContentProvider在不同的进程的时候，它将返回一个新创建的实例代表这个Provider所运行的包。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Context&quot;&gt;Context&lt;/h1&gt;&lt;p&gt;context不是函数而是一个类。如果不太了解面向对象，可以把“类”看做一种数据类型，就像int，不过类型为“类”的数据（称为对象）可能储存远比int多的信息，比如这里的类型为Context的对象就储存关于程序、窗口的一些资源。&lt;/p&gt;
&lt;p&gt;有些函数调用时需要一个Context参数，比如Toast.makeText，因为函数需要知道是在哪个界面中显示的Toast。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://peihao.space/categories/Android/"/>
    
    
      <category term="Android" scheme="http://peihao.space/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Gulp介绍</title>
    <link href="http://peihao.space/2016/04/06/Gulp-intro/"/>
    <id>http://peihao.space/2016/04/06/Gulp-intro/</id>
    <published>2016-04-06T06:17:22.000Z</published>
    <updated>2016-04-06T06:15:57.168Z</updated>
    
    <content type="html">&lt;h1 id=&quot;介绍&quot;&gt;介绍&lt;/h1&gt;&lt;h2 id=&quot;什么是Gulp&quot;&gt;什么是Gulp&lt;/h2&gt;&lt;p&gt;&lt;code&gt;gulp.js&lt;/code&gt;是一种基于流的，代码优于配置的新一代构建工具.&lt;a href=&quot;https://github.com/gulpjs/gulp/tree/master/docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Gulp&lt;/code&gt;和&lt;code&gt;Grunt&lt;/code&gt;类似。但相比于 Grunt 的频繁的 I/O 操作，Gulp 的流操作，能更快地完成构建&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Gulp特性&quot;&gt;Gulp特性&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用方便&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过代码优于配置的策略，Gulp可以让简单的任务简单，复杂的任务更可管理。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构建快速&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过流式操作，减少频繁的 IO 操作，更快地构建项目。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插件高质&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gulp 有严格的插件指导策略，确保插件能简单高质的工作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;易于学习&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;少量的API，掌握Gulp可以毫不费力。构建就像流管道一样，轻松加愉快。&lt;/p&gt;
&lt;h1 id=&quot;Gulp安装&quot;&gt;Gulp安装&lt;/h1&gt;&lt;p&gt;Gulp是基于&lt;code&gt;Node.js&lt;/code&gt;的，故要首先安装 Node.js。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install -g gulp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后按以下清单文件安装&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;gulp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-htmlclean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-htmlmin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-imagemin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-minify-css&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-uglify&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;方法是同样的,&lt;code&gt;npm install xxx --save&lt;/code&gt;，xxx即为清单列表文件名&lt;/p&gt;
&lt;p&gt;其中gulp是工程的核心程序，Gulp采用插件方式进行工作，下面的5个文件就是基于Gulp的插件.&lt;a href=&quot;http://gulpjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gulp插件列表&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;使用Gulp优化Hexo&quot;&gt;使用Gulp优化Hexo&lt;/h1&gt;&lt;h2 id=&quot;建立gulpfile-js&quot;&gt;建立gulpfile.js&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; gulp = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//Plugins模块获取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; minifycss = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-minify-css&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; uglify = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-uglify&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; htmlmin = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-htmlmin&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; htmlclean = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-htmlclean&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; imagemin = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-imagemin&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 压缩 public 目录 css文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;minify-css&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./public/**/*.css&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(minifycss())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./public&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 压缩 public 目录 html文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;minify-html&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./public/**/*.html&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(htmlclean())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(htmlmin(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             removeComments: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             minifyJS: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             minifyCSS: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             minifyURLs: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./public&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 压缩 public/js 目录 js文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;minify-js&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./public/**/*.js&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(uglify())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./public&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 压缩图片任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 在命令行输入 gulp images 启动此任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;images&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 1. 找到图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./photos/*.*&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 2. 压缩图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(imagemin(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                progressive: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 3. 另存图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;dist/images&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 执行 gulp 命令时执行的任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;default&#39;&lt;/span&gt;, [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;minify-html&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;minify-css&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;minify-js&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;images&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;运行&quot;&gt;运行&lt;/h2&gt;&lt;p&gt;要运行gulp任务，只需切换到存放gulpfile.js文件的目录，然后在终端中执行gulp命令就行了，gulp后面可以加上要执行的任务名，例如gulp task1，如果没有指定任务名，则会执行任务名为default的默认任务。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;介绍&quot;&gt;介绍&lt;/h1&gt;&lt;h2 id=&quot;什么是Gulp&quot;&gt;什么是Gulp&lt;/h2&gt;&lt;p&gt;&lt;code&gt;gulp.js&lt;/code&gt;是一种基于流的，代码优于配置的新一代构建工具.&lt;a href=&quot;https://github.com/gulpjs/gulp/tree/master/docs&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Gulp&lt;/code&gt;和&lt;code&gt;Grunt&lt;/code&gt;类似。但相比于 Grunt 的频繁的 I/O 操作，Gulp 的流操作，能更快地完成构建
    
    </summary>
    
      <category term="Gulp" scheme="http://peihao.space/categories/Gulp/"/>
    
    
      <category term="Gulp" scheme="http://peihao.space/tags/Gulp/"/>
    
  </entry>
  
  <entry>
    <title>gitignore忽略规则</title>
    <link href="http://peihao.space/2016/04/05/gitignore/"/>
    <id>http://peihao.space/2016/04/05/gitignore/</id>
    <published>2016-04-05T08:17:22.000Z</published>
    <updated>2016-04-06T05:44:44.214Z</updated>
    
    <content type="html">&lt;p&gt;.gitignore 配置文件用于配置不需要加入版本管理的文件，配置好该文件可以为我们的版本管理带来很大的便利，以下是个人对于配置 .gitignore 的一些心得。&lt;/p&gt;
&lt;h1 id=&quot;配置语法&quot;&gt;配置语法&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;以斜杠“/”开头表示目录；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以星号“*”通配多个字符；&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以问号“?”通配单个字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以方括号“[]”包含单个字符的匹配列表；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以叹号“!”表示是跟踪（不忽略）某个文件或目录。；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;#此为注释 – 将被 Git 忽略&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[ ^abc]：代表必须不是a,b,c中任一字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[abc]：代表a,b,c中任一字符即可&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;{ab,bb,cx}：代表ab,bb,cx中任一类型即可&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;{!ab}：必须不是此类型    &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　&lt;/p&gt;
&lt;p&gt;此外，git 对于 .ignore 配置文件是按行从上到下进行规则匹配的，意味着如果前面的规则匹配的范围更大，则后面的规则将不会生效；&lt;/p&gt;
&lt;h1 id=&quot;示例&quot;&gt;示例&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;fd1/*&lt;/code&gt;&lt;br&gt;说明：忽略目录 fd1 下的全部内容；注意，不管是根目录下的 /fd1/ 目录，还是某个子目录 /child/fd1/ 目录，都会被忽略；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/fd1/*&lt;/code&gt;&lt;br&gt;说明：忽略根目录下的 /fd1/ 目录的全部内容；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;3.&lt;br&gt;&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;change&quot;&gt;!.gitignore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;change&quot;&gt;!/fw/bin/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;change&quot;&gt;!/fw/sf/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4.&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*.a       #忽略所有 .a 结尾的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;!lib.a    #但 lib.a 除外&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/TODO     #仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;build/    #忽略 build/ 目录下的所有文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;doc/*.txt #会忽略 doc/notes.txt 但不包括 doc/server/arch.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说明：忽略全部内容，但是不忽略 .gitignore 文件、根目录下的 /fw/bin/ 和 /fw/sf/ 目录&lt;/p&gt;
&lt;h1 id=&quot;Tip&quot;&gt;Tip&lt;/h1&gt;&lt;p&gt;规则很简单，但是有时候在项目开发过程中，突然心血来潮想把某些目录或文件加入忽略规则，按照上述方法定义后发现并未生效。原因是.gitignore只能忽略那些原来没有被track（跟踪过）的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。那么解决方法就是先把本地缓存删除（改变成未track状态），然后再提交。&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git rm -r --cached &lt;span class=&quot;class&quot;&gt;.gitignore&lt;/span&gt; #从版本库中删除文件，但不从硬盘删除&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add &lt;span class=&quot;class&quot;&gt;.gitignore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&#39;update .gitignore&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者直接&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git rm &amp;lt;file&amp;gt;  #从版本库中删除文件，同时在硬盘中剔除&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;.gitignore 配置文件用于配置不需要加入版本管理的文件，配置好该文件可以为我们的版本管理带来很大的便利，以下是个人对于配置 .gitignore 的一些心得。&lt;/p&gt;
&lt;h1 id=&quot;配置语法&quot;&gt;配置语法&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;以斜杠“/”开头表示目录；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以星号“*”通配多个字符；&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://peihao.space/categories/Git/"/>
    
    
      <category term="Git" scheme="http://peihao.space/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>router-source-analysis</title>
    <link href="http://peihao.space/2016/04/04/router-source-analysis001/"/>
    <id>http://peihao.space/2016/04/04/router-source-analysis001/</id>
    <published>2016-04-04T12:17:22.000Z</published>
    <updated>2016-04-06T05:45:08.164Z</updated>
    
    <content type="html">&lt;h1 id=&quot;constant_value&quot;&gt;constant value&lt;/h1&gt;&lt;p&gt;在分析第一个Verilog HDL Router中的check模块之前，首先在前面声明一下代码中会使用到的常量值：&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// disable error reporting&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`define ERROR_CAPTURE_MODE_NONE       &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// don&#39;t hold errors&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`define ERROR_CAPTURE_MODE_NO_HOLD    &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// capture first error only (subsequent errors are blocked) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`define ERROR_CAPTURE_MODE_HOLD_FIRST &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// capture all errors &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`define ERROR_CAPTURE_MODE_HOLD_ALL   &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`define ERROR_CAPTURE_MODE_LAST `ERROR_CAPTURE_MODE_HOLD_ALL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// asynchronous reset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`define RESET_TYPE_ASYNC &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// synchronous reset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`define RESET_TYPE_SYNC  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`define RESET_TYPE_LAST `RESET_TYPE_SYNC&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;实现reg&quot;&gt;实现reg&lt;/h1&gt;&lt;p&gt;在Router的check的错误警报模块中，具体实现这一功能的还是寄存器。上面的代码分别定义了一些错误警示以及错误重置的类型。&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;some input output var define ......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt;(reset_type)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	`RESET_TYPE_ASYNC:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  always @(posedge clk, posedge reset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(reset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      q &amp;lt;= reset_value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(active)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      q &amp;lt;= d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	`RESET_TYPE_SYNC:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  always @(posedge clk)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(reset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      q &amp;lt;= reset_value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(active)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      q &amp;lt;= d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      endcase &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   endgenerate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先有一个case选择器，选择重置信号的类型是同步还是异步重置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;async&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;异步类型的重置，会接受在时钟的上升沿会接受两个信号，分别是时序电路中必须的时钟信号，以及重置信号。当是上升沿时reset=1信号触发了事件，将输出结果赋值为想要重置的值，否则保持输出结果保持为输入值不变。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sync&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同步类型的时序时间触发参数只有clk时钟参数。当此时的reset信号电平为高，则赋值reset值，否则保持不变。&lt;/p&gt;
&lt;p&gt;同步与异步类型的区别保证了同步类型的重置信号只有在时钟上升沿时有可能会发生reset值重置，而异步类型只要reset信号为高电平即可触发。&lt;/p&gt;
&lt;h1 id=&quot;error模块&quot;&gt;error模块&lt;/h1&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;generate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      if(capture_mode != `ERROR_CAPTURE_MODE_NONE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   wire [0:num_errors-1] errors_s, errors_q;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   case(capture_mode)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     `ERROR_CAPTURE_MODE_NO_HOLD:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	       begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		  assign errors_s = errors_in;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	       end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     `ERROR_CAPTURE_MODE_HOLD_FIRST:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	       begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		  assign errors_s = ~|errors_q ? errors_in : errors_q;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	       end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     `ERROR_CAPTURE_MODE_HOLD_ALL:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	       begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		  assign errors_s = errors_q | errors_in;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	       end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   endcase&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当有错误信息时，获取到捕捉的错误信息类型。根据先前在constant常量文件中定义的信息，error_s变量对应的是上面寄存器中的d变量，表示输入信号。&lt;/p&gt;
&lt;p&gt;~| 表示或非位运算，做一次或者多次‘或’运算之后，再做一次非运算。有1出0，全0出1。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://imgtec.eetrend.com/sites/imgtec.eetrend.com/files/201408/blog/3177-6309-6.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上面是Verilog HDL中运算符的优先级顺序。&lt;/p&gt;
&lt;p&gt;根据捕获到的不同错误类型，将error_s的值对应赋值，分别赋值为:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;errors_s = errors_in&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;直接赋值为error模块的输入值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;errors_s = ~|errors_q ? errors_in : errors_q&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当errors_q的值==0时，依然赋值为输入值，否则只要errors_q的值&amp;gt;0，有过改变就将它赋给errors_s。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;errors_s = errors_q | errors_in&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;赋值为当前erroes_q与errors_in的逻辑或运算结果。&lt;/p&gt;
&lt;p&gt;其中errors_q是errors模块的实际输出结果，errors_in是模块的输入，errors_s时中间计算根据错误类型计算的输入值。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;constant_value&quot;&gt;constant value&lt;/h1&gt;&lt;p&gt;在分析第一个Verilog HDL Router中的check模块之前，首先在前面声明一下代码中会使用到的常量值：
    
    </summary>
    
      <category term="NoC" scheme="http://peihao.space/categories/NoC/"/>
    
    
      <category term="NoC" scheme="http://peihao.space/tags/NoC/"/>
    
  </entry>
  
  <entry>
    <title>NoC路由算法</title>
    <link href="http://peihao.space/2016/04/03/NoC-router-alg/"/>
    <id>http://peihao.space/2016/04/03/NoC-router-alg/</id>
    <published>2016-04-03T04:23:35.000Z</published>
    <updated>2016-04-03T09:20:46.655Z</updated>
    
    <content type="html">&lt;p&gt;NoC的图谱结构必须保证每个节点可以发送数据包到其他节点。当没有完善的拓扑结构的时候，路由算法决定数据包从原地址开始选择那一条路径到目的地址。所以，有效的数据算法对NoC网路性能的好坏是至关重要的。&lt;/p&gt;
&lt;p&gt;路由算法可以按照不同的标准分为不同的几类。比如说源路由&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;（SOurce Routing）和分布式路由（Distrubuted Routing），确定路由（Deterministic Routng）和自适应路由（Adaptive Routing）。&lt;/p&gt;
&lt;h1 id=&quot;确定路由（Deterministic_Routing）&quot;&gt;确定路由（Deterministic Routing）&lt;/h1&gt;&lt;p&gt;确定路由是一种常见的路由，它的路由路径只与起点地址和终点地址有关，给定起点和终点地址，路由路径就被确定了，与当前的网络状态无关。而在确定路由中，使用最多的就是维序路由（Dimension-Ordered Routing）,因为他有着非常简单易实现的路由逻辑。&lt;/p&gt;
&lt;p&gt;在维序路由中，每个数据包一次只在一个维上路由，当在这个维上到达了恰当的坐标之后，才按由低维到高维的顺序在另外的维上路由。因为数据包是按照着严格的单调的维数变化的顺序在通道内路由，所以维序路由也是没有&lt;code&gt;死锁&lt;/code&gt;的。按照在不同拓扑结构的网络中路由，维序路由包括了2D Mesh中的XY路由和在超立方体（HyperCube）中的E-cube路由。&lt;/p&gt;
&lt;h2 id=&quot;XY路由&quot;&gt;XY路由&lt;/h2&gt;&lt;p&gt;关于XY路由算法的具体原理方法，我已经在&lt;a href=&quot;/2016/03/31/NoC-FIFO/&quot;&gt;缓存与XY路由算法&lt;/a&gt;一文中有过详细介绍。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;\img\article\router\xy-judge.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;具体举例来说，一个源地址（1，2），目的地址（3，4）的微片，采用XY路由算法的路径是不会改变的。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;(1,2)-&amp;gt;(2,2)-&amp;gt;(3,2)-&amp;gt;(3,4)-(3,4)&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;E-cube_路由&quot;&gt;E-cube 路由&lt;/h2&gt;&lt;p&gt;E-cube路由和XY路由很相似，都是先在一个方向（维）上路由，然后再在其它方向（维）上路由。具体来说，前面提到了在n维立方体中，每个节点是用一个nbit的二进制编号表示的。每个节点n条输出的通道，其中第i条通道就对应的第i维。在E-cube路由算法中，数据包的头部携带了目的节点的地址 d。当n维立方体中的一个节点v收到一个数据包时·，E-cube路由算法计算路由向量c=d xor v（xor是逻辑运算符号异或）。如果c=0，说明数据包已经到达了目的地，则传给IP核。否则数据包被送往第k纬的输出通道，其中k是c里面最右面或者最左边的‘1’的那一维度。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;举例来说，一个由s=Ol10产生的数据包要传向目的地为d=l101的节点。首先计算路由向量cl=d xor s=1101 xor 0110=1011。取最右边的不为零的一位为k，则k=l，说明这是的数据包将会被送往第1维上的通道。然后到达了vl=011l。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;再计算路由向量c2=d xor v1=1101 xor 0111=1010，得出k=2，然后送到第2维的通道上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;随即到达v2=0101，再一次计算c3=d xor v2=1101 xor 0101=1000,得出k=4，接着把数据包送到第4维的通道上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后到达了目的地d=llOl。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最终，得出的路由过程是：&lt;code&gt;011O一＞011l一＞0101一＞1101&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;从上面的路由过程可以看出，虽然E-cube路由与XY路由是在不同维数的网络中路由，但是它们都有很相似的共同点：即一次只在一个方向（维数）上路由，直到在该方向（维数）上当到达了与目的地址相同的节点，再按照单调的顺序改变方向在其它维上路由，XY路由是由X方向改变到Y方向的顺序，E-cube路由是从低维到高维（或者从高维到低维）的顺序。而这正是维序路由算法的典型特征。&lt;/p&gt;
&lt;h1 id=&quot;自适应路由（Adaptive_Routing）&quot;&gt;自适应路由（Adaptive Routing）&lt;/h1&gt;&lt;p&gt;确定路由优点是，路由算法简单，在网络低拥塞环境下能获得较低延迟。但是由于其不能响应动态的网络状态变化，所以当网络拥塞增加时，性能迅速降低。&lt;/p&gt;
&lt;p&gt;所谓的自适应路由，就是指数据包的路由路径不只与起点地址和终点地址有关，还要考虑网络的状态。也就是说，有同一对起／终点的地址的数据包，在不同的网络状态下，它们的路由路径也可能不同。&lt;/p&gt;
&lt;p&gt;自适应路由的优点是采用自适应路由的路径，避免了网络拥塞，可以得到更高的网络带宽饱和值；但是它的路由逻辑较复杂，在网络低拥寨的情况下开销较大，而且还存在死锁问题。&lt;/p&gt;
&lt;p&gt;在片上网络中，由于路由器结构所限，一般都采用的是比较简单的自适应算法，如带有一定自适应性的维序路由。所以，下面将着重介绍一下这种算法。&lt;/p&gt;
&lt;h2 id=&quot;自适应性的维序路由&quot;&gt;自适应性的维序路由&lt;/h2&gt;&lt;p&gt;一般的维序路由是在维序路由中，每个数据包一次只在一个维上路由，当在这个维上到达了恰当的坐标之后，才按由低维到高维的顺序在另外的维上路由。&lt;/p&gt;
&lt;p&gt;而这里带有一定自适应性的维序路由则是，当数据包沿某一维（如X方向），从最低维到最高维路由的过程中发生阻塞的时候，即向另一维（Y方向）发出传送请求，如果请求得到应答则向该方向传送数据，否则又转回X方向请求，如此循环，直到请求得到应答。同时规定，不允许数据向远离目的节点的方向运动，所以这种带有一定自适应性的维序路由也是没有&lt;code&gt;死锁&lt;/code&gt;的。&lt;/p&gt;
&lt;p&gt;下面以4×4的2DMesh网络中的带有一定自适应性的XY路由为例，具体解释一下这种算法的路由过程。&lt;/p&gt;
&lt;p&gt;假设一个数据包路由的起点为（1,4），终点为（4,1）。如果按照一般的XY路由的话，它的路由路径应该是&lt;code&gt;（1,4）一＞（2,4)一＞（3,4）一＞（4,4）一＞（4,3）一＞（4,2）一＞（4,1）&lt;/code&gt;。这时如果假设数据包在节点（3,4）发生了阻塞，不能继续向（4,4）发送。如果按照原来的XY路由，数据包就不能在往下发送，被阻塞在了（3，4）中。这时如果采用的是带有一定适应性的XY路由，在向节点（4,4)发送传送请求没有被允许之后，则它就会向Y维方向上的（3,3）节点发送传送请求，被允许之后，数据包就被发往节点（3,3）了。到达（3,3）后，又会先向X维方向上的（4,3)发送请求。就这样最终的路由路径为&lt;code&gt;（1,4）一＞（2,4）一＞（3,4）一＞（3,3）一＞（4,3）一＞（4,2)一＞（4,1）&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;\img\article\router\adaptive-routing.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上面的路由路径可以看出，带有一定自适应性的XY路由和一般的XY路由的差别就是在某个节点发生阻塞之后，它可以不按照先X维再Y维的顺序路由，而可以是向另一个维发送数据包。这样就可以从一定程度上缓解网络的拥塞&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;NoC的图谱结构必须保证每个节点可以发送数据包到其他节点。当没有完善的拓扑结构的时候，路由算法决定数据包从原地址开始选择那一条路径到目的地址。所以，有效的数据算法对NoC网路性能的好坏是至关重要的。&lt;/p&gt;
&lt;p&gt;路由算法可以按照不同的标准分为不同的几类。比如说源路由
    
    </summary>
    
      <category term="NoC" scheme="http://peihao.space/categories/NoC/"/>
    
    
      <category term="NoC" scheme="http://peihao.space/tags/NoC/"/>
    
      <category term="Router" scheme="http://peihao.space/tags/Router/"/>
    
  </entry>
  
  <entry>
    <title>Matplotlib快速绘图（2）</title>
    <link href="http://peihao.space/2016/04/01/matplotlib2/"/>
    <id>http://peihao.space/2016/04/01/matplotlib2/</id>
    <published>2016-04-01T15:27:51.000Z</published>
    <updated>2016-04-01T16:53:35.737Z</updated>
    
    <content type="html">&lt;p&gt;matplotlib 是python最著名的绘图库，它提供了一整套和matlab相似的命令API，十分适合交互式地进行制图。而且也可以方便地将它作为绘图控件，嵌入GUI应用程序中。&lt;/p&gt;
&lt;p&gt;它的文档相当完备，并且 Gallery页面 中有上百幅缩略图，打开之后都有源程序。因此如果你需要绘制某种类型的图，只需要在这个页面中浏览/复制/粘贴一下&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;，基本上都能搞定。&lt;/p&gt;
&lt;p&gt;在Linux下比较著名的数据图工具还有gnuplot，这个是免费的，Python有一个包可以调用gnuplot，但是语法比较不习惯，而且画图质量不高。&lt;/p&gt;
&lt;p&gt;而 Matplotlib则比较强：Matlab的语法、python语言、latex的画图质量（还可以使用内嵌的latex引擎绘制的数学公式）。&lt;/p&gt;
&lt;h1 id=&quot;绘制一组幂函数&quot;&gt;绘制一组幂函数&lt;/h1&gt;&lt;p&gt;matplotlib的pyplot子库提供了和matlab类似的绘图API，方便用户快速绘制2D图表&lt;/p&gt;
&lt;p&gt;先从一个简单的例子开始讨论。假设要在一个图形中显示一组幂函数。这组幂函数的基不同，分别为10，自然对数 e 和2。可以用如下 Python 脚本去描绘这组曲线，生成的图形如下&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; matplotlib.pylab &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = linspace(-&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f1 = np.power(&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, x) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f2 = np.power(e, x) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f3 = np.power(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, x)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(x, f1, &lt;span class=&quot;string&quot;&gt;&#39;red&#39;&lt;/span&gt;,  x, f2, &lt;span class=&quot;string&quot;&gt;&#39;blue&#39;&lt;/span&gt;, x, f3, &lt;span class=&quot;string&quot;&gt;&#39;pink&#39;&lt;/span&gt;, linewidth=&lt;span class=&quot;number&quot;&gt;2.5&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axis([-&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;text(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7.5&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;r&#39;$10^x$&#39;&lt;/span&gt;, fontsize=&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;text(&lt;span class=&quot;number&quot;&gt;2.2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7.5&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;r&#39;$e^x$&#39;&lt;/span&gt;, fontsize=&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;text(&lt;span class=&quot;number&quot;&gt;3.2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7.5&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;r&#39;$2^x$&#39;&lt;/span&gt;, fontsize=&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title(&lt;span class=&quot;string&quot;&gt;&#39;A simple example&#39;&lt;/span&gt;, fontsize=&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;savefig(&lt;span class=&quot;string&quot;&gt;&#39;power.png&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/matplotlib/power.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;程序的第一行装载了 pylab 模块。接下来的几行语句（至 savefig 之前）运行 Matlab 程序，因为 linspace， plot，axis, text, title 这些函数在 pylab 中也存在。这个例子展示了 Matplotlib 中几个比较常用的绘图函数，如 plot，axis，title 等的用法。其中 plot 是一个功能十分强大的函数, 通过改变它的参数选项，可以灵活地修改图形的各种属性，比如选用的线型，颜色，宽度等。&lt;/p&gt;
&lt;h1 id=&quot;显示图形中的数学公式&quot;&gt;显示图形中的数学公式&lt;/h1&gt;&lt;p&gt;Matplotlib 可以支持一部分 TeX 的排版指令，因此用户在绘制含有数学公式的图形时会感到很方便并且可以得到比较满意的显示效果，所需要的仅仅是一些 TeX 的排版知识。下面的这个例子显示了如何在图形的不同位置上, 如坐标轴标签，图形的标题以及图形中适当的位置处，显示数学公式。相应的 Python 程序如下.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; matplotlib.pylab &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x, c)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    m1 = sin(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;*pi*x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    m2 = exp(-c*x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    m3 = sin(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; multiply(m1, m2,m3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = linspace(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sigma = &lt;span class=&quot;number&quot;&gt;0.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(x, f(x, sigma), &lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;, linewidth=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xlabel(&lt;span class=&quot;string&quot;&gt;r&#39;time  t&#39;&lt;/span&gt;, fontsize=&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ylabel(&lt;span class=&quot;string&quot;&gt;r&#39;Amplitude  $f(x)$&#39;&lt;/span&gt;, fontsize=&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title(&lt;span class=&quot;string&quot;&gt;r&#39;$f(x)$ is damping  with x&#39;&lt;/span&gt;, fontsize=&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;text(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;r&#39;$f(x) = \rm&amp;#123;sin&amp;#125;(3 \pi  x^2) e^&amp;#123;\sigma x&amp;#125;$&#39;&lt;/span&gt;, fontsize=&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;savefig(&lt;span class=&quot;string&quot;&gt;&#39;latex.png&#39;&lt;/span&gt;, dpi=&lt;span class=&quot;number&quot;&gt;75&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/matplotlib/latex.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;从程序中可以看出，在 Matplotlib 中进行有关数学公式的排版是很简单的。与 TeX 排版时的约定一样，要插入的公式部分由一对美元符号 $ 来进行标识，而具体的排版命令与 TeX 一样。在任何可以显示文本的地方（如轴的标签，标题处等）都可以插入需要的公式。需要注意的是，数学公式所在的字符串开始之处有一个标记 r，表示该字符串是一个 raw string。这是因为排版公式时，字符串所包含的内容必须按照 TeX 的规范，而不是其他的规范，来进行解析。所以使用 raw string 可以避免其它规则解释字符串中某些特殊字符所带来的歧义。从生成的图形可以看到，公式显示的效果是比较美观的。&lt;/p&gt;
&lt;p&gt;另外在这对美元符号之间如果想要使用正常的字符，可以插入&lt;code&gt;\rm{}&lt;/code&gt;，并在括号里添加文字，一些特殊的字体如&lt;code&gt;math.pi&lt;/code&gt;，可以在美元符号内使用&lt;code&gt;\pi&lt;/code&gt;,幂级数角标使用&lt;code&gt;{}&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id=&quot;GLP_集合计算结果的可视化&quot;&gt;GLP 集合计算结果的可视化&lt;/h1&gt;&lt;p&gt;Python 是一种比较适合用来进行科学计算的脚本语言，如果利用了 Numeric 及 Numarray 模块，它的计算能力还能得到进一步的增强。 Matplotlib 也充分利用了这两个模块，可以高质量地完成计算结果可视化的工作。下面是一个计算和显示两维好格子点 GLP (Good Lattice Point Set)集合的例子。 GLP 集合是一种用算法产生的伪随机数的集合,它在一些优化计算中很有用，详细的介绍可以在参考文献里找到。下面的 Python 程序先定义了一个函数 glp(n1, n2) 用以产生需要的 GLP 集合, 接着利用 Matplotlib 来显示它的分布情况（应该是均匀分布的）。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; matplotlib.pylab &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;glp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n1, n2)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	q = zeros((&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, n2), float)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	h1 = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; h2 = n1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; arange(n2-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		q[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][ i] = (fmod(h1*(i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), n2)-&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)/n2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		q[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;][ i] = (fmod(h2*(i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), n2)-&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)/n2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	q[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][n2-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = (n2-&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)/n2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	q[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;][n2-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = (n2-&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)/n2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; q&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n1 = &lt;span class=&quot;number&quot;&gt;454&lt;/span&gt;; n2 = &lt;span class=&quot;number&quot;&gt;745&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;q = glp(n1, n2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = q[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, :]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y = q[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, :]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#y. 表示yello dot&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plot(x, y, &lt;span class=&quot;string&quot;&gt;&#39;y.&#39;&lt;/span&gt;, linewidth=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;axis([&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title(&lt;span class=&quot;string&quot;&gt;r&#39;$\rm&amp;#123;GLP \ set \ with&amp;#125; \ n_1 = 454, \ n_2 = 745$&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;savefig(&lt;span class=&quot;string&quot;&gt;&#39;glp.png&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/matplotlib/glp.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最初我们是用 Matlab 来完成这个工作的，现在用 Python 来实现一样很简洁。程序中函数 glp 的实现主要是利用了模快 Numeric，计算得到的结果用 plot 函数直接加以显示，十分方便。这个例子（包括上一个例子）显示了，在利用 Python 进行某些科学及工程计算时，Matplotlib 往往能简洁高效地完成计算结果可视化的工作。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;matplotlib 是python最著名的绘图库，它提供了一整套和matlab相似的命令API，十分适合交互式地进行制图。而且也可以方便地将它作为绘图控件，嵌入GUI应用程序中。&lt;/p&gt;
&lt;p&gt;它的文档相当完备，并且 Gallery页面 中有上百幅缩略图，打开之后都有源程序。因此如果你需要绘制某种类型的图，只需要在这个页面中浏览/复制/粘贴一下
    
    </summary>
    
      <category term="matplotlib" scheme="http://peihao.space/categories/matplotlib/"/>
    
    
      <category term="matplotlib" scheme="http://peihao.space/tags/matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>Virtual Channel Ruter</title>
    <link href="http://peihao.space/2016/04/01/Virtual%20Channel/"/>
    <id>http://peihao.space/2016/04/01/Virtual Channel/</id>
    <published>2016-04-01T04:23:35.000Z</published>
    <updated>2016-04-02T16:04:06.513Z</updated>
    
    <content type="html">&lt;h1 id=&quot;VC与WormHole的对比&quot;&gt;VC与WormHole的对比&lt;/h1&gt;&lt;p&gt;虚信道路由器通过引入虚信道技术，将一个物理信道分成逻辑上的多个虚信道。多个虚信道对物理信道分时复用，通过对虚信道的合理调度，当网络中发生数据分组阻塞时，阻塞的分组被缓存在某一条虚信道的缓存中，其它分组能够使用其它的虚信道继续进行传输。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;虚信道路由器是对基本虫孔路由器的改进，它解决了虫孔路由器的阻塞问题，能够提高物理信道的利用率，显著增加片上网络的性能。虚信道路由器需要为每条虚信道提供一个独立的缓存空间，虚信道数目增加一条，路由器的缓存空间需要相应增加一倍。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/router/wormhole-router.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图左侧是基本虫孔路由器出现的阻塞问题。路由器1中的分组A要去往路由器3的南输入端口，需要经过路由器l的东输出端口（即路由器2的西输入端口）离开，而路由器2的西输入端口被分组B占用，分组A不能使用，被阻塞在路由器l，尽管路由器3的南输入端口是空闲的，但是分组A将无法到达。&lt;/p&gt;
&lt;p&gt;上图右侧是使用虚信道架构的路由器结构传输，可以是双虚信道或多虚信道，分组A将会通过红色的通道到达路由器3。&lt;/p&gt;
&lt;h1 id=&quot;VC结构&quot;&gt;VC结构&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/img/article/router/5port-virtual_channel.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如图是传统的5端口虚信道路由器整体结构。它有5个输入端口与5个输出端口，每个输入端口支持n个虚信道（Virtual Channel，简称VC），每个VC维持一个用于缓存数据的FIFO队列，其中4个端口表示东、南、西、北四个方向，与相邻的4个路由器相连，另外一个表示本地端口，与IP核相连。&lt;/p&gt;
&lt;p&gt;另外还包含计算模块（Routing Computation Unit，简称RC）、虚信道分配（Virtual Channel Allocator，简称VA）模块、开关分配（Switch Allocator，简称SA）模块及交叉开关（Crossbar）。虚信道采用的是虫孔交换机制，同时使用缓冲队列放置在输入端口的交换结构。&lt;/p&gt;
&lt;p&gt;虚信道路由器的工作过程与虫孔路由器基本相同，不同之处在于多了一个虚信道分配操作。当头微片路由计算完成后，这时候由于一个输出端口有多个输出虚信道，该头微片只能占用其中一个，所以需要经过&lt;strong&gt;虚信道分配&lt;/strong&gt;为其分配一个空闲的输出虚信道后，&lt;strong&gt;才能进行后面的开关分配和开关传输&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;另外虚信道路由器通过引入虚信道技术，将一个物理信道分成逻辑上的多个虚信道，多个虚信道对物理信道分时复用，意味着&lt;em&gt;该头微片所在的分组不能时时占用物理信道&lt;/em&gt;，也就不能时时占用与该物理信道相连的输出端口，因此该头微片所在分组的其它微片也需要每个时钟周期都参与开关分配，而不能直接使用头微片开关分配的结果，即虚信道路由器中&lt;strong&gt;开关分配&lt;/strong&gt;以&lt;em&gt;微片为单位&lt;/em&gt;进行，每个微片因为不能时刻占据对应的输出端口，所以每次都要使用开关分配与其他分组的微片进行仲裁判定,这是另外一个不同点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/router/VC-trans.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上面的描述中我们可以看出，虚信道路由器其实也可以分为一条控制路径和一条数据路径。控制路径由路由计算单元（RC）、虚信道分配单元（VA）和开关分配单元（SA）组成。&lt;/p&gt;
&lt;p&gt;与虫孔路由器不同，虚信道路由器的控制路径为该头微片所在的分组预约的是&lt;strong&gt;一个输出端口中的一个输出虚信道&lt;/strong&gt;，&lt;em&gt;其它分组微片&lt;/em&gt;不能使用&lt;em&gt;该输出虚信道&lt;/em&gt;，直到该头微片的整个分组传输完成，但是其它分组微片可以使用剩下的未被占用的输出虚信道。&lt;/p&gt;
&lt;p&gt;数据路径由输入缓存和交叉开关构成，分组微片到来后由输入缓存存储，经过控制路径分配到输出端口后，经交叉开关转发到目的节点。&lt;/p&gt;
&lt;p&gt;同时虚信道路由器的工作是按4级流水方式工作，分别是路由计算（RC）、虚信道分配（VA）、开关分配（SA）和开关传输（ST）。以分组包含4个微片为例，其中路由信息只包含在头微片中，所以头微片VA成功后，体微片和尾微片可以直接使用VA的结果，跳过路由计算和虚信道分配阶段，直接进入开关分配阶段。&lt;/p&gt;
&lt;h1 id=&quot;VC的一些缺点&quot;&gt;VC的一些缺点&lt;/h1&gt;&lt;p&gt;传统虚信道路由器按4级流水线的方式工作，一个微片经过传统虚信道路由器需要经过虚信道分配与开关分配两个操作，这导致分配所花费的时延占了微片通过路由器所需总时延的一半。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;\img\article\router\vc-2path.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;一个输入端口有多个输入虚信道，每个输入虚信道都有可能发出一个请求，那么一个输入端口同时就有多个输入虚信道请求。而VA有可能同时为这些输入虚信道请求各自成功分配到相同的一个输出虚信道，接着VA又将这些分配成功的输入虚信道请求送入SA。这时SA的第一阶段仲裁是从这些成功的请求中选择一个，这导致了矛盾，即VA同时分配成功多个输入虚信道请求，而SA又只从这些请求中选择一个，导致了VA工作的浪费。&lt;/p&gt;
&lt;p&gt;传统虚信道路由器的虚信道分配采用两阶段的仲裁结构，其中第二阶段总共有P&lt;em&gt;V个P&lt;/em&gt;V:l仲裁器。例如，VC路由器的5个输入端口，每个端口分时复用2个虚拟信道，则每个信道都要与其余（5&lt;em&gt;2-1）个信道竞争相同的输出虚拟信道，而这些虚拟的输出信道共有（5&lt;/em&gt;2）个，所以一共有&lt;em&gt;（5&lt;/em&gt;2个5&lt;em&gt;2：1）&lt;/em&gt;的仲裁器。仲裁器的大小和数目都会随着端口数P或者虚信道数V的变大而急剧增加，因此虚信道分配模块所占路由器资源比重较大。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;VC与WormHole的对比&quot;&gt;VC与WormHole的对比&lt;/h1&gt;&lt;p&gt;虚信道路由器通过引入虚信道技术，将一个物理信道分成逻辑上的多个虚信道。多个虚信道对物理信道分时复用，通过对虚信道的合理调度，当网络中发生数据分组阻塞时，阻塞的分组被缓存在某一条虚信道的缓存中，其它分组能够使用其它的虚信道继续进行传输。
    
    </summary>
    
      <category term="NoC" scheme="http://peihao.space/categories/NoC/"/>
    
    
      <category term="NoC" scheme="http://peihao.space/tags/NoC/"/>
    
      <category term="Router" scheme="http://peihao.space/tags/Router/"/>
    
  </entry>
  
  <entry>
    <title>缓存与XY路由算法</title>
    <link href="http://peihao.space/2016/03/31/NoC-FIFO/"/>
    <id>http://peihao.space/2016/03/31/NoC-FIFO/</id>
    <published>2016-03-31T14:23:35.000Z</published>
    <updated>2016-03-31T15:15:27.752Z</updated>
    
    <content type="html">&lt;h1 id=&quot;FIFO形式&quot;&gt;FIFO形式&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/img/article/router/router-architecture.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图是一副常规的NoC Router结构图。FC指Flow Control流控机制，数据交换逻辑将开关分配单元仲裁结果进行链接，也就是将输入端口的FIFO与它请求的输出端口链接行程传输通道。FIFO，缓存，或者说当前的缓存主要使用的技术就是FIFO，first in first out的队&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;列缓冲。&lt;/p&gt;
&lt;p&gt;魂村是片上网络路由器中必不可少的单元，用于存储数据。目前的路由器中缓存与交叉开关存在3中相对位置关系：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缓存队列在交叉开关的前面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;位于输入端口中，同时输出端口无缓存&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缓存队列在交叉开关的后面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;位于输出端口中，输入端口无缓存&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缓存队列在交叉开关的前后两方&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入/输出端口都有缓存队列&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/router/NoC-FIFO-tri_loc.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;当前的片上网络路由器多半使用的就是第一种结构，即FIFO放置在输入端口内的交换结构。到达的数据分组首先存储在输入缓存中，然后经过路由计算、调度算法决定输入缓存中的数据分组如何通过交叉开关传送到输出端口，即缓存功能在交叉开关传输之前。&lt;/p&gt;
&lt;p&gt;这种结构对于构建大容量的交换结构十分经济，可扩展性好，但是当不同的输入端口的缓存队列都有微片要传递到同一个输出端口时，在一个时间段内，这种交换结构只允许一个被调度输出，另外的会处于阻塞状态。&lt;/p&gt;
&lt;p&gt;第二个是缓存队列放置在输出端口的交换结构。数据到达输入端口先通过交叉开关传输到相应的输出端口的缓存队列中进行排队，即缓存功能在交叉开关传输之后。这种结构避免了由交换开关内部冲突引发的延迟，可以方便地提供吞吐量、速率以及时延等方面的服务质量保障，但是要求交叉开关具有很高的传输带宽，如果出现N个输入端口同时竞争同一个输出端口时，输出缓存需要一次性完成N次写入，交叉开关内部就需要一个加速比为N的交换结构，因此，这种结构复杂且不易扩展。&lt;/p&gt;
&lt;p&gt;最后显示的是在交叉开关的输入和输出端口都具有缓存队列的结构。该结构是上述两种结构的一种折衷，通过适当的加速，可以避免交换开关拥塞引发的延迟，但是调度过程中需要同时考虑输入调度与输出调度，而且新加的缓存增加了路由器资源，因此该结构过于复杂。&lt;/p&gt;
&lt;h1 id=&quot;简单的XY路由算法&quot;&gt;简单的XY路由算法&lt;/h1&gt;&lt;p&gt;路由算法确定数据分组在网络中按照何种路径从源节点传输到目的节点。通常简答的路由器采用的都是XY维序路由算法，该算法是一种确定性路由算法，只要给定源地址与目的地址，就能唯一确定条路由路径。它将网络中所有路由器都用一个2维坐标（X,Y）表示，分组中的地址信息也是用2维坐标（X,Y）表示。&lt;/p&gt;
&lt;p&gt;设当前路由器的坐标为（cur_x,cur_y），分组中目的地址为（dst_x,dst_y）。如果cur_x&lt;dst_x，则将数据分组向东转发；如果cur_x&gt;dst_x，则将数据包向西转发；如果cur_x=dst_x and cur_y&lt;dst_y，则将数据分组向北转发；如果cur_x=dst_x and=&quot;&quot; cur_y=&quot;&quot;&gt;dst_y则将数据分组向南转发；如果cur_x=dst_x and cur_y=dst_y，那么说明数据分组到达了目的地。&lt;/dst_y，则将数据分组向北转发；如果cur_x=dst_x&gt;&lt;/dst_x，则将数据分组向东转发；如果cur_x&gt;&lt;/p&gt;
&lt;p&gt;目的路由器就通过本地端口将数据分组发往与之相连的处理单元。这样分组总是先沿X轴方向走完，才沿Y轴方向传输。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;FIFO形式&quot;&gt;FIFO形式&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/img/article/router/router-architecture.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图是一副常规的NoC Router结构图。FC指Flow Control流控机制，数据交换逻辑将开关分配单元仲裁结果进行链接，也就是将输入端口的FIFO与它请求的输出端口链接行程传输通道。FIFO，缓存，或者说当前的缓存主要使用的技术就是FIFO，first in first out的队
    
    </summary>
    
      <category term="NoC" scheme="http://peihao.space/categories/NoC/"/>
    
    
      <category term="NoC" scheme="http://peihao.space/tags/NoC/"/>
    
      <category term="Router" scheme="http://peihao.space/tags/Router/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-文章版权追加</title>
    <link href="http://peihao.space/2016/03/30/append-copyright/"/>
    <id>http://peihao.space/2016/03/30/append-copyright/</id>
    <published>2016-03-30T14:23:35.000Z</published>
    <updated>2016-03-31T10:17:54.465Z</updated>
    
    <content type="html">&lt;p&gt;目前，网络中出现了一些不和谐因素，某些网站多次剽窃Hexo博友的原创文章。在对这些侵犯博友权益的网站提出谴责的同时，聪明的各位Geek们应该如何增强版权意识呢.&lt;/p&gt;
&lt;p&gt;最简单的办法就是在自己的部落格文章里添加水印，即使这些网站通过爬虫私自收录我们的文章，读者也能在文章中轻易的发现原作者。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;由于这种办法容易影响读者的阅读体验，我采用的是在每篇文章下面增加版权声明，将本篇文章的信息、初次刊登网站、作者信息追加进文章里面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/append-copyright.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;article结构&quot;&gt;article结构&lt;/h1&gt;&lt;p&gt;cd到&lt;code&gt;your_theme\layout\_partial\&lt;/code&gt;下，访问&lt;code&gt;article.ejs&lt;/code&gt;，在合适的位置添加&lt;/p&gt;
&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;preprocessor&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;(!index)&lt;/span&gt; &amp;#123; &lt;span class=&quot;preprocessor&quot;&gt;%&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;lt;&lt;span class=&quot;preprocessor&quot;&gt;%&lt;/span&gt;- partial&lt;span class=&quot;comment&quot;&gt;(&#39;declare&#39;)&lt;/span&gt; &lt;span class=&quot;preprocessor&quot;&gt;%&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;&lt;span class=&quot;preprocessor&quot;&gt;%&lt;/span&gt; &amp;#125; &lt;span class=&quot;preprocessor&quot;&gt;%&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将会在非目录页面下执行名为&lt;code&gt;declare&lt;/code&gt;的脚本。&lt;/p&gt;
&lt;h1 id=&quot;具体显示内容&quot;&gt;具体显示内容&lt;/h1&gt;&lt;p&gt;还是在&lt;code&gt;your_theme\layout\_partial\&lt;/code&gt;下面，创建一个名为&lt;code&gt;declare.ejs&lt;/code&gt;的文件，在里面填写&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;--&lt;/span&gt; 添加版权信息 &lt;span class=&quot;attribute&quot;&gt;--&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;article-footer-copyright&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;本文由&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= config.root %&amp;gt;index.html&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;target&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= config.author %&amp;gt;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;config.author&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;创作和发表,采用&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;BY&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;-&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;NC&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;-&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;SA&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;国际许可协议进行许可&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;转载请注明作者及出处,本文作者为&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= config.root %&amp;gt;index.html&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;target&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= config.author %&amp;gt;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;config.author&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;,本文标题为&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%- config.root %&amp;gt;&amp;lt;%- post.path %&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;target&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= post.title %&amp;gt;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;post.title&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;本文链接为&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%- config.root %&amp;gt;&amp;lt;%- post.path %&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;target&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= post.title %&amp;gt;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;%-&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;config.url&lt;/span&gt; %&amp;gt;&lt;/span&gt;/&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;%-&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;post.path&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;b&lt;/span&gt;&amp;gt;&lt;/span&gt;.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;--&lt;/span&gt; 添加版权信息 &lt;span class=&quot;attribute&quot;&gt;--&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当然，你也可以自己DIY，修改显示的文字。&lt;/p&gt;
&lt;h1 id=&quot;修改CSS样式&quot;&gt;修改CSS样式&lt;/h1&gt;&lt;p&gt;编写类对应的CSS代码&lt;/p&gt;
&lt;p&gt;cd到&lt;code&gt;your_theme\source\css\_partial&lt;/code&gt;下面，创建&lt;code&gt;copyright.styl&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.article-footer-copyright&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;border-top&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hexcolor&quot;&gt;#d3d3d3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; auto&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;2em&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;80%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.article-footer-copyright&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;span&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.copyright&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;abbr&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#3d3d3d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.copyright&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; bold&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#fcb297&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;0.3em&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.5em&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1em&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;border-bottom&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; none&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#74a474&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;-moz-border-radius&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;1em&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;-webkit-border-radius&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;1em&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;-webkit-border-radius&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;1em&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;1em&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;-moz-box-shadow&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; inset &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;hexcolor&quot;&gt;#eee&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;-webkit-box-shadow&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; inset &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;hexcolor&quot;&gt;#eee&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;-webkit-box-shadow&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; inset &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;hexcolor&quot;&gt;#eee&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; inset &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;hexcolor&quot;&gt;#eee&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;-webkit-gradient&lt;/span&gt;(linear, left top, left bottom, &lt;span class=&quot;function&quot;&gt;color-stop&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.05&lt;/span&gt;, &lt;span class=&quot;hexcolor&quot;&gt;#aad2f0&lt;/span&gt;), &lt;span class=&quot;function&quot;&gt;color-stop&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hexcolor&quot;&gt;#8bc1ed&lt;/span&gt;))&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;-webkit-gradient&lt;/span&gt;(linear, left top, left bottom, &lt;span class=&quot;function&quot;&gt;color-stop&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.05&lt;/span&gt;, &lt;span class=&quot;hexcolor&quot;&gt;#aad2f0&lt;/span&gt;), &lt;span class=&quot;function&quot;&gt;color-stop&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hexcolor&quot;&gt;#8bc1ed&lt;/span&gt;))&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;-webkit-gradient&lt;/span&gt;(linear, left top, left bottom, &lt;span class=&quot;function&quot;&gt;color-stop&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.05&lt;/span&gt;, &lt;span class=&quot;hexcolor&quot;&gt;#aad2f0&lt;/span&gt;), &lt;span class=&quot;function&quot;&gt;color-stop&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hexcolor&quot;&gt;#8bc1ed&lt;/span&gt;))&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;-webkit-gradient&lt;/span&gt;(linear, left top, left bottom, &lt;span class=&quot;function&quot;&gt;color-stop&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.05&lt;/span&gt;, &lt;span class=&quot;hexcolor&quot;&gt;#aad2f0&lt;/span&gt;), &lt;span class=&quot;function&quot;&gt;color-stop&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hexcolor&quot;&gt;#8bc1ed&lt;/span&gt;))&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;-moz--webkit-linear-gradient&lt;/span&gt;(center top, &lt;span class=&quot;hexcolor&quot;&gt;#aad2f0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5%&lt;/span&gt;, &lt;span class=&quot;hexcolor&quot;&gt;#8bc1ed&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;-moz--moz-linear-gradient&lt;/span&gt;(center top, &lt;span class=&quot;hexcolor&quot;&gt;#aad2f0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5%&lt;/span&gt;, &lt;span class=&quot;hexcolor&quot;&gt;#8bc1ed&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;-moz--ms-linear-gradient&lt;/span&gt;(center top, &lt;span class=&quot;hexcolor&quot;&gt;#aad2f0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5%&lt;/span&gt;, &lt;span class=&quot;hexcolor&quot;&gt;#8bc1ed&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;function&quot;&gt;-moz-linear-gradient&lt;/span&gt;(center top, &lt;span class=&quot;hexcolor&quot;&gt;#aad2f0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5%&lt;/span&gt;, &lt;span class=&quot;hexcolor&quot;&gt;#8bc1ed&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=&#39;#aad2f0&#39;, endColorstr=&#39;#8bc1ed&#39;); */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#74a474&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hexcolor&quot;&gt;#dcdcdc&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;text-shadow&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;hexcolor&quot;&gt;#eee&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.article-footer-copyright&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin-top&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;2em&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;0.8em&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;hexcolor&quot;&gt;#d3d3d3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#ffffcc&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.article-footer-copyright&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;140%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以根据喜好修改格式。最后别忘了&lt;code&gt;@import &amp;#39;_partial/copyright&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;目前，网络中出现了一些不和谐因素，某些网站多次剽窃Hexo博友的原创文章。在对这些侵犯博友权益的网站提出谴责的同时，聪明的各位Geek们应该如何增强版权意识呢.&lt;/p&gt;
&lt;p&gt;最简单的办法就是在自己的部落格文章里添加水印，即使这些网站通过爬虫私自收录我们的文章，读者也能在文章中轻易的发现原作者。
    
    </summary>
    
      <category term="前端" scheme="http://peihao.space/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Hexo" scheme="http://peihao.space/tags/Hexo/"/>
    
      <category term="front end" scheme="http://peihao.space/tags/front-end/"/>
    
  </entry>
  
  <entry>
    <title>WormHole Router</title>
    <link href="http://peihao.space/2016/03/30/router-wormhole/"/>
    <id>http://peihao.space/2016/03/30/router-wormhole/</id>
    <published>2016-03-30T13:35:02.000Z</published>
    <updated>2016-03-30T14:02:13.529Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/img/article/router/wormhole-router.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如图是5端口虫孔路由器的结构，由5个输入端口、路由计算单元、开关分配单元、交叉开关和5个输出端口构成，其中4个端口与东、南、西、北4个方向的相邻路由器相连，剩下的是本地端口和IP核相连。虫孔路由器采用的是虫孔交换机制，同时使用缓存队列放置在输入端口的交换结构，输入缓存采用FIFO结构，缓存深度D表示输入缓存能够容纳的微片数目。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;工作过程&quot;&gt;工作过程&lt;/h1&gt;&lt;p&gt;虫孔路由器的工作工程如下，当头微片（head filt）到达路由器时，头尾片首先会被存入输入端口的缓存队列中，同时&lt;code&gt;路由计算单元&lt;/code&gt;会提取头微片中的路由信息，包括源节点和目的节点地址、分组长度、时间戳等等。并根据当前路由器与目的路由器之间的相对位置，执行相应的路由算法为该头微片&lt;code&gt;所在的分组&lt;/code&gt;选择一个相应的输出端口。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;路由计算单元&lt;/code&gt;计算出分组在路由器中的&lt;code&gt;输出端口&lt;/code&gt;后，会向&lt;code&gt;开关分配单元&lt;/code&gt;发送&lt;code&gt;输出端口请求&lt;/code&gt;。开关分配单元根据流量控制机制传回的&lt;code&gt;流量控制信息&lt;/code&gt;，将该头微片的输出端口请求与其他和该头微片去往相同的输出端口的来自&lt;code&gt;不同输入端口的请求&lt;/code&gt;进行竞争仲裁。&lt;/p&gt;
&lt;p&gt;开关分配单元完成开关分配后，会记录分配的结果，并根据该分配结果配置交叉开关，如果该头微片仲裁成功，那么交叉开关将链接该头微片所在的输入端口与它请求的输出端口，形成一个传输通道。同时开关分配单元会向该头微片所在的缓存发出读数据信号，接着该头微片从缓存中被独处，通过这条传输通道离开当前路由器。开关分配以分组为单位进行，当该头微片成功进行开关分配后，这个输出豆蔻被预约下来，后续的与它属于同一个分组的其他体微片和尾微片不再进行开关分配，直接进行开关传输，从头微片建立好的通道陆续从该输出端口离开当前路由器，当分组的尾微片经过交叉开关传输之后，分组对该输出端口的预约被释放，其他分组这是才能通过开关分配竞争这个输出端口。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;路由计算单元&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;路由计算单元主要是提起头微片的路由信息，并根据当前路由器与目的路由器之间的相对位置，计算出分组的输出端口。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开关分配单元&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开关分配单元根据流量控制机制传回的流控信息，将该头微片的输出端口请求与其他不同输入端口相同输出端口的微片通过仲裁机制进行竞争仲裁。并记录分配结果。并完成开关分配&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;交叉开关&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;交叉开关将开关分配单元行程的分配结果链接，也就是将输入端口（FIFO）与它请求的输出端口行程传输通道。同时开关分配单元会向头微片所在的缓存发出读数据信号，头微片沿传输通道传输。&lt;/p&gt;
&lt;h1 id=&quot;工作流程&quot;&gt;工作流程&lt;/h1&gt;&lt;p&gt;从上面的描述中可以看出，虫孔路由器其实可以分为一条控制路径和一条数据路径。控制路径路由&lt;code&gt;计算单元&lt;/code&gt;和&lt;code&gt;开关分配单元&lt;/code&gt;组成，通过控制路径为该头微片所在的分组的&lt;strong&gt;其他微片预约一个输出端口&lt;/strong&gt;，其他分组微片不能使用，直到该头微片的整个分组传输完后才能使用。数据路径由输入缓存和交叉开关构成，分组微片到来后由输入缓存存储，经过控制路径分配到输出端口，经过交叉开关转发到目的节点。很明显，虫孔路由器的工作是按照3级流水方式工作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/router/wormhole-3levels.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;分别由路由计算（RC）、开关分配（SA）以及开关传输（ST）。头微片SA成功后，体微片和尾微片可以直接使用SA的结果，跳过路由计算和开关分配阶段，直接进入开关传输阶段。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/article/router/wormhole-router.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如图是5端口虫孔路由器的结构，由5个输入端口、路由计算单元、开关分配单元、交叉开关和5个输出端口构成，其中4个端口与东、南、西、北4个方向的相邻路由器相连，剩下的是本地端口和IP核相连。虫孔路由器采用的是虫孔交换机制，同时使用缓存队列放置在输入端口的交换结构，输入缓存采用FIFO结构，缓存深度D表示输入缓存能够容纳的微片数目。
    
    </summary>
    
      <category term="router" scheme="http://peihao.space/categories/router/"/>
    
    
      <category term="router" scheme="http://peihao.space/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>Noc Topology</title>
    <link href="http://peihao.space/2016/03/29/router-topology/"/>
    <id>http://peihao.space/2016/03/29/router-topology/</id>
    <published>2016-03-29T13:35:02.000Z</published>
    <updated>2016-03-30T14:02:16.669Z</updated>
    
    <content type="html">&lt;p&gt;NoC的拓扑结构就是指NoC中各个节点的连接方式。通常NoC拓扑结构分为两类，一类是直接型网络拓扑，另一类是间接性网络拓扑。&lt;/p&gt;
&lt;h1 id=&quot;直接型&quot;&gt;直接型&lt;/h1&gt;&lt;p&gt;在直接网络中，节点处理器（IP）直接地通过网络彼此连接。常见的直接型拓扑包括网状拓扑（Mesh）、花式拓扑（Torus）等。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;2D_Mesh&quot;&gt;2D Mesh&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;2D Mesh结构是一种最简单，最直观的拓扑结构，如图。每个节点连接一个资源和四个相邻的路由器，每个资源通过一个网络接口（Net-Interface NI）连接着一个路由器。其中的资源可以是一个处理器核，内存，一个用户自定义硬件模块或者其他任何可以插入插槽并且可以和网络接口相配的IP（intellectual property）模块。路由器和路由器之间，路由器和资源之间是由一对输入和输出通道连接。通道是由两条单向的点对点总线组成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/router/2D-Mesh.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2D Mesh结构规则简单，但是边沿和定点位置节点的相对闭塞性，会极大的影响网络性能。&lt;/p&gt;
&lt;h2 id=&quot;2D_Torus&quot;&gt;2D Torus&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/router/2D-Torus.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2D Torus结构可以看成是对2D Mesh的一种扩展，即在边界的节点上增加了一条长的环路。因此，网络中所有的节点的度都为4，对于一个n*n的Torus网络，其中m、n为每个维度的节点数，若m==n，则称为规则的Torus。&lt;/p&gt;
&lt;p&gt;2D Torus拓扑在物理形式上与2D Mesh相似，但由于其存在很多环路，所以在路由算法和路由仲裁方面都要复杂的多。2D Torus拓扑的各个路由节点都是规则的，每个路由的节点结构都一样，所以扩展性也要比2D Mesh提高很多。&lt;/p&gt;
&lt;h1 id=&quot;间接性&quot;&gt;间接性&lt;/h1&gt;&lt;p&gt;在间接性网络中，节点处理器通过一个（或者更多个）的中间开关节点相互连接。间接型拓扑包括蝶形拓扑、Banyan、Fat-Tree拓扑等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/router/Fat-Tree.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;NoC的拓扑结构就是指NoC中各个节点的连接方式。通常NoC拓扑结构分为两类，一类是直接型网络拓扑，另一类是间接性网络拓扑。&lt;/p&gt;
&lt;h1 id=&quot;直接型&quot;&gt;直接型&lt;/h1&gt;&lt;p&gt;在直接网络中，节点处理器（IP）直接地通过网络彼此连接。常见的直接型拓扑包括网状拓扑（Mesh）、花式拓扑（Torus）等。&lt;br&gt;
    
    </summary>
    
      <category term="router" scheme="http://peihao.space/categories/router/"/>
    
    
      <category term="router" scheme="http://peihao.space/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>路由器架构</title>
    <link href="http://peihao.space/2016/03/28/router_know/"/>
    <id>http://peihao.space/2016/03/28/router_know/</id>
    <published>2016-03-28T13:35:02.000Z</published>
    <updated>2016-03-30T05:38:04.509Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Noc小记&quot;&gt;Noc小记&lt;/h1&gt;&lt;p&gt;Noc是由Router和Channel组成的网络结构。其中router主要用来控制网络中数据传输，channel是连通片上系统中各处理核之间进行点对点数据传输的通路。&lt;/p&gt;
&lt;p&gt;NoC采用分组交换的方式进行通信，片上网络中各处理核之间通过发送请求和接收相应消息的方式通信。在网络中传输的消息由头（head）、传输数据和尾（tail）组成。投中包含接收方的地址信息，router根据这个地址建立从传输方到达接收方的传输路径。传输数据即通信中核间要传输的信息。尾用来表示一个消息传输完毕。由于一个完整的传输数据往往包含的数据量很大，这样对片上网络的通信效率不利，于是我们将传输数据分割成更小的数据段，在对数据段添加头和尾构成数据包。&lt;/p&gt;
&lt;p&gt;一般的Router有以下单元组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;计算单元&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分配单元&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交叉单元&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输入单元   &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中路由计算涉及路由算法，输入单元涉及流控机制与交换机制，分配单元涉及流控机制与仲裁机制 ，而交叉开关涉及路由器的整体布局。&lt;/p&gt;
&lt;h1 id=&quot;wormhole&quot;&gt;wormhole&lt;/h1&gt;&lt;p&gt;目前虫孔路由器(wormhole router)和虚信道路由器(virtual channel router)主要使用的都是虫孔交换机制。虫孔交换机制将数据分组划分为更小的微片，链路每次只能通过一个微片。微片的种类又分 为头微片(hed filt)，体微片和尾微片(tail filt)，并且允许一个分组只由一个微片组成。只有头微片包含分组的路由信息〈源节点和目的节点地址、分组长度、时间戳等）。&lt;/p&gt;
&lt;p&gt;因此在传输分组数据时，由头微片根据路由信息为整个分组建立一条路由器内部的数据路径，体微片和尾微片沿着头微片建立的数据路径传输，其他分组的微片不能使用该路径，尾微片传输完毕后，路由器释放头微片建立的数据路径供其它分组传输使用。通过头微片这样逐跳的在路由器中建立的链路，整个分组最 终传输到目的地址。当头微片发生阻塞时，分组中的其它所有微片也都将停止前进，其中头微片缓存在当前路由器，其它微片就地缓存在它们自己所位于的若干个中间路由器中 。&lt;/p&gt;
&lt;h1 id=&quot;flow_control&quot;&gt;flow control&lt;/h1&gt;&lt;p&gt;上网络路由器与Internet路由器最大的区别在于它不支持重传，这意味着片上网络路由器不允许丢失数据分组，因此片上网络路由器需要精确的流量控制机制防止当下行路由器缓存空间满的时候，上行路由器还在持续发送数据而产生丢失数据分组现象。片上网络路由器常用的流控机制有3种，分别是基于credit的流控机制、基于握手的流控机制和on/off 流控机制 。&lt;/p&gt;
&lt;h2 id=&quot;credit&quot;&gt;credit&lt;/h2&gt;&lt;p&gt;基于 credit 的流控机制在每个路由器的输出端口处设置一个计数器，计数器中的值表示下行路由器输入端口中可用缓存的数目。上行路由器每发送一个微片它自己的计数器值就减1，当计数器的值减到0时就表示下行路由器输入端口中缓存队列己满，不能再继续发送，数据将在上行路由器中等待。当下行路由器中有 数据发送出去，意味着缓存被释放，就向上行路由器传回一个credit，上行路由器接收到credit后，计数器的值加1。基于credit的流控机制通过计数器的值是否为0能清楚的知道下行路由器是否满.不仅能防止丢失数据分组，同时能充分利用缓存资源，是当前主要的流控机制。&lt;/p&gt;
&lt;h2 id=&quot;on-off&quot;&gt;on-off&lt;/h2&gt;&lt;p&gt;由于基于credit的流控机制需要计数器，开销较大。一种改进的流控机制是on/off 流控机制，它在路由器中设置两个门限值 on 和 off ，当下行路由器中空闲缓存数目大于 off 时，发送1位比特信息通知上行路由器处于 “关” 状态，停止发送数据，当下行路由器的空闲缓存数目大于 on 时，发送l位比特信息通知上行路由器处于 “开” 状态，继续发送数据 。on/off 流控机制仅用l位比特信息来通知上行 路由器是否可以继续发送，而且回传信号次数也较基于 credit 流控机制少，但是它的缺点是由于 on/off 值的设定，不能充分利用缓存资源 。&lt;/p&gt;
&lt;h2 id=&quot;handshake&quot;&gt;handshake&lt;/h2&gt;&lt;p&gt;另一种改进的流控机制是基于握手的流控机制，它的工作原理是当上行路由器有数据发送时，先往下行路由器发送一个 req 信号，下行路由器收到 req 请求信号后，判断自己的缓存是否满，并返回一个 ack 应答信号，上行路由器接收的 ack 信号后，根据 ack 的值判断是否要发送数据。该机制虽然简单，但是一个明显的不足之处在于，该流控机制需要2个时钟周期来完成操作，比基于credit 的流控机制多了 1个时钟周期，增加了数据在网络中的传输时延。&lt;/p&gt;
&lt;h1 id=&quot;仲裁机制&quot;&gt;仲裁机制&lt;/h1&gt;&lt;p&gt;片上网络能支持数据的并行传输，这必然会引起不同信息之间的竞争冲突，具体到路由器就是多个输入端口的数据请求同一个输出端口离开时，产生的端口竞争，而在虚信道路由器中除了上述竞争外，还存在多个输入虚信道请求同一个输出虚信道的虚信道分配竞争 。目前路由器常用的仲裁机制有固定优先级、动态优先级和轮询仲裁机制。&lt;/p&gt;
&lt;h2 id=&quot;固定优先级&quot;&gt;固定优先级&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/article/router/fixed-priority.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;固定优先级的仲裁机制就是给每条线路分配固定的优先级，如果某条优先级高的线路一直有请求，那么其他优先级低的线路的请求将一直不会有响应。如图所示，端口A中一直有请求，并且他的优先级为3最高，因此他一直被相应，知道在时钟周期3他的请求变为0，才接着响应有请求切优先级最高的B端口，到了时钟周期7端口A又有请求，这时候A又被响应。可以看到尽管C端口一直有请求，但是由于他的优先级比较低，所以一直得不到相应。&lt;/p&gt;
&lt;h2 id=&quot;动态优先级&quot;&gt;动态优先级&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/article/adapter-priority.jpg&quot; alt=&quot;轮询机制&quot;&gt;&lt;/p&gt;
&lt;p&gt;动态优先级的仲裁机制与固定优先级的仲裁机制的原理基本相同，不同之处在于每条线路的优先级是动态变化的。每次也是相应优先级最高的请求。&lt;/p&gt;
&lt;p&gt;轮询仲裁机制基本思想是当前仲裁成功的请求在下一时钟周期仲裁中的优先级最低，最高优先级赋予相邻的下一个仲裁请求，这样一次轮询。如图，开始初始化一个仲裁顺序为A-B-C，那么首先选定A端口开始轮询仲裁，由于A端口没有请求，因此直接跳到B，接着到C，接着轮询A，发现A端口有请求，响应A端口。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Noc小记&quot;&gt;Noc小记&lt;/h1&gt;&lt;p&gt;Noc是由Router和Channel组成的网络结构。其中router主要用来控制网络中数据传输，channel是连通片上系统中各处理核之间进行点对点数据传输的通路。&lt;/p&gt;
&lt;p&gt;NoC采用分组交换的方式进行通信，片上网络中各处理核之间通过发送请求和接收相应消息的方式通信。在网络中传输的消息由头（head）、传输数据和尾（tail）组成。投中包含接收方的地址信息，router根据这个地址建立从传输方到达接收方的传输路径。传输数据即通信中核间要传输的信息。尾用来表示一个消息传输完毕。由于一个完整的传输数据往往包含的数据量很大，这样对片上网络的通信效率不利，于是我们将传输数据分割成更小的数据段，在对数据段添加头和尾构成数据包。&lt;/p&gt;
&lt;p&gt;一般的Router有以下单元组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;计算单元&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分配单元&lt;/p&gt;
    
    </summary>
    
      <category term="router" scheme="http://peihao.space/categories/router/"/>
    
    
      <category term="router" scheme="http://peihao.space/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>模拟退火</title>
    <link href="http://peihao.space/2016/03/27/SA/"/>
    <id>http://peihao.space/2016/03/27/SA/</id>
    <published>2016-03-27T13:35:02.000Z</published>
    <updated>2016-03-30T14:02:19.704Z</updated>
    
    <content type="html">&lt;h1 id=&quot;模拟退火算法概述&quot;&gt;模拟退火算法概述&lt;/h1&gt;&lt;p&gt;模拟退火算法来源于固体退火原理，将固体加温至充分高，再让其徐徐冷却，加温时，固体内部粒子随温升变为无序状，内能增大，而徐徐冷却时粒子渐趋有序，在每个温度都达到平衡态，最后在常温时达到基态，内能减为最小。根据&lt;code&gt;Metropolis&lt;/code&gt;准则，粒子在温度T时趋于平衡的概率为&lt;code&gt;e-ΔE/(kT)&lt;/code&gt;，其中E为温度T时的内能，ΔE为其改变量，k为&lt;code&gt;Boltzmann&lt;/code&gt;常数。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;用固体退火模拟组合优化问题，将内能E模拟为目标函数值f，温度T演化成控制参数t，即得到解组合优化问题的模拟退火算法：由初始解i和控制参数初值t开始，对当前解重复“产生新解→计算目标函数差→接受或舍弃”的迭代，并逐步衰减t值，算法终止时的当前解即为所得近似最优解，这是基于蒙特卡罗迭代求解法的一种启发式随机搜索过程。退火过程由冷却进度表(Cooling Schedule)控制，包括控制参数的初值t及其衰减因子Δt、每个t值时的迭代次数L和停止条件S。&lt;/p&gt;
&lt;h1 id=&quot;流程图&quot;&gt;流程图&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/sa.jpg&quot; alt=&quot;模拟退火&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;代码实现&quot;&gt;代码实现&lt;/h1&gt;&lt;h2 id=&quot;伪代码&quot;&gt;伪代码&lt;/h2&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Simulated-Annealing()    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Create initial solution S    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;repeat    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for i=1 to iteration-length do    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Generate a random transition from S to Si    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        If ( C(S) &amp;lt;= C(Si) ) then    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            S=Si    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else if( exp(C(S)-C(Si))/kt &amp;gt; random[0,1) ) then    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            S=Si    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Reduce Temperature t    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;until ( no change in C(S) )    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C(S): Cost or Loss function of Solution S&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;java实例实现&quot;&gt;java实例实现&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; space.peihao;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.BufferedReader;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.File;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.FileReader;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Arrays;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Random;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@author&lt;/span&gt; Dukie 下午02:22:13 2010  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Anneal&lt;/span&gt; &lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;[][] city;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] currPath;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] bestPath;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; shortesDistance;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; numOfCity = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//trace item    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; iterator = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;bestPath: &quot;&lt;/span&gt; + Arrays.toString(bestPath));    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;shortest distance: &quot;&lt;/span&gt; + shortesDistance);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;iterator times: &quot;&lt;/span&gt; + iterator);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        city = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;[numOfCity][numOfCity];    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        currPath = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[numOfCity];    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bestPath = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[numOfCity];    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shortesDistance = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loadCity();    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; lenth = currPath.length;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; lenth; i++) &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            currPath[i] = i;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;loadCity&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//DistanceMatrix.csv&quot; a file stores the distance info.    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        File file = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;string&quot;&gt;&quot;E:\\TSP\\DistanceMatrix.csv&quot;&lt;/span&gt;);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        inputGraph(file, city);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;inputGraph&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(File file, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;[][] city)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BufferedReader in = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileReader(file));    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String str = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((str = in.readLine()) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            str = str.replaceAll(&lt;span class=&quot;string&quot;&gt;&quot;, &quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            String[] line = str.split(&lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; numOfCity; j++)    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// ten cities    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                city[length][j] = Double.parseDouble(line[j]);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            length++;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * key function  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; IOException  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;anneal&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; temperature = &lt;span class=&quot;number&quot;&gt;10000.0&lt;/span&gt;D;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; deltaDistance = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;D;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; coolingRate = &lt;span class=&quot;number&quot;&gt;0.9999&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; absoluteTemperature = &lt;span class=&quot;number&quot;&gt;0.00001&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init();    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; distance = getToatalDistance(currPath);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] nextPath;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Random random = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Random();    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (temperature &amp;gt; absoluteTemperature) &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nextPath = generateNextPath();    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            deltaDistance = getToatalDistance(nextPath) - distance;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((deltaDistance &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    || (distance &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          Math.exp(-deltaDistance / temperature) &amp;gt; random.nextDouble())) &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                currPath = Arrays.copyOf(nextPath, nextPath.length);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                distance = deltaDistance + distance;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            temperature *= coolingRate;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            iterator++;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;iterator: &quot;&lt;/span&gt; + iterator + &lt;span class=&quot;string&quot;&gt;&quot; path: &quot;&lt;/span&gt; + Arrays.toString(currPath));    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shortesDistance = distance;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.arraycopy(currPath, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, bestPath, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, currPath.length);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * calculate total distance  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; currPath  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getToatalDistance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] currPath)&lt;/span&gt; &lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length = currPath.length;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; totalDistance = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;D;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i++) &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            totalDistance += city[currPath[i]][currPath[i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]];    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        totalDistance += city[currPath[length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; totalDistance;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * swap two elements in the old array to genreate new array  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] generateNextPath() &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] nextPath = Arrays.copyOf(currPath, currPath.length);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Random random = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Random();    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length = nextPath.length;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fistIndex = random.nextInt(length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; secIndex = random.nextInt(length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (fistIndex == secIndex) &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            secIndex = random.nextInt(length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; tmp = nextPath[fistIndex];    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nextPath[fistIndex] = currPath[secIndex];    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nextPath[secIndex] = tmp;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; nextPath;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述代码就是为了解决旅行商问题。旅行商按一定的顺序访问N个城市的每个城市,使得每个城市都能被访问且仅能被访问一次,最后回到起点,而使花费的代价最小。本例中从第0个城市开始然后回到原点.&lt;/p&gt;
&lt;h2 id=&quot;Tips&quot;&gt;Tips&lt;/h2&gt;&lt;p&gt;模拟退火算法与初始值无关，算法求得的解与初始解状态S(是算法迭代的起点)无关；模拟退火算法具有渐近收敛性，已在理论上被证明是一种以概率l 收敛于全局最优解的全局优化算法；模拟退火算法具有并行性。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;模拟退火算法概述&quot;&gt;模拟退火算法概述&lt;/h1&gt;&lt;p&gt;模拟退火算法来源于固体退火原理，将固体加温至充分高，再让其徐徐冷却，加温时，固体内部粒子随温升变为无序状，内能增大，而徐徐冷却时粒子渐趋有序，在每个温度都达到平衡态，最后在常温时达到基态，内能减为最小。根据&lt;code&gt;Metropolis&lt;/code&gt;准则，粒子在温度T时趋于平衡的概率为&lt;code&gt;e-ΔE/(kT)&lt;/code&gt;，其中E为温度T时的内能，ΔE为其改变量，k为&lt;code&gt;Boltzmann&lt;/code&gt;常数。
    
    </summary>
    
      <category term="算法" scheme="http://peihao.space/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://peihao.space/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>verilog笔记</title>
    <link href="http://peihao.space/2016/03/24/verilog_date/"/>
    <id>http://peihao.space/2016/03/24/verilog_date/</id>
    <published>2016-03-24T07:23:35.000Z</published>
    <updated>2016-03-24T16:18:20.089Z</updated>
    
    <content type="html">&lt;h1 id=&quot;模块&quot;&gt;模块&lt;/h1&gt;&lt;h2 id=&quot;模块介绍&quot;&gt;模块介绍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;模块是Verilog HDL语言的基本单元，数字系统是用模块的形式来描述。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模块是描述某个设计的功能、结构和其他模块通信的外部端口。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Verilog HDL中的各个模块是并行运行的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模块可以调用其他模块的实例   &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;模块结构&quot;&gt;模块结构&lt;/h2&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module &amp;lt;模块名&amp;gt;(&amp;lt;端口列表&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	端口说明（input，output，inout）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	参数定义（可选）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	数据类型定义&lt;span class=&quot;comment&quot;&gt;//wire、reg、task、function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	连续赋值语句（assign）&lt;span class=&quot;comment&quot;&gt;//组合逻辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	过程块（always和initial）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	-行为描述语句&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	低层模块实例&lt;span class=&quot;comment&quot;&gt;//调用其它模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	任务和函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	延时说明块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;语句模块描述方式&quot;&gt;语句模块描述方式&lt;/h1&gt;&lt;p&gt;Verilog有三种建模方式，分别是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;结构化描述方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据流描述方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;行为描述方式&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;结构型描述&quot;&gt;结构型描述&lt;/h2&gt;&lt;p&gt;通过实例进行描述的方法，将预定义的基本原件实例嵌入语言中，监控实例的输入，一单任何一个发生变化便重新运算并输出。&lt;/p&gt;
&lt;h2 id=&quot;数据流型描述&quot;&gt;数据流型描述&lt;/h2&gt;&lt;p&gt;是一种描述组合逻辑功能的方法，用&lt;code&gt;assign&lt;/code&gt;连续赋值语句来实现。&lt;/p&gt;
&lt;p&gt;连续赋值语句完成如下的组合功能：等式右边的所有变量受持续监控，每当这些变量中有任何一个发生变化，整个表达式被重新赋值并送给等式左端。&lt;/p&gt;
&lt;h2 id=&quot;行为级描述&quot;&gt;行为级描述&lt;/h2&gt;&lt;p&gt;是通过描述行为特性来实现，关键词是&lt;code&gt;always&lt;/code&gt;，含义是一单敏感变量发货时能变化，就重新一次进行赋值，有无限循环之意。这种描述方法常用来实现时序电路，也可用来描述组合功能。&lt;/p&gt;
&lt;h2 id=&quot;Tip&quot;&gt;Tip&lt;/h2&gt;&lt;p&gt;用户可以混用上述三种描述方法，但需要说明的是，模块中门的实例、模块实例语句、assign语句和always语句是并发执行的，即执行顺序和书写次序无关。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Verilog HDL区分大小写&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Verilog HDL关键字一般为小写&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中数据流描述方式经常使用连续赋值语句，某个值被赋给某个网线变量。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;assign [delay] net_name = expression;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注意在各assign 语句之间，是并行执行的，即各语句的执行与语句之间的顺序无关。&lt;/p&gt;
&lt;p&gt;行为描述方式经常使用always、initial语句赋值。使用reg进行寄存器的声明。always是指一直在重复运行，由always后面括号的变量变化时触发。在always以及end之间是串行顺序执行的。&lt;/p&gt;
&lt;p&gt;数据流型描述是一种描述组合逻辑功能的方法，用assign连续赋值语句来实现。&lt;/p&gt;
&lt;h1 id=&quot;常量&quot;&gt;常量&lt;/h1&gt;&lt;h2 id=&quot;数字&quot;&gt;数字&lt;/h2&gt;&lt;p&gt;语法：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;位宽&amp;gt;&amp;#39;&amp;lt;进制&amp;gt;&amp;lt;数值&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中位宽是指对应二进制的位数    &lt;/p&gt;
&lt;p&gt;需要注意的是，尾款小于相应数值的实际位数时，相应的高位部分被忽略。&lt;code&gt;4&amp;#39;D61&lt;/code&gt;与&lt;code&gt;4&amp;#39;B1101&lt;/code&gt;相同。因为十进制下&lt;code&gt;61==111101&lt;/code&gt;，这里要求二进制4bit，所以是&lt;code&gt;1101&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;parameter&quot;&gt;parameter&lt;/h2&gt;&lt;p&gt;语法:&lt;/p&gt;
&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;parameter&lt;/span&gt; 参数名&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;=表达式，参数名&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;=表达式，......；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;例：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;parameter&lt;/span&gt; count_bits=&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;parameter&lt;/span&gt; sel=&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,code=&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&#39;ha3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;parameter&lt;/span&gt; datawidth=&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;;addwidth=datawidth*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用常量的目的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;便于阅读&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;便于修改 &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;变量&quot;&gt;变量&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;网络型 nets type&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指硬件电路中的各种连接，输出始终根据输入的变化更新其值的变化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;寄存器型 register type &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常指硬件中电路中具有状态保持作用的器件，如触发器、寄存器等等。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;nets type中最主要的就是wire型变量，常用来表示用assign语句赋值的组合逻辑信号。可以取值为0，1，x（不定值），z（高阻）    &lt;/p&gt;
&lt;p&gt;注意，Verilog HDL模块中的输入输出信号类型缺省时，自动定义为wire型变量。&lt;/p&gt;
&lt;p&gt;语法：&lt;br&gt;wire 数据1，数据2，……数据n.&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wire a,b,c &lt;span class=&quot;comment&quot;&gt;//定义了三个wire型变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wire[&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] databus &lt;span class=&quot;comment&quot;&gt;//定义了8bit宽wire型向量数据总线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wire[&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] addrbus  &lt;span class=&quot;comment&quot;&gt;//定义了20bit宽的wire型向量地址总线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;这里记录下register type中的reg型，常用的寄存器型变量&lt;/p&gt;
&lt;p&gt;语法： reg 数据1，数据2，数据3……;&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;reg a,b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reg[&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] data &lt;span class=&quot;comment&quot;&gt;//定义可8bit宽的reg型向量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reg[&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] mymem[&lt;span class=&quot;number&quot;&gt;1023&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;comment&quot;&gt;//定义了1024字节（8bit*1024）的存储器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;常用语句&quot;&gt;常用语句&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;赋值           连续赋值语句、过程赋值语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;条件语句         if-else语句、case语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;循环语句         forever、repeat、while、for语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;结构说明语句     initial、always、task、function语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编译预处理语句     ‘define ‘include ‘timescale语句&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;过程块&quot;&gt;过程块&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;always过程块&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;模板：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;always @(&amp;lt;敏感信号表达式&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//过程赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//if语句	&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//case语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//while、repeat、for语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//task、function调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当敏感信号表达式的值改变时候，就执行一遍块内语句。同时always过程块是不能够嵌套使用的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;&lt;code&gt;posedge&lt;/code&gt;与&lt;code&gt;negedge&lt;/code&gt;关键字分别是上升沿以及下降沿&lt;/p&gt;
&lt;p&gt;例如：同步时序电路的时钟信号为clk，clear为异步清零信号。敏感信号可写为：&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//上升沿触发，高电平清0有效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clk &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clear)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//上升沿触发，低电平清0有效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clk &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;negedge&lt;/span&gt; clear)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如当&lt;code&gt;negedge clear&lt;/code&gt;表示当&lt;code&gt;clear==0&lt;/code&gt;时&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clk &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;negedge&lt;/span&gt; clear)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;!&lt;/span&gt;clear)&lt;span class=&quot;comment&quot;&gt;//当clear==0时候，always会由事件驱动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			qout&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			qout&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;in;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;initial过程块&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;initial模板：&lt;/p&gt;
&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;initial&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	语句&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对变量和存贮器初始化&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;initial&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	reg1=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(addr=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;addr&amp;lt;size;addr=addr+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		memory[addr]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;initial语句主要面向功能模拟，通常不具有可综合性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模拟0时刻开始执行，只执行一次&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同一模块内的多个initial过程块，模拟0时刻开始并行执行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;initial与always语句一样，是不能嵌套使用的。即在initial语句中不能再次嵌套initial语句块。 &lt;/p&gt;
&lt;h2 id=&quot;赋值语句&quot;&gt;赋值语句&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;连续赋值语句assign常用于对wire型变量进行赋值&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;input a,b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;output c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;assign c=a&amp;amp;b;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;a,b信号的任何变化，都将随时反映到c上来。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;过程赋值语句&lt;strong&gt;常用于对reg型变量进行赋值&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一般分为两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;非阻塞赋值：一条非阻塞赋值语句的执行是不会阻塞下一条语句的执行，也就是收本条非阻塞赋值语句的执行完毕之前，下一条语句也可以开始执行。非阻塞赋值语句在块结束时才一同完成赋值操作，在一块内非阻塞赋值语句并行执行。赋值符号&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;阻塞赋值：该语句结束时就完成赋值操作，前面的语句没有完成之前，后面的语句是不能执行的，在一块内非阻塞赋值语句顺序执行。赋值符号&lt;code&gt;=&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非阻塞赋值：&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt; non_block (c, a,b,clk);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;output&lt;/span&gt; c,b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt; a,clk;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;reg&lt;/span&gt; c,b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clk)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		b&lt;span class=&quot;keyword&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		c&lt;span class=&quot;keyword&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endmodule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于是非阻塞赋值，bc在clk上升沿同时进行状态变化。所以&lt;code&gt;b&amp;lt;=a;c&amp;lt;=b;&lt;/code&gt;语句在同时执行，所以c的值是b上一个上升沿的值，b的值被赋值为a上一个上升沿的值。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/verilog_data_setvalue.jpg&quot; alt=&quot;仿真图片&quot;&gt;&lt;/p&gt;
&lt;p&gt;阻塞赋值：&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt; block (c, a,b,clk);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;output&lt;/span&gt; c,b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt; a,clk;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;reg&lt;/span&gt; c,b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;posedge&lt;/span&gt; clk)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;begin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		b&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		c&lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt;b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endmodule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;顺序执行有&lt;code&gt;c==b&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/verilog_date_setvalue2.jpg&quot; alt=&quot;仿真图片&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;条件语句&quot;&gt;条件语句&lt;/h2&gt;&lt;p&gt;if-else语句块&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pass&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;case语句&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; （&amp;lt;敏感表达式&amp;gt;）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	值&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;：语句或语句块&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ；&lt;span class=&quot;comment&quot;&gt;//case分支项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	值&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;：语句或语句块&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; ；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	……&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	值n：语句或语句块n ；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;：语句或语句块n+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;；&lt;span class=&quot;comment&quot;&gt;//可省略&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endcase&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Tips&quot;&gt;Tips&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;若没有列出所有条件分支，编译器认为条件不满足时，会引进触发器保持原值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;时序电路可利用上述特性来保持状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;组合电路必须列出所有条件分支，否则会产生隐含触发器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;8bit二进制乘法器  integer&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;module &lt;span class=&quot;title&quot;&gt;mult_for&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(outcome,a,b)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parameter size=&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;output[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*size:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] outcome;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input[size:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] a,b; &lt;span class=&quot;comment&quot;&gt;//乘数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reg[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*size:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] outcome; &lt;span class=&quot;comment&quot;&gt;//积&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;integer i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;always @(a or b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		outcome=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;i&amp;lt;=size;i=i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(b[i]) outcome=outcome+( a&amp;lt;&amp;lt;(i-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) ) ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;task、function&quot;&gt;task、function&lt;/h1&gt;&lt;h2 id=&quot;task&quot;&gt;task&lt;/h2&gt;&lt;p&gt;定义格式：&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;&amp;lt;&lt;/span&gt;任务名&lt;span class=&quot;keyword&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	端口与类型说明&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	局部变量说明&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	语句或语句块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endtask&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用格式：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;任务名&amp;gt;(port1，port2，port3,......)&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;函数function&quot;&gt;函数function&lt;/h2&gt;&lt;p&gt;定义格式:&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function &amp;lt;返回值位宽或类型&amp;gt; &amp;lt;函数名&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	输入端口与类型说明&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	局部变量说明&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	语句或语句块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endfunction&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用格式:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;函数名&amp;gt; (&amp;lt;输入表达式1&amp;gt;,&amp;lt;输入表达式2&amp;gt;,&amp;lt;输入表达式3&amp;gt;,......)&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module function_example(i,&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt;[7:0] &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;output[2:0] &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;reg&lt;/span&gt;[2:0] &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	function[2:0] gefun;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt;[7:0] x; &lt;span class=&quot;comment&quot;&gt;//输入端口说明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;reg&lt;/span&gt;[2:0] &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		integer i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=0;i&amp;lt;=7;i=i+1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(x[i]==1&#39;b0)&lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;+1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			gefun=&lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	endfunction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	always @(&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;=gefun(&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//这里要注意的是 in要与x位宽相同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Verilog中函数function声明，在声明的最后一句一般都是对结果赋值。也就是对函数名赋值。如上例中，函数名gefun，在声明最后一句就是对gefun的赋值。&lt;/p&gt;
&lt;h1 id=&quot;编译预处理&quot;&gt;编译预处理&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;`define&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;`include&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;`timescale&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编译指令以”`”反引号开头。不同于整数的单引号，预编译使用的是反引号，一般在键盘的左上角。&lt;/p&gt;
&lt;h1 id=&quot;顺序与并行&quot;&gt;顺序与并行&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;assign语句&lt;code&gt;之间&lt;/code&gt;:并行执行（同时执行）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;过程块&lt;code&gt;之间&lt;/code&gt;（always、initial）：并行执行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;assign语句与过程块&lt;code&gt;之间&lt;/code&gt;：并行执行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;过程块（initial、always）内部&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;串行块（begin-end）：顺序执行—非阻塞语句类似于并行语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;并行快（fork-join）：并行执行&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;模块&quot;&gt;模块&lt;/h1&gt;&lt;h2 id=&quot;模块介绍&quot;&gt;模块介绍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;模块是Verilog HDL语言的基本单元，数字系统是用模块的形式来描述。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模块是描述某个设计的功能、结构和其他模块通信的外部端口。&lt;/p&gt;
    
    </summary>
    
      <category term="Verilog" scheme="http://peihao.space/categories/Verilog/"/>
    
    
      <category term="Verilog HDL" scheme="http://peihao.space/tags/Verilog-HDL/"/>
    
  </entry>
  
  <entry>
    <title>verilog实例</title>
    <link href="http://peihao.space/2016/03/23/verilog_instance/"/>
    <id>http://peihao.space/2016/03/23/verilog_instance/</id>
    <published>2016-03-23T07:23:35.000Z</published>
    <updated>2016-03-24T08:24:58.586Z</updated>
    
    <content type="html">&lt;p&gt;模块（module）是Verilog 的基本描述单位，用于描述某个设计的功能或结构及与其他模块通信的外部端口。&lt;/p&gt;
&lt;p&gt;模块在概念上可等同一个器件就如我们调用通用器件（与门、三态门等）或通用宏单元（计数器、ALU、CPU）等，因此，一个模块可在另一个模块中调用。&lt;/p&gt;
&lt;p&gt;一个电路设计可由多个模块组合而成，因此一个模块的设计只是一个系统设计中的某个层次设计，模块设计可采用多种建模方式。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;小程序&quot;&gt;小程序&lt;/h1&gt;&lt;h2 id=&quot;加法器&quot;&gt;加法器&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;module &lt;span class=&quot;title&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(a,b,&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;,count,sum)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	input [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	input [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	input &lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	output count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	output [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]sum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	assign &amp;#123;count,sum&amp;#125;=a+b+&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的程序描述的是一个3位加法器，可以看出来，程序从module开始，以endmodule结束。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;input [2,0]a&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;表示声明一个3bit的输入变量，命名为a&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;assign {count，sum}=a+b+cin&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;表明为线网类型赋值，&lt;code&gt;{}&lt;/code&gt;是连接符号，count是1bit，sum是3bit，所以连接之后是4bit，最高位是count。等式右边是2个3bit相加，再加上一个1bit的，实现的全加器。&lt;/p&gt;
&lt;h2 id=&quot;比较器&quot;&gt;比较器&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module compare （equal，a，b）；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] a,b; &lt;span class=&quot;comment&quot;&gt;// declare the input signal ;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;output equare ; &lt;span class=&quot;comment&quot;&gt;// declare the output signal;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;assign equare = (a == b) ? &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/ * &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; a = b , output &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, otherwise &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;；*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;逻辑部分是一个三目运算符号，有C语言基础的都可以看懂。&lt;/p&gt;
&lt;h1 id=&quot;三态驱动器&quot;&gt;三态驱动器&lt;/h1&gt;&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt; mytri (din, d_en, d_out);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt; din;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt; d_en;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;output&lt;/span&gt; d_out;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// -- Enter your statements here -- //&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;assign&lt;/span&gt; d_out &lt;span class=&quot;keyword&quot;&gt;=&lt;/span&gt; d_en ? din &lt;span class=&quot;keyword&quot;&gt;:&lt;/span&gt;&#39;bz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endmodule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt; trist (din, d_en, d_out);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt; din;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt; d_en;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;output&lt;/span&gt; d_out;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// --statements here -- //&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	mytri u_mytri(din,d_en,d_out);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endmodule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该例描述了一个三态驱动器。其中三态驱动门在模块 mytri 中描述，而在模块trist 中调用了模 mytri 。模块mytri 对trist 而言相当于一个已存在的器件，在trist 模块中对该器件进行实例化，实例化名 u_mytri 。&lt;/p&gt;
&lt;h1 id=&quot;模块结构&quot;&gt;模块结构&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;模块内容是嵌在module 和endmodule两个语句之间。每个模块实现特定的功能，模块可进行层次的 套，因此可以将大型的数字电路设计分割成大小不一的小模块来实现特定的功能，最后通过由顶层模块调用子模块来实现整体功能，这就是Top-Down的设计思想.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模块包括接口描述部分和逻辑功能描述部分。这可以把模块与器件相类比。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;模块的端口定义部分：&lt;/p&gt;
&lt;p&gt;如上例： module addr (a, b, cin, count, sum); 其中module 是模块的保留字，addr 是模块的名字，相当于器件名。（）内是该模块的端口声明，定义了该模块的管脚名，是该模块与其他模块&lt;br&gt;通讯的&lt;code&gt;外部接口&lt;/code&gt;，相当于器件的pin 。&lt;br&gt;模块的内容，包括I/O说明，内部信号、调用模块等的声明语句和功能定义语句。&lt;br&gt;I/O说明语句如： input [2:0] a; input [2:0] b; input cin; output count; 其中input 、&lt;br&gt;output、inout 是保留字，定义了管脚信号的流向，[n:0]表示该信号的&lt;code&gt;位宽&lt;/code&gt;（总线或单根信号线）。&lt;/p&gt;
&lt;p&gt;逻辑功能描述部分如： assign d_out = d_en ? din :’bz;&lt;br&gt;mytri u_mytri(din,d_en,d_out);&lt;/p&gt;
&lt;p&gt;功能描述用来产生各种逻辑（主要是组合逻辑和时序逻辑，可用多种方法进行描述），还可用来实例化一个器件，该器件可以是厂家的器件库也可以是我们自己用HDL设计的模块（相当于在原理图输入时调用一个库元件）。在逻辑功能描述中，主要用到assign 和always 两个语句。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对每个模块都要进行端口定义，并说明输入、输出口，然后对模块的功能进行逻辑描述，当然，对测试模块，可以没有输入输出口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Verilog HDL 的书写格式自由，一行可以写几个语句，也可以一个语句分几行写。具体由代码书写规范约束。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;除endmodule 语句外，每个语句后面需有分号表示该语句结束。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;全加器&quot;&gt;全加器&lt;/h1&gt;&lt;h2 id=&quot;一位全加器&quot;&gt;一位全加器&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/verilog_hdl.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如上图是一位全加器&lt;/p&gt;
&lt;p&gt;这里先说明下什么是全加器，并说下全加器半加器的区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;半加器不考虑低位过来的进位，只计算2个一位二进制数相加。产生一个本位和，还有一个向高位的进位信号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;全加器考虑低位过来的进位，计算2个一位二进制数相加。产生一个本位和，还有一个向高位的进位信号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;即半加器有二个输入，二个输出。全加器有三个输入，2个输出。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module FA_struct (&lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;, B, Cin, Sum, Count)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	input &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	input B&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	input Cin&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	output Sum&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	output Count&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wire S1, T1, T2, T3&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// -- statements -- //&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	xor x1 (S1, &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;, B)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	xor x2 (Sum, S1, Cin)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	and A1 (T3, &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;, B )&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	and A2 (T2, B, Cin)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	and A3 (T1, &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;, Cin)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	or O1 (Cout, T1, T2, T3 )&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该实例显示了一个全加器由两个异或门、三个与门、一个或门构成。S1、T1、T2、T3则是门与门之间的连线。代码显示了用纯结构的建模方式，其中xor 、and、or 是Verilog HDL 内置的器件。以 xor x1 (S1, A, B) 该例化语句为例：&lt;br&gt;xor 表明调用一个内置的异或门，器件名称xor ，代码实例化名x1（类似原理图输入方式）。括号内的S1，A，B 表明该器件管脚的实际连接线（信号）的名称，其中 A、B是输入，S1是输出。其他同。&lt;/p&gt;
&lt;h2 id=&quot;两位全加器&quot;&gt;两位全加器&lt;/h2&gt;&lt;p&gt;两位的全加器可通过调用两个一位的全加器来实现。该设计的设计层次示意图和结构图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/2bitFA.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module Four_bit_FA (FA, FB, FCin, FSum, FCout ) &lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	parameter SIZE = 2&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	input [SIZE:1] FA&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	input [SIZE:1] FB&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	input FCin&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	output [SIZE:1] FSum&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	output FCout&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wire FTemp&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	FA_struct FA1(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.&lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt; (FA[1]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.B (FB[1]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.Cin (FCin) ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.Sum (FSum[1]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.Cout (Ftemp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	FA_struct FA2(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.&lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt; (FA[2]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.B (FB[2]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.Cin (FTemp) ,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.Sum (FSum[2]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.Cout (FCount )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;除了低位的进位Fcin，输入FA与FB都是两位，将输入的两位分别放到两个一位全加器上面，就好像我们在做两位数加法时，也是将个位、十位分别相加，再加上进位。&lt;/p&gt;
&lt;p&gt;该实例用结构化建模方式进行一个两位的全加器的设计，顶层模块Four_bit_FA 调用了两个一位的全加器 FA_struct 。在这里，以前的设计模块FA_struct 对顶层而言是一个现成的器件，顶层模块只要进行例化就可以了。注意这里的例化中，端口映射（管脚的连线）采用名字关联，如 .A （FA[2]） ，其中.A 表示 调用器件的管脚A，括号中的信号表示接到该管脚A的电路中的具体信号。wire 保留字表明信号Ftemp 是属线网类型（下面有具体描述）。&lt;/p&gt;
&lt;h1 id=&quot;Verilog建模&quot;&gt;Verilog建模&lt;/h1&gt;&lt;p&gt;Verilog有三种建模方式，分别是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;结构化描述方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据流描述方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;行为描述方式&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中数据流描述方式经常使用连续赋值语句，某个值被赋给某个网线变量。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;assign [delay] net_name = expression;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注意在各assign 语句之间，是并行执行的，即各语句的执行与语句之间的顺序无关。&lt;/p&gt;
&lt;p&gt;行为描述方式经常使用always、initial语句赋值。使用reg进行寄存器的声明。always是指一直在重复运行，由always后面括号的变量变化时触发。在always以及end之间是串行顺序执行的。&lt;/p&gt;
&lt;p&gt;数据流型描述是一种描述组合逻辑功能的方法，用assign连续赋值语句来实现。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;模块（module）是Verilog 的基本描述单位，用于描述某个设计的功能或结构及与其他模块通信的外部端口。&lt;/p&gt;
&lt;p&gt;模块在概念上可等同一个器件就如我们调用通用器件（与门、三态门等）或通用宏单元（计数器、ALU、CPU）等，因此，一个模块可在另一个模块中调用。&lt;/p&gt;
&lt;p&gt;一个电路设计可由多个模块组合而成，因此一个模块的设计只是一个系统设计中的某个层次设计，模块设计可采用多种建模方式。&lt;/p&gt;
    
    </summary>
    
      <category term="Verilog" scheme="http://peihao.space/categories/Verilog/"/>
    
    
      <category term="Verilog HDL" scheme="http://peihao.space/tags/Verilog-HDL/"/>
    
  </entry>
  
  <entry>
    <title>Matplotlib快速绘图</title>
    <link href="http://peihao.space/2016/03/17/Matplotlib%E5%BF%AB%E9%80%9F%E7%BB%98%E5%9B%BE/"/>
    <id>http://peihao.space/2016/03/17/Matplotlib快速绘图/</id>
    <published>2016-03-17T14:23:35.000Z</published>
    <updated>2016-03-17T15:12:28.997Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Matplotlib&quot;&gt;Matplotlib&lt;/h1&gt;&lt;p&gt;&lt;em&gt;matplotlib 是python最著名的绘图库，它提供了一整套和matlab相似的命令API，十分适合交互式地行制图。而且也可以方便地将它作为绘图控件，嵌入GUI应用程序中。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;优势&quot;&gt;优势&lt;/h2&gt;&lt;p&gt;作为python上最有名气的绘图库:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Matlab的语法&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;python语言&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;latex的画图质量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以使用内嵌的latex引擎绘制的数学公式&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;快速绘图&quot;&gt;快速绘图&lt;/h2&gt;&lt;p&gt;matplotlib实际上是一套面向对象的绘图库，它所绘制的图表中的每个绘图元素，例如线条Line2D、文字Text、刻度等在内存中都有一个对象与之对应。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;为了方便快速绘图matplotlib通过pyplot模块提供了一套和MATLAB类似的绘图API，将众多绘图对象所构成的复杂结构隐藏在这套API内部。我们只需要调用pyplot模块所提供的函数就可以实现快速绘图以及设置图表的各种细节。&lt;/em&gt;pyplot模块虽然用法简单，但不适合在较大的应用程序中使用。&lt;/p&gt;
&lt;p&gt;为了将面向对象的绘图库包装成只使用函数的调用接口，pyplot模块的内部保存了当前图表以及当前子图等信息。当前的图表和子图可以使用&lt;code&gt;plt.gcf()&lt;/code&gt;和&lt;code&gt;plt.gca()&lt;/code&gt;获得，分别表示&lt;em&gt;“Get Current Figure”&lt;/em&gt;和&lt;em&gt;“Get Current Axes”&lt;/em&gt;。在pyplot模块中，许多函数都是对当前的&lt;code&gt;Figure&lt;/code&gt;或&lt;code&gt;Axes&lt;/code&gt;对象进行处理&lt;/p&gt;
&lt;p&gt;&lt;code&gt;plt.plot()&lt;/code&gt;实际上会通过plt.gca()获得当前的Axes对象ax，然后再调用ax.plot()方法实现真正的绘图&lt;/p&gt;
&lt;h1 id=&quot;柱状图&quot;&gt;柱状图&lt;/h1&gt;&lt;h2 id=&quot;横向&quot;&gt;横向&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/article/barh.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.rcdefaults()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;people = (&lt;span class=&quot;string&quot;&gt;&#39;James&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Durant&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Kobe&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Wade&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Curry&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;Magic&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;Hardan&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y_pos = np.arange(len(people))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performance = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; * np.random.rand(len(people)) &lt;span class=&quot;comment&quot;&gt;#随机产生len(people)个 [0,1）的数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;error = np.random.rand(len(people))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.barh(y_pos, performance, xerr=error, align=&lt;span class=&quot;string&quot;&gt;&#39;center&#39;&lt;/span&gt;, alpha=&lt;span class=&quot;number&quot;&gt;0.4&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;#这里是产生横向柱状图 barh h--horizontal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.yticks(y_pos, people)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.xlabel(&lt;span class=&quot;string&quot;&gt;&#39;Performance&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.title(&lt;span class=&quot;string&quot;&gt;&#39;How efficient do you want to go today?&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.savefig(&lt;span class=&quot;string&quot;&gt;&quot;barh.png&quot;&lt;/span&gt;,format=&lt;span class=&quot;string&quot;&gt;&quot;png&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;纵向&quot;&gt;纵向&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/article/bar.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;people = (&lt;span class=&quot;string&quot;&gt;&#39;James&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Durant&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Kobe&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Wade&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Curry&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;Magic&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;Hardan&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x_pos = np.arange(len(people))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performance = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; * np.random.rand(len(people)) &lt;span class=&quot;comment&quot;&gt;#随机产生len(people)个 [0,1）的数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;error = np.random.rand(len(people))/&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.bar(x_pos, performance, xerr=error, align=&lt;span class=&quot;string&quot;&gt;&#39;center&#39;&lt;/span&gt;, alpha=&lt;span class=&quot;number&quot;&gt;0.4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.xticks(x_pos, people)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.ylabel(&lt;span class=&quot;string&quot;&gt;&#39;Performance&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.title(&lt;span class=&quot;string&quot;&gt;&#39;How efficient do you want to go today?&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.savefig(&lt;span class=&quot;string&quot;&gt;&quot;bar.png&quot;&lt;/span&gt;,format=&lt;span class=&quot;string&quot;&gt;&quot;png&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;解析&quot;&gt;解析&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;plt.rcdefaults()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;恢复 rc 的默认设置&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;barh()&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主要功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;：做一个横向条形图，横向条的矩形大小为: left, left + width, bottom, bottom + height&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bar()&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主要功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;：做一个纵向条形图，纵向条的矩形大小为: left, left + width, bottom, bottom + height&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;：barh ( bottom , width , height =0.8, left =0, ** kwargs )&lt;/p&gt;
&lt;p&gt;：bar  ( bottom , width , height =0.8, left =0, ** kwargs )&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;返回类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;：一个 class 类别，matplotlib.patches.Rectangle实例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数说明&lt;br&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;bottom&lt;/code&gt;: Bars 的垂直位置的底部边缘&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;width&lt;/code&gt;: Bars 的长度&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;可选参数：&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;height: bars 的高度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;left: bars 左边缘 x 轴坐标值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;color: bars 颜色&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;edgecolor: bars 边缘颜色&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linewidth: bar 边缘宽度;None 表示默认宽度;0 表示不 i 绘制边缘&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xerr: 若不为 None,将在 bar 图上生成 errobars&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;yerr: 若不为 None,将在 bar 图上生成 errobars&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ecolor: 指定 errorbar 颜色&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;capsize: 指定 errorbar 的顶部(cap)长度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;align: &lt;code&gt;edge&lt;/code&gt; (默认) | &lt;code&gt;center&lt;/code&gt;:&lt;code&gt;edge&lt;/code&gt;以底部为准对齐;&lt;code&gt;center&lt;/code&gt;以 y 轴作为中心&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;log: [False|True] False (默认),若为 True,使用 log 坐标&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;图形填充&quot;&gt;图形填充&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/img/article/fill.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = np.linspace(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y = np.sin(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; * np.pi * x) * np.exp(-&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; * x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.fill(x, y, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.grid(&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.savefig(&lt;span class=&quot;string&quot;&gt;&quot;fill.png&quot;&lt;/span&gt;,format=&lt;span class=&quot;string&quot;&gt;&quot;png&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;： grid 表示是否显示图轴网格。函数原型 matplotlib.pyplot.grid(b=None, which=’major’, axis=’both’, **kwargs)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调用形式： &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;grid(self, b=None, which=’major’, axis=’both’, **kwargs)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主要参数：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;b&lt;/code&gt;： [True|False]或者是布尔数组、或[‘on’,‘off’] 表示网格是否开启&lt;/p&gt;
&lt;p&gt;&lt;code&gt;which&lt;/code&gt;： [major(默认)|minor|both] 选择主、次网格开启方式&lt;/p&gt;
&lt;p&gt;&lt;code&gt;axis&lt;/code&gt;： [both(默认)|x|y] 选择使用网格的数轴&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x = np.linspace(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; * np.pi, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y1 = np.sin(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y2 = np.sin(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; * x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.fill(x, y1, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;, x, y2, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;, alpha=&lt;span class=&quot;number&quot;&gt;0.7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.savefig(&lt;span class=&quot;string&quot;&gt;&quot;features.png&quot;&lt;/span&gt;,format=&lt;span class=&quot;string&quot;&gt;&quot;png&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/article/features.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;alpha 表示透明度，0表示全透明，1表示完全不透明。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Matplotlib&quot;&gt;Matplotlib&lt;/h1&gt;&lt;p&gt;&lt;em&gt;matplotlib 是python最著名的绘图库，它提供了一整套和matlab相似的命令API，十分适合交互式地行制图。而且也可以方便地将它作为绘图控件，嵌入GUI应用程序中。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;优势&quot;&gt;优势&lt;/h2&gt;&lt;p&gt;作为python上最有名气的绘图库:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Matlab的语法
    
    </summary>
    
      <category term="Python" scheme="http://peihao.space/categories/Python/"/>
    
    
      <category term="Python" scheme="http://peihao.space/tags/Python/"/>
    
      <category term="matplotlib" scheme="http://peihao.space/tags/matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>Python中的numpy</title>
    <link href="http://peihao.space/2016/03/17/numpy/"/>
    <id>http://peihao.space/2016/03/17/numpy/</id>
    <published>2016-03-17T14:23:35.000Z</published>
    <updated>2016-03-29T15:06:08.637Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/img/article/article_numpy.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Numpy&quot;&gt;Numpy&lt;/h1&gt;&lt;p&gt;&lt;em&gt;NumPy系统是Python的一种开源的数值计算扩展。这种工具可用来存储和处理大型矩阵，比Python自身的嵌套列表（nested list structure)结构要高效的多（该结构也可以用来表示矩阵（matrix））&lt;/em&gt;。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;据说NumPy将Python相当于变成一种免费的更强大的MatLab系统。&lt;/p&gt;
&lt;p&gt;NumPy（Numeric Python）提供了许多高级的数值编程工具，如：矩阵数据类型、矢量处理，以及精密的运算库。专为进行严格的数字处理而产生。多为很多大型金融公司使用，以及核心的科学计算组织如：Lawrence Livermore，NASA用其处理一些本来使用C++，Fortran或Matlab等所做的任务。&lt;/p&gt;
&lt;h1 id=&quot;多维数组&quot;&gt;多维数组&lt;/h1&gt;&lt;p&gt;多维数组的类型是：&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用numpy-array方法&quot;&gt;使用numpy.array方法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;以list或tuple变量为参数产生一维数组：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(np.array([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(np.array((&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;4.&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; type(np.array((&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &lt;span class=&quot;string&quot;&gt;&#39;numpy.ndarray&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;以list或tuple变量为元素产生二维数组：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(np.array([[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;指定数据类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如numpy.int32, numpy.int16, and numpy.float64等：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; np.array((&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;), dtype=np.int32)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用numpy.arange方法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(np.arange(&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; type(np.arange(&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &lt;span class=&quot;string&quot;&gt;&#39;numpy.ndarray&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; np.arange(&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;).reshape(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; type(np.arange(&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;).reshape(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;type &lt;span class=&quot;string&quot;&gt;&#39;numpy.ndarray&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用numpy.linspace方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如，在从1到3中产生9个数：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(np.linspace(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;          &lt;span class=&quot;number&quot;&gt;1.22222222&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.44444444&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.66666667&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.88888889&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2.11111111&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2.33333333&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2.55555556&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2.77777778&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用numpy.zeros，numpy.ones，numpy.eye&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以构造特定的矩阵&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(np.zeros((&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(np.ones((&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(np.eye(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;创建一个三维数组：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(np.ones((&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;获取数组的属性&quot;&gt;获取数组的属性&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a = np.zeros((&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a.ndim)   &lt;span class=&quot;comment&quot;&gt;#数组的维数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a.shape)  &lt;span class=&quot;comment&quot;&gt;#数组每一维的大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a.size)   &lt;span class=&quot;comment&quot;&gt;#数组的元素数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a.dtype)  &lt;span class=&quot;comment&quot;&gt;#元素类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;float64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a.itemsize)  &lt;span class=&quot;comment&quot;&gt;#每个元素所占的字节数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;数组索引，切片，赋值&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;a = np.array( [[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;]] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]) &lt;span class=&quot;comment&quot;&gt;#index从0开始&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,:] = [&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;] &lt;span class=&quot;comment&quot;&gt;#直接赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用for操作元素&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; np.linspace(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;... &lt;/span&gt;    print(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;基本的数组运算&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先构造数组a、b：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a = np.ones((&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;b = np.eye(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;数组的加减乘除&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a &amp;gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a+b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a-b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(b*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print((a*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)*(b*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;4.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;4.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(b/(a*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print((b*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)**&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;16.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;16.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用数组对象自带的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.sum() &lt;span class=&quot;comment&quot;&gt;#a的元素个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.sum(axis=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)   &lt;span class=&quot;comment&quot;&gt;#计算每一列（二维数组中类似于矩阵的列）的和&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([ &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.min()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.max()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用numpy下的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;np.sin(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ &lt;span class=&quot;number&quot;&gt;0.84147098&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;0.84147098&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ &lt;span class=&quot;number&quot;&gt;0.84147098&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;0.84147098&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;np.max(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;np.floor(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;np.exp(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ &lt;span class=&quot;number&quot;&gt;2.71828183&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;2.71828183&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ &lt;span class=&quot;number&quot;&gt;2.71828183&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;2.71828183&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;np.dot(a,a)   &lt;span class=&quot;comment&quot;&gt;##矩阵乘法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;合并数组&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用numpy下的vstack和hstack函数：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a = np.ones((&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;b = np.eye(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(np.vstack((a,b)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#顾名思义 v--vertical  垂直&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(np.hstack((a,b)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#顾名思义 h--horizonal 水平&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;看一下这两个函数有没有涉及到浅拷贝这种问题：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c = np.hstack((a,b))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;b[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，a、b中元素的改变并未影响c。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;深拷贝数组&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数组对象自带了浅拷贝和深拷贝的方法，但是一般用深拷贝多一些：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a = np.ones((&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;b = a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(b &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c = a.copy()  &lt;span class=&quot;comment&quot;&gt;#深拷贝&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;c &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;基本的矩阵运算&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;转置：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a = np.array([[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(a.transpose())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;迹：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(np.trace(a))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;numpy.linalg关于矩阵运算的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import numpy.linalg as nplg&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特征值、特征向量：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; nplg.eig(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(array([ &lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;]), array([[ &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;        ,  &lt;span class=&quot;number&quot;&gt;0.70710678&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;        , -&lt;span class=&quot;number&quot;&gt;0.70710678&lt;/span&gt;]]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;矩阵对象&quot;&gt;矩阵对象&lt;/h1&gt;&lt;p&gt;numpy模块中的矩阵对象为numpy.matrix，包括矩阵数据的处理，矩阵的计算，以及基本的统计功能，转置，可逆性等等，包括对复数的处理，均在matrix对象中。 &lt;/p&gt;
&lt;p&gt;&lt;code&gt;class numpy.matrix(data,dtype,copy)&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;返回一个矩阵，其中data为ndarray对象或者字符形式；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dtype:为data的type；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;copy:为bool类型。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a = np.matrix(&lt;span class=&quot;string&quot;&gt;&#39;1 2 7; 3 4 8; 5 6 9&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a             &lt;span class=&quot;comment&quot;&gt;#矩阵的换行必须是用分号(;)隔开，内部数据必须为字符串形式(‘ ’)，矩&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;],       &lt;span class=&quot;comment&quot;&gt;#阵的元素之间必须以空格隔开。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;b=np.array([[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x=np.matrix(b)   &lt;span class=&quot;comment&quot;&gt;#矩阵中的data可以为数组对象。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;矩阵对象的属性&quot;&gt;矩阵对象的属性&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;matrix.T transpose&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;：返回矩阵的转置矩阵&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;matrix.H hermitian (conjugate) transpose&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;：返回复数矩阵的共轭元素矩阵&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;matrix.I inverse&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;：返回矩阵的逆矩阵&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;matrix.A base array&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;：返回矩阵基于的数组&lt;/p&gt;
&lt;h2 id=&quot;矩阵对象的方法&quot;&gt;矩阵对象的方法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;all([axis, out]) :沿给定的轴判断矩阵所有元素是否为真(非0即为真)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;any([axis, out]) :沿给定轴的方向判断矩阵元素是否为真，只要一个元素为真则为真。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;argmax([axis, out]) :沿给定轴的方向返回最大元素的索引（最大元素的位置）.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;argmin([axis, out]): 沿给定轴的方向返回最小元素的索引（最小元素的位置）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;argsort([axis, kind, order]) :返回排序后的索引矩阵&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;astype(dtype[, order, casting, subok, copy]):将该矩阵数据复制，且数据类型为指定的数据类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;byteswap(inplace) Swap the bytes of the array elements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;choose(choices[, out, mode]) :根据给定的索引得到一个新的数据矩阵（索引从choices给定）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;clip(a_min, a_max[, out]) :返回新的矩阵，比给定元素大的元素为a_max，小的为a_min&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;compress(condition[, axis, out]) :返回满足条件的矩阵&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;conj() :返回复数的共轭复数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;conjugate() :返回所有复数的共轭复数元素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;copy([order]) :复制一个矩阵并赋给另外一个对象，b=a.copy()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cumprod([axis, dtype, out]) :返回沿指定轴的元素累积矩阵&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cumsum([axis, dtype, out]) :返回沿指定轴的元素累积和矩阵&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;diagonal([offset, axis1, axis2]) :返回矩阵中对角线的数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dot(b[, out]) :两个矩阵的点乘&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dump(file) :将矩阵存储为指定文件,可以通过pickle.loads()或者numpy.loads()如:a.dump(‘d:\a.txt’)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dumps() :将矩阵的数据转存为字符串.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fill(value) :将矩阵中的所有元素填充为指定的value&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;flatten([order]) :将矩阵转化为一个一维的形式，但是还是matrix对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;getA() :返回自己，但是作为ndarray返回&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;getA1()：返回一个扁平（一维）的数组（ndarray）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;getH() :返回自身的共轭复数转置矩阵&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;getI() :返回本身的逆矩阵&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;getT() :返回本身的转置矩阵&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;max([axis, out]) ：返回指定轴的最大值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mean([axis, dtype, out]) :沿给定轴方向，返回其均值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;min([axis, out]) ：返回指定轴的最小值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;nonzero() :返回非零元素的索引矩阵&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;prod([axis, dtype, out]) :返回指定轴方型上，矩阵元素的乘积.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ptp([axis, out]) :返回指定轴方向的最大值减去最小值.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;put(indices, values[, mode]) :用给定的value替换矩阵本身给定索引（indices）位置的值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ravel([order]) :返回一个数组，该数组是一维数组或平数组&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;repeat(repeats[, axis]) :重复矩阵中的元素，可以沿指定轴方向重复矩阵元素，repeats为重复次数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;reshape(shape[, order]) :改变矩阵的大小,如：reshape([2,3])&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;resize(new_shape[, refcheck]) :改变该数据的尺寸大小&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;round([decimals, out]) :返回指定精度后的矩阵，指定的位数采用四舍五入，若为1，则保留一位小数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;searchsorted(v[, side, sorter]) :搜索V在矩阵中的索引位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sort([axis, kind, order]) :对矩阵进行排序或者按轴的方向进行排序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;squeeze([axis]) :移除长度为1的轴&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;std([axis, dtype, out, ddof]) :沿指定轴的方向，返回元素的标准差.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sum([axis, dtype, out]) ：沿指定轴的方向，返回其元素的总和&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;swapaxes(axis1, axis2):交换两个轴方向上的数据.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;take(indices[, axis, out, mode]) :提取指定索引位置的数据,并以一维数组或者矩阵返回(主要取决axis)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tofile(fid[, sep, format]) :将矩阵中的数据以二进制写入到文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tolist() :将矩阵转化为列表形式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tostring([order]):将矩阵转化为python的字符串.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;trace([offset, axis1, axis2, dtype, out]):返回对角线元素之和&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;transpose(*axes) :返回矩阵的转置矩阵，不改变原有矩阵&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;var([axis, dtype, out, ddof]) ：沿指定轴方向，返回矩阵元素的方差&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;view([dtype, type]) :生成一个相同数据，但是类型为指定新类型的矩阵。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;举例&quot;&gt;举例&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a = np.asmatrix(&lt;span class=&quot;string&quot;&gt;&#39;0 2 7; 3 4 8; 5 0 9&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.all()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.all(axis=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;,  &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;]], dtype=bool)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.all(axis=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;]], dtype=bool)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Astype方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.astype(float)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[ &lt;span class=&quot;number&quot;&gt;12.&lt;/span&gt;,   &lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt;,   &lt;span class=&quot;number&quot;&gt;5.&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;number&quot;&gt;32.&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;23.&lt;/span&gt;,   &lt;span class=&quot;number&quot;&gt;9.&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;number&quot;&gt;10.&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;14.&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;78.&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Argsort方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a=np.matrix(&lt;span class=&quot;string&quot;&gt;&#39;12 3 5; 32 23 9; 10 -14 78&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.argsort()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Clip方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[ &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,   &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,   &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;,   &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;78&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.clip(&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cumprod方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.cumprod(axis=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[    &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,     &lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;,    &lt;span class=&quot;number&quot;&gt;180&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[    &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,    &lt;span class=&quot;number&quot;&gt;736&lt;/span&gt;,   &lt;span class=&quot;number&quot;&gt;6624&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[    &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,   -&lt;span class=&quot;number&quot;&gt;140&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;10920&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cumsum方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.cumsum(axis=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;74&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tolist方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;b.tolist()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;78&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tofile方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;b.tofile(&lt;span class=&quot;string&quot;&gt;&#39;d:\\b.txt&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;compress()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a = array([&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;condition = (a &amp;gt; &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;) &amp;amp; (a &amp;lt; &lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;condition&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;], dtype=bool)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a.compress(condition)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;a[condition]                                      &lt;span class=&quot;comment&quot;&gt;# same effect&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;compress(a &amp;gt;= &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, a)                              &lt;span class=&quot;comment&quot;&gt;# this form a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;so exists&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;b = array([[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;b.compress(b.ravel() &amp;gt;= &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x = array([&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;y = array([&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;101&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;b.compress(x &amp;gt;= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, axis=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)                       &lt;span class=&quot;comment&quot;&gt;# illustrates &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;the use of the axis keyword&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;b.compress(y &amp;gt;= &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, axis=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/article/article_numpy.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Numpy&quot;&gt;Numpy&lt;/h1&gt;&lt;p&gt;&lt;em&gt;NumPy系统是Python的一种开源的数值计算扩展。这种工具可用来存储和处理大型矩阵，比Python自身的嵌套列表（nested list structure)结构要高效的多（该结构也可以用来表示矩阵（matrix））&lt;/em&gt;。
    
    </summary>
    
      <category term="Python" scheme="http://peihao.space/categories/Python/"/>
    
    
      <category term="Numpy" scheme="http://peihao.space/tags/Numpy/"/>
    
      <category term="Python" scheme="http://peihao.space/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>洗白BT文件</title>
    <link href="http://peihao.space/2016/03/16/alter_torrent/"/>
    <id>http://peihao.space/2016/03/16/alter_torrent/</id>
    <published>2016-03-16T14:23:35.000Z</published>
    <updated>2016-04-05T12:55:46.042Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://www.bt.com.au/images/homepage/panotile001.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;写在前面&quot;&gt;写在前面&lt;/h1&gt;&lt;p&gt;接着上篇文章，&lt;a href=&quot;/2016/03/14/torrent/&quot;&gt;torrent文件编码&lt;/a&gt;.在&lt;code&gt;torrent文件编码&lt;/code&gt;这篇文章的开始我就说过，种子文件对于青年男士有着巨大的诱惑力。我也不例外，由于国内文化教育方面抓的比较紧，所以某些领域的文件信息无法通过种子文件离线下载、进入高速通道。这个实现的原理很简单，直接通过扫描种子文件的tracker、服务器地址显然不可取，那就遍历&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;torrent包含的文件名吧，这些文件往往会有很多露骨的字眼，净网行动进行了这么多年，文化教育领域对付这一套显然很有心得。&lt;/p&gt;
&lt;p&gt;下面我们就先看一下torrent文件包含的文件吧，当然不是通过BT下载器：）&lt;/p&gt;
&lt;h1 id=&quot;libtorrent&quot;&gt;libtorrent&lt;/h1&gt;&lt;p&gt;不造轮子，从我做起。网络上已经有大牛们制作的torrent库，其中最流行的应该就是libtorrent。  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;LibTorrent 是一个C++ 语言的 BitTorrent 开发库，支持 Linux/Unix 系统。旨在提供高性能和良好代码风格的 BT 开发包。该开发包与其他包不同的是，它直接通过网络堆栈抓取文件页，因此性能是官方客户端的三倍。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;libtorrent的python版本：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Building the libtorrent python bindings will produce a shared library (DLL) which is a python module that can be imported in a python program.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;libtorrent API的中文翻译&lt;a href=&quot;http://ksharpdabu.ctfile.com/file/18920987&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;戳这里&lt;/a&gt;,当然没有python版本的API文件，不过既然已经安装了libtorrent的python binding，熟悉C++的API也是必做的一步。有条件的筒子们还是建议去读英文版的API吧&lt;a href=&quot;http://www.libtorrent.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Here&lt;/a&gt;，虽然我也不知道为什么这样推荐。&lt;/p&gt;
&lt;h1 id=&quot;torrent_info&quot;&gt;torrent_info&lt;/h1&gt;&lt;p&gt;上篇文章已经介绍了torrent文件包含的基本结构，一般来讲，简单的torrent文件有以下内容:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;info&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;包含文件的信息files、torrent显示的文件名name、发行商publisher-url。注意这里torrent文件名并不是那个我们可以简单通过重命名定义的name，而是torrent指向的那个大的文件或者文件夹名。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;comment&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;种子文件的注释&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;encoding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前一般为utf-8&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;creation date&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该关键字对应的值存放的是种子文件创建的时间&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;announce-list&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;存放的是备用Tracker的URL&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;created by&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;值存放生成种子文件的BT客户端软件的信息，如客户端名、版本号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;包含一系列ip和相应端口的列表，是用于连接DHT初始node。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;announce&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tracker的URL&lt;/p&gt;
&lt;p&gt;其中我们最常用的信息就是&lt;code&gt;info&lt;/code&gt;字段，里面包含我们需要的大部分信息。&lt;/p&gt;
&lt;p&gt;种子文件分为单文件种子以及多文件种子：&lt;/p&gt;
&lt;h2 id=&quot;单文件&quot;&gt;单文件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要下载的文件名字&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;length&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要下载文件的大小（单位为byte）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;piece length&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要下载文件按照piece length指定大小分片，此处指明单个分片大小。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pieces&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;存储每个分片的SHA1值(每个SHA1的hash长度为20byte)&lt;/p&gt;
&lt;h2 id=&quot;多文件&quot;&gt;多文件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;files  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;表示该torrent为多文件形式，每个文件都是dictionary类型数据表示。 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;表示多个文件存储在以name命名的文件夹。 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;length&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要下载文件的大小（单位为byte） &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;path&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指出要下载文件存储相对于name字段表示的文件夹的位置。    &lt;/p&gt;
&lt;p&gt;假设name为dir1，此时： &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;如果path值为file1.rmvb，表示file1.rmvb的存储路径为dir1\file1.rmvb  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果path值为dir2\file1.rmvb，表示file1.rmvb的存储路径为dir1\dir2\file1.rmvb&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;piece length&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要下载文件安装piece length指定大小分片，此处指明单个分片大小。 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pieces&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;存储每个分片的SHA1值（每个SHA1的hash长度为20字节）&lt;/p&gt;
&lt;p&gt;下面是子啊python下使用libtorrent库对torrent文件的操作:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; libtorrent &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; lt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bt=lt.torrent_info(filepath)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bt.files()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#返回一个包含文件的列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bt.nodes()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#返回DHT初始node&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bt.name()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#返回torrent文件名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bt.pieces()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#分片SHA1值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;洗白&quot;&gt;洗白&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;s= lt.bdecode(open(filepath, &lt;span class=&quot;string&quot;&gt;&#39;rb&#39;&lt;/span&gt;).read())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#通过对应的解码算法获取torrent文件的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 修改说明文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; s:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(re.findall(&lt;span class=&quot;string&quot;&gt;&#39;comment.*?&#39;&lt;/span&gt;,item)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s[item]=str(s[item].__hash__())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#修改torrent文件名，保持了原来的文件格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;alertFileName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dic)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dic:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(re.findall(&lt;span class=&quot;string&quot;&gt;&#39;(name).*?&#39;&lt;/span&gt;,i)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; dic[i].find(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;)&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        dic[i]=&lt;span class=&quot;string&quot;&gt;&#39;[peihao.space]&#39;&lt;/span&gt;+str(&lt;span class=&quot;string&quot;&gt;b&#39;x&#39;&lt;/span&gt;)+str(path.__hash__())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tem=dic[i].split(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tem[len(tem)-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]=(re.findall(&lt;span class=&quot;string&quot;&gt;&#39;(\w+).*?&#39;&lt;/span&gt;,tem[len(tem)-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]))[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dic[i]=&lt;span class=&quot;string&quot;&gt;&#39;[peihao.space]&#39;&lt;/span&gt;+str(&lt;span class=&quot;string&quot;&gt;b&#39;a&#39;&lt;/span&gt;)+str(tem[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].__hash__())+&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;+tem[len(tem)-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#判断种子文件是否是多文件结构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isMultiFiles&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dict)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dict[&lt;span class=&quot;string&quot;&gt;&#39;info&#39;&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i==&lt;span class=&quot;string&quot;&gt;&#39;files&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#深度修改所有包含文件的名字 并保持原有文件格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deepSetFilesName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dict)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dict:&lt;span class=&quot;comment&quot;&gt;#item是一个个包含文件信息的序列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; info &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; item:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(re.findall(&lt;span class=&quot;string&quot;&gt;&#39;(path).*?&#39;&lt;/span&gt;,info)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,len(item[info])):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    path=item[info][i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; path.find(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;)&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        item[info][i]=&lt;span class=&quot;string&quot;&gt;&#39;[peihao.space]&#39;&lt;/span&gt;+str(&lt;span class=&quot;string&quot;&gt;b&#39;x&#39;&lt;/span&gt;)+str(path.__hash__())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        tem=path.split(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        tem[len(tem)-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]=(re.findall(&lt;span class=&quot;string&quot;&gt;&#39;(\w+).*?&#39;&lt;/span&gt;,tem[len(tem)-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]))[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        item[info][i]=&lt;span class=&quot;string&quot;&gt;&#39;[peihao.space]&#39;&lt;/span&gt;+str(&lt;span class=&quot;string&quot;&gt;b&#39;a&#39;&lt;/span&gt;)+str(tem[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].__hash__())+&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;+tem[len(tem)-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 种子转磁力链&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bt2mag&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(name)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bt=lt.torrent_info(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;magnet:?xt=urn:btih:%s&amp;amp;dn=%s&quot;&lt;/span&gt; % (bt.info_hash(), bt.name())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;效果&quot;&gt;效果&lt;/h1&gt;&lt;p&gt;将生成的种子洗白程序用Tk造了一个壳子，效果如下&lt;/p&gt;
&lt;p&gt;原来的torrent内容:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/torrent1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;generate之后内容:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/torrent2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.jianguoyun.com/p/DU66dOgQpYz2BRi_0RI&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;程序下载戳这里1&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://drive.google.com/file/d/0B-dTuxrWHzSzNldSeGkyS09UZ28/view?usp=sharing&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;或者这里:)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有多个版本python时，使用各自版本的Script一定要注意，像如果我要使用&lt;code&gt;pyinstaller&lt;/code&gt;这个软件生成exe，最好在环境变量中先将想使用的有关python版本的路径放置在最前面&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pyinstaller -i=favicon.ico -F -w torrent.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为这里不止要保证pyinstaller的版本正确（可以用 绝对路径/pyinstaller.exe确认），隐式的python版本没办法显式设定，所以把在环境变量中的路径先更新，使用完之后在还原即可。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://www.bt.com.au/images/homepage/panotile001.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;写在前面&quot;&gt;写在前面&lt;/h1&gt;&lt;p&gt;接着上篇文章，&lt;a href=&quot;/2016/03/14/torrent/&quot;&gt;torrent文件编码&lt;/a&gt;.在&lt;code&gt;torrent文件编码&lt;/code&gt;这篇文章的开始我就说过，种子文件对于青年男士有着巨大的诱惑力。我也不例外，由于国内文化教育方面抓的比较紧，所以某些领域的文件信息无法通过种子文件离线下载、进入高速通道。这个实现的原理很简单，直接通过扫描种子文件的tracker、服务器地址显然不可取，那就遍历
    
    </summary>
    
      <category term="torrent" scheme="http://peihao.space/categories/torrent/"/>
    
    
      <category term="torrent" scheme="http://peihao.space/tags/torrent/"/>
    
      <category term="编码" scheme="http://peihao.space/tags/%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>torrent文件编码</title>
    <link href="http://peihao.space/2016/03/14/torrent/"/>
    <id>http://peihao.space/2016/03/14/torrent/</id>
    <published>2016-03-14T14:23:35.000Z</published>
    <updated>2016-03-16T07:01:57.107Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://img1.mydrivers.com/img/20150517/008c977d53a449319839b62734ab656b.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Torrent小记&quot;&gt;Torrent小记&lt;/h1&gt;&lt;p&gt;由于某些众所周知的原因，我对torrent文件(也就是我们常说的种子文件)产生了浓厚的兴趣，这里是官方百科对torrent文件的定义：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;torrent文件本质上是文本文件，包含Tracker信息和文件信息两部分。Tracker信息主要是BT下载中需要用到的Tracker服务器的地址和针对Tracker服务器的设置，文件信息是根据对目标文件的计算生成的，计算结果根据BitTorrent协议内的B编码规则进行编码。所以，torrent文件就是被下载文件的“索引”。&lt;/em&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;既然是文本文件，使用文本编辑器，意料之中的失败，打开之后是大片大片的乱码，当然主要是中文乱码… 数字以及字母信息还是显示的相当完整的。也许当我打开一个纯英文Tracker信息的torrent文件时，就可以很清楚的了解其中的内容了。现在先来看一下torrent文件的编码格式.&lt;/p&gt;
&lt;h1 id=&quot;bencoding编码&quot;&gt;bencoding编码&lt;/h1&gt;&lt;p&gt;BT种子文件使用了一种叫bencoding的编码方法来保存数据。&lt;/p&gt;
&lt;p&gt;bencoding现有四种类型的数据：&lt;code&gt;srings&lt;/code&gt;(字符串)，&lt;code&gt;integers&lt;/code&gt;(整数)，&lt;code&gt;lists&lt;/code&gt;(列表)，&lt;code&gt;dictionaries&lt;/code&gt;(字典)&lt;/p&gt;
&lt;p&gt;编码规则如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;strings(字符串)&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;编码为：&amp;lt;字符串长度&amp;gt;：&amp;lt;字符串&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;例如： &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:test 表示为字符串&lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:例子 表示为字符串“例子”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;字符串长度单位为字节&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;没开始或结束标记&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;integers(整数)&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;编码为：i&amp;lt;整数&amp;gt;e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;开始标记i，结束标记为e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;例如： &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i1234e 表示为整数&lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i-&lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt;e 表示为整数-&lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;整数没有大小限制&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i0e 表示为整数&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i-&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;e 为非法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;以&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;开头的为非法如： i01234e 为非法&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;lists(列表)&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;编码为：&lt;span class=&quot;keyword&quot;&gt;l&lt;/span&gt;&amp;lt;bencoding编码类型&amp;gt;&lt;span class=&quot;literal&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;开始标记为&lt;span class=&quot;keyword&quot;&gt;l&lt;/span&gt;,结束标记为&lt;span class=&quot;literal&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;列表里可以包含任何bencoding编码类型，包括整数，字符串，列表，字典。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;例如： l4:test5abcdee 表示为二个字符串[&lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;abcde&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dictionaries(字典)&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;编码为&lt;span class=&quot;keyword&quot;&gt;d&lt;/span&gt;&amp;lt;bencoding字符串&amp;gt;&amp;lt;bencoding编码类型&amp;gt;&lt;span class=&quot;keyword&quot;&gt;e&lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;开始标记为&lt;span class=&quot;keyword&quot;&gt;d&lt;/span&gt;,结束标记为&lt;span class=&quot;literal&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;关键字必须为bencoding字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;值可以为任何bencoding编码类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;例如： d3:agei20ee 表示为&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;=20&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;d4:path3:C:\8:filename8:&lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;.txte 表示为&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;path&quot;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;C:\&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;filename&quot;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;test.txt&quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Torrent文件基本结构&quot;&gt;Torrent文件基本结构&lt;/h1&gt;&lt;p&gt;种子具体文件结构如下：&lt;/p&gt;
&lt;p&gt;全部内容必须都为bencoding编码类型。&lt;/p&gt;
&lt;p&gt;如果字典用{}表示，列表用[]表示，字符用””表示，目录类型的BT文件大致是这样的&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;announce&quot;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://btfans.3322.org:8000/announce&quot;&lt;/span&gt;   ;tracker 服务器的&lt;span class=&quot;type&quot;&gt;URL&lt;/span&gt;(字符串)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;announce-list&quot;&lt;/span&gt;=[&lt;span class=&quot;string&quot;&gt;&quot;http://..&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;http://..&quot;&lt;/span&gt;]           ;备用tracker服务器列表(列表)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;creation date&quot;&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1175204110&lt;/span&gt;                          ;种子创建的时间，&lt;span class=&quot;type&quot;&gt;Unix&lt;/span&gt;标准时间格式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;encoding&quot;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;GBK&quot;&lt;/span&gt;                                    ;编码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;comment&quot;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;备注&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;created by&quot;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;创建人信息&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;info&quot;&lt;/span&gt;=&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;files&quot;&lt;/span&gt;=[&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;filehash&quot;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;SHA1 Hash&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;length&quot;&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;168099584&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;path&quot;&lt;/span&gt;=[&lt;span class=&quot;string&quot;&gt;&quot;01.rmvb&quot;&lt;/span&gt;]&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;decorator&quot;&gt;&amp;#123;...&amp;#125;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;decorator&quot;&gt;&amp;#123;...&amp;#125;&lt;/span&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;保存目录名&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;string&quot;&gt;&quot;piece length&quot;&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;2097152&lt;/span&gt;    ；每个块的大小，单位字节(整数)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;string&quot;&gt;&quot;pieces&quot;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;每个块的SHA1 Hash的值的顺序排列(二进制格式,长度为&quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; X 块数&lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中，filehash为20个字节的二进制的SHA1 Hash&lt;/p&gt;
&lt;p&gt;需要下载文件的主要信息保存在&lt;code&gt;&amp;#39;info&amp;#39;&lt;/code&gt;值中，可以逐字解码。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img1.mydrivers.com/img/20150517/008c977d53a449319839b62734ab656b.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Torrent小记&quot;&gt;Torrent小记&lt;/h1&gt;&lt;p&gt;由于某些众所周知的原因，我对torrent文件(也就是我们常说的种子文件)产生了浓厚的兴趣，这里是官方百科对torrent文件的定义：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;torrent文件本质上是文本文件，包含Tracker信息和文件信息两部分。Tracker信息主要是BT下载中需要用到的Tracker服务器的地址和针对Tracker服务器的设置，文件信息是根据对目标文件的计算生成的，计算结果根据BitTorrent协议内的B编码规则进行编码。所以，torrent文件就是被下载文件的“索引”。&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="torrent" scheme="http://peihao.space/categories/torrent/"/>
    
    
      <category term="torrent" scheme="http://peihao.space/tags/torrent/"/>
    
      <category term="编码" scheme="http://peihao.space/tags/%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Verilog小叙(三)</title>
    <link href="http://peihao.space/2016/03/09/verilog_hdl3/"/>
    <id>http://peihao.space/2016/03/09/verilog_hdl3/</id>
    <published>2016-03-09T14:23:35.000Z</published>
    <updated>2016-03-09T05:35:46.256Z</updated>
    
    <content type="html">&lt;p&gt;好的，接着上篇文章&lt;a href=&quot;/2016/03/08/verilog_hdl2/&quot;&gt;Verilog小叙(二)&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;数据流建模&quot;&gt;数据流建模&lt;/h1&gt;&lt;p&gt;之前的介绍中，我们已经初步了解到数据流描述方式，本节对数据流的建模方式进一步讨论，主要讲述连续赋值语句、阻塞赋值语句、非阻塞赋值语句，并针对一个系统设计频率计数器的实例进行讲解。&lt;/p&gt;
&lt;h2 id=&quot;连续赋值语句&quot;&gt;连续赋值语句&lt;/h2&gt;&lt;p&gt;数据流的描述是采用连续赋值语句(assign )语句来实现的。语法如下：&lt;br&gt;&lt;code&gt;assign net_type = 表达式；&lt;/code&gt;&lt;br&gt;连续赋值语句用于组合逻辑的建模。 等式左边是wire 类型的变量。等式右边可以是常量、由运算符如逻辑运算符、算术运算符参与的表达。&lt;br&gt;如下几个实例：&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wire [3:0] Z, preset,clear; //线网说明&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;assign z = preset &amp;amp; clear; //连续赋值语句&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wire cout, cin ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wire [3:0] sum, a, bB;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. . .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;assign &amp;#123;cout,sum&amp;#125; = a + b + cin;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;assign mux = (s == 3)? d : &#39;bz;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意如下几个方面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;连续赋值语句的执行是：只要右边表达式任一个变量有变化，表达式立即被计算，计算的结果立即赋给左边信号。&lt;/li&gt;
&lt;li&gt;连续赋值语句之间是并行语句，因此与位置顺序无关。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Tips：&lt;/strong&gt;&lt;br&gt;实际电路中赋值语句的执行其实会有ps级别的延迟，这个延迟是线、门器件本身特性造成的，不过只要是同步电路，那么ps级别延迟就可以忽略不计，因为后续的寄存器是在时钟上升沿采样，ps级别延迟和一个典型的时钟周期来比，完全不用考虑。&lt;/p&gt;
&lt;h2 id=&quot;阻塞赋值语句&quot;&gt;阻塞赋值语句&lt;/h2&gt;&lt;p&gt;“=”用于阻塞的赋值，凡是在组合逻辑（如在assign 语句中）赋值的请用阻塞赋值。阻塞赋值“=”在begin 和end 之间的语句是顺序执行，属于串行语句&lt;br&gt;说明：&lt;br&gt;always语句的敏感变量如果不含有时钟，即always（*）这样描述，那么也属于组合逻辑，需要使用阻塞赋值。&lt;br&gt;一个组合逻辑的例子：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;always @(*) begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ( new_vld_after == 1&#39;b1 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port_win = new_port_after ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else if ( new_vld_before ==1&#39;b1 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port_win = new_port_before ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port_win = last_sel_port ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end//阻塞赋值在begin-end之间串行执行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;非阻塞赋值语句&quot;&gt;非阻塞赋值语句&lt;/h2&gt;&lt;p&gt;&lt;code&gt;“&amp;lt;=”&lt;/code&gt;用于阻塞的赋值，凡是在时序逻辑（如在always语句中）赋值的请用非阻塞赋值，非阻塞赋值&lt;code&gt;“&amp;lt;=”&lt;/code&gt;在&lt;code&gt;begin&lt;/code&gt;和&lt;code&gt;end&lt;/code&gt;之间的语句是并行执行，属于并行执语句。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tips：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;时序逻辑值&lt;/code&gt;的是&lt;code&gt;带有时钟的always块逻辑&lt;/code&gt;，只有always带有时钟，那么这个逻辑才能是寄存器。&lt;br&gt;一个时序逻辑的例子：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;always @(posedge sys_clk or negedge sys_rst_n) begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (sys_rst_n ==1&#39;b0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clk_cnt &amp;lt;= 26&#39;b0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clk_cnt &amp;lt;= clk_cnt + 26&#39;b1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;数据流建模具体实例&quot;&gt;数据流建模具体实例&lt;/h2&gt;&lt;p&gt;以上面的频率计数器为例，其中的AND2模块我们用数据流来建模。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/top_down.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;AND2模块对应文件AND2.v 的内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;module &lt;span class=&quot;title&quot;&gt;AND2&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(A0, A1, Y)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input A0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input A1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;output Y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wire A0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wire A1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wire Y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;assign Y = A0 &amp;amp; A1;&lt;span class=&quot;comment&quot;&gt;//连续赋值语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;行为建模&quot;&gt;行为建模&lt;/h1&gt;&lt;p&gt;在第四节中，我们已经对行为描述方式有个概念，这里对行为建模进一步的描述，并通过一个系统设计频率计数器加以巩固。&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;&lt;p&gt;行为建模方式是通过对设计的行为的描述来实现对设计建模，一般是指用过程赋值语句（&lt;code&gt;initial&lt;/code&gt;语句和&lt;code&gt;always&lt;/code&gt;语句）来设计的称为行为建模。&lt;/p&gt;
&lt;h2 id=&quot;顺序语句块&quot;&gt;顺序语句块&lt;/h2&gt;&lt;p&gt;语句块提供将两条或更多条语句组合成语法结构上相当于一条语句的机制。这里主要讲Verilog HDL的顺序语句块(begin . . . end)：语句块中的语句按给定次序顺序执行。&lt;br&gt;顺序语句块中的语句按顺序方式执行。每条语句中的时延值与其前面的语句执行的模拟时间相关。一旦顺序语句块执行结束，跟随顺序语句块过程的下一条语句继续执行。顺序语句块的语法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;begin [:block_id&amp;#123;declarations&amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;procedural_statement (s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 产生波形:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; Stream = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; Stream = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; Stream = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; Stream = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; Stream = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; Stream = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;假定顺序语句块在第10个时间单位开始执行。两个时间单位后第1条语句执行，即第12个时间单位。此执行完成后，下1条语句在第17个时间单位执行(延迟5 个时间单位)。然后下1条语句在第20个时间单位执行，以此类推。该顺序语句块执行过程中产生的波形如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/verilog_stream.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;过程赋值语句&quot;&gt;过程赋值语句&lt;/h2&gt;&lt;p&gt;Verilog HDL中提供两种过程赋值语句initial和always语句，用这两种语句来实现行为的建模。这两种语句之间的执行是并行的，即语句的执行与位置顺序无关。这两种语句通常与语句块（begin ….end）相结合，则语句块中的执行是按顺序执行的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;initial 语句&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;initial语句只执行一次，即在设计被开始模拟执行时开始（0时刻）。&lt;em&gt;通常只用在对设计进行仿真的测试文件中，用于对一些信号进行初始化和产生特定的信号波形&lt;/em&gt;。&lt;br&gt;语法如下：（大家只要先有个概念就可以）&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;initial&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[timing_control] procedural_statement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;procedural_statement 是下列语句之一：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;procedural_assignment(blocking or non-blocking) &lt;span class=&quot;comment&quot;&gt;//阻塞或非阻塞性过程赋值语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;procedural_continuous_assignment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conditional_statement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;case_statement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;loop_statement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wait_statement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;disable_statement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;event_trigger&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;task_enable&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(user or system)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例子如上产生一个信号波形：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;initial&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; Stream = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; Stream = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; Stream = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; Stream = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; Stream = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; Stream = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说明：&lt;br&gt;initial只能使用在仿真中，是不可综合语法，很多初学者在开始的时候以为initial是可以综合的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;always 语句&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;always语句与initial语句相反，是被重复执行，执行机制是通过对一个称为敏感变量表的&lt;strong&gt;事件驱动&lt;/strong&gt;来实现的，下面会具体讲到。always 语句可实现组合逻辑或时序逻辑的建模。&lt;br&gt;例子1：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;initial&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clk = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;always&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; clk = ~clk；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为always 语句是重复执行的，因此，clk是初始值为0 的，周期为10 的方波。&lt;br&gt;例子2： D触发器&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//并行执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;always @ ( posedge clk or negedge rst ) begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; （ rst == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;’b0 ）&lt;span class=&quot;comment&quot;&gt;//当rst为0时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		q &amp;lt;= ‘ b &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		q &amp;lt;= d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面&lt;em&gt;括号内的内容称为敏感变量&lt;/em&gt;，即整个always 语句当敏感变量有变化时被执行，否则不执行。因此，当rst为0时，q被复位，在时钟上升沿时，d被采样到q。&lt;/p&gt;
&lt;p&gt;例子3： 2选一的分配器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;always @( sel ，a ，b）&lt;/code&gt;&lt;br&gt;&lt;code&gt;c = sel ? a ：b；&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里的sel ，a，b 同样称为敏感变量，当三者之一有变化时，always 被执行，当sel 为 1 ，c被赋值为a ，否则为b 。描述的是一个组合逻辑 mux 器件。&lt;br&gt;说明：&lt;br&gt;Verilog 2001语法定义敏感变量可以使用“*”代替，&lt;br&gt;例子3的2 选一的分配器可以这样写：：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;always @&lt;span class=&quot;comment&quot;&gt;(*）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = sel ? a ：b；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;此处强烈建议大家使用*替代敏感变量，减少错误发生。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对&lt;strong&gt;组合逻辑&lt;/strong&gt;的always 语句，敏感变量建议使用*替代。&lt;/li&gt;
&lt;li&gt;对组合逻辑器件的赋值采用阻塞赋值 “=”。&lt;/li&gt;
&lt;li&gt;时序逻辑器件的赋值语句采用非阻塞赋值 “&amp;lt;=”；&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;状态机&quot;&gt;状态机&lt;/h1&gt;&lt;p&gt;有限状态机英文名字，&lt;em&gt;Finite State Machine&lt;/em&gt;，简称状态机，缩写为FSM。&lt;/p&gt;
&lt;p&gt;有限状态机是指输出取决于过去输入部分和当前输入部分的时序逻辑电路。有限状态机又可以认为是组合逻辑和寄存器逻辑的一种组合。状态机特别适合描述那些发生有先后顺序或者有逻辑规律的事情，其实这就是状态机的本质。状态机就是对具有逻辑顺序或时序规律的事件进行描述的一种方法&lt;/p&gt;
&lt;p&gt;根据状态机的输出是否与输入条件相关，可将状态机分为两大类，即摩尔 (Moore) 型状态机和米勒 (Mealy) 型状态机。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Mealy状态机：时序逻辑的输出不仅取决于当前状态，还取决于输入。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Moore状态机：时序逻辑的输出只取决于当前。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据实际写法，状态机还可以分为一段式、二段式和三段式状态机。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;一段式： 把整个状态机写在一个always模块中， 并且这个模块既包含状态转移，又含有组合逻辑输入 /输出 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;二段式： 状态切换用时序逻辑，次态输出和信号输出用组合逻辑。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;三段式： 状态切换用时序逻辑，次态输出用组合逻辑，信号输出用时序逻辑。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tips：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实际应用中三段式使用最多，也最为可靠，避免了状态和输入输出的干扰，推荐大家使用第三种写法，我们实际项目中基本全部是第三种写法。本文也着重讲解三段式。&lt;/p&gt;
&lt;h2 id=&quot;Mealy状态机&quot;&gt;Mealy状态机&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下一个状态 = F(当前状态，输入信号)； &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输出信号 = G(当前状态，输入信号)；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/mealy.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Moore状态机&quot;&gt;Moore状态机&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下一个状态 = F(当前状态，输入信号)； &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输出信号 = G(当前状态)；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xowaa.com1.z0.glb.clouddn.com/moore.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;三段式状态机&quot;&gt;三段式状态机&lt;/h2&gt;&lt;p&gt;两段式直接采用组合逻辑输出，而三段式则通过在组合逻辑后再增加一级寄存器来实现时序逻辑输出。这样做的好处是可以有效地滤去租个逻辑输出的毛刺，同时可以有效地进行时序计算与约束，另外对于总线形式的输出信号来说，容易使总线数据对齐，从而减小总线数据间的偏移，减小接收端数据采样出错的频率。&lt;br&gt;三段式状态机的基本格式是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;第一个always语句实现同步状态跳转；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第二个always语句实现组合逻辑；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第三个always语句实现同步输出。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Verilog描述状态机需要注意的事项：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;定义模块名和输入出端口；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;定义输入、输出变量或寄存器；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;定义时钟和复位信号；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;定义状态变量和状态寄存器；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用时钟沿触发的&lt;code&gt;always&lt;/code&gt;块表示状态转移过程；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在复位信号有效时给状态寄存器赋初始值；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;描述状态的转换过程：符合条件，从一个状态到另外一个状态。否则留在原状态；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;验证状态转移的正确性，必须完整和全面。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一个三段式状态机例子：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module divider7_fsm (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//input&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input sys_clk ,    //系统时钟&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input sys_rst_n ,  //系统复位，以n结尾-低为有效&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//output&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;output reg clk_divide_7 // 七分Clock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//reg define&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reg [6:0] curr_st ; // 状态机目前的状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reg [6:0] next_st ; // 状态机下一时刻状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reg clk_divide_7 ; // 时钟七分频&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//wire define&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//parameter define&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//one hot code design&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parameter S0 = 7&#39;b0000000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parameter S1 = 7&#39;b0000001;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parameter S2 = 7&#39;b0000010;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parameter S3 = 7&#39;b0000100;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parameter S4 = 7&#39;b0001000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parameter S5 = 7&#39;b0010000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parameter S6 = 7&#39;b0100000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/********************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;** Main Program&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*********************************************/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//同步状态跳转  时钟上升沿或下降沿系统复位为低是事件驱动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;always @(posedge sys_clk or negedge sys_rst_n) begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (sys_rst_n ==1&#39;b0) begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		curr_st &amp;lt;= 7&#39;b0;//非阻塞赋值，并行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	else begin//系统时钟上升沿&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		curr_st &amp;lt;= next_st;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//实现组合逻辑&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;always @(*) begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	case (curr_st)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		S0: begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			next_st = S1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		S1: begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			next_st = S2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		S2: begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			next_st = S3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		S3: begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			next_st = S4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		S4: begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			next_st = S5;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		S5: begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			next_st = S6;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		S6: begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			next_st = S0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		default: next_st = S0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	endcase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//control divide clock offset实现同步输出&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;always @(posedge sys_clk or negedge sys_rst_n) begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (sys_rst_n ==1&#39;b0) begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		clk_divide_7 &amp;lt;= 1&#39;b0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	else if ((curr_st == S0) | (curr_st == S1) | (curr_st == S2) | (curr_st == S3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		clk_divide_7 &amp;lt;= 1&#39;b0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	else if ((curr_st == S4) | (curr_st == S5) | (curr_st == S6))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		clk_divide_7 &amp;lt;= 1&#39;b1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;endmodule&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//end of RTL code&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;本状态机采用独热码设计，简称one-hot code，独热码编码的最大优势在于状态比较时仅仅需要比较一个位，从而一定程度上简化了译码逻辑。&lt;/li&gt;
&lt;li&gt;一般状态机状态编码使用二进制编码、格雷码、独热码。 各种编码比较: 二进制编码、格雷码编码使用最少的触发器，消耗较多的组合逻辑，而独热码编码反之。独热码编码的最大优势在于状态比较时仅仅需要比较一个位，从而一定程度上简化了译码逻辑。虽然在需要表示同样的状态数时，独热编码占用较多的位，也就是消耗较多的触发器，但这些额外触发器占用的面积可与译码电路省下来的面积相抵消。 Binary（二进制编码）、gray-code（格雷码）编码使用最少的触发器，较多的组合逻辑，而one-hot（独热码）编码反之。one-hot 编码的最大优势在于状态比较时仅仅需要比较一个bit，一定程度上从而简化了比较逻辑，减少了毛刺产生的概率。另一方面，对于小型设计使用gray-code和binary编码更有效，而大型状态机使用one-hot更高效。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;行为建模具体实例&quot;&gt;行为建模具体实例&lt;/h2&gt;&lt;p&gt;以上面的LED流水灯为例，采用行为建模方法。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module LED (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//input&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input sys_clk , //系统时钟&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;input sys_rst_n , //系统复位，低电平有效&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//output&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;output reg [7:0] LED );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//Parameter define&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parameter WIDTH = 8 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parameter SIZE = 8 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parameter WIDTH2 = 18 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;parameter Para = 100000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//Reg define&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reg [SIZE-1:0] counter ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reg [WIDTH2-1:0] count ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//Wire define&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//*****************************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//** Main Program&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//*****************************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// count for add counter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;always @(posedge sys_clk or negedge sys_rst_n) begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (sys_rst_n ==1&#39;b0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		count &amp;lt;= 18&#39;b0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		count &amp;lt;= count + 18&#39;b1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// counter for delay time to LED display&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;always @(posedge sys_clk or negedge sys_rst_n) begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (sys_rst_n ==1&#39;b0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		counter &amp;lt;= 8&#39;b0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	else if ( count == Para)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		counter &amp;lt;= counter + 8&#39;b1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	else ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// ctrlLED pipeline display when counter is equal 10 or 20 ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;always @(posedge sys_clk or negedge sys_rst_n) begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (sys_rst_n ==1&#39;b0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		LED &amp;lt;= 8&#39;b0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	else begin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		case (counter)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			8&#39;d10 : LED &amp;lt;= 8&#39;b10000000 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			8&#39;d20 : LED &amp;lt;= 8&#39;b01000000 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			8&#39;d30 : LED &amp;lt;= 8&#39;b00100000 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			8&#39;d40 : LED &amp;lt;= 8&#39;b00010000 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			8&#39;d50 : LED &amp;lt;= 8&#39;b00001000 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			8&#39;d60 : LED &amp;lt;= 8&#39;b00000100 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			8&#39;d70 : LED &amp;lt;= 8&#39;b00000010 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			8&#39;d80 : LED &amp;lt;= 8&#39;b00000001 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			default : LED &amp;lt;= 8&#39;b00000000 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		endcase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;好的，接着上篇文章&lt;a href=&quot;/2016/03/08/verilog_hdl2/&quot;&gt;Verilog小叙(二)&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;数据流建模&quot;&gt;数据流建模&lt;/h1&gt;&lt;p&gt;之前的介绍中，我们已经初步了解到数据流描述方式，本节对数据流的建模方式进一步讨论，主要讲述连续赋值语句、阻塞赋值语句、非阻塞赋值语句，并针对一个系统设计频率计数器的实例进行讲解。&lt;/p&gt;
&lt;h2 id=&quot;连续赋值语句&quot;&gt;连续赋值语句&lt;/h2&gt;&lt;p&gt;数据流的描述是采用连续赋值语句(assign )语句来实现的。语法如下：&lt;br&gt;&lt;code&gt;assign net_type = 表达式；&lt;/code&gt;&lt;br&gt;连续赋值语句用于组合逻辑的建模。 等式左边是wire 类型的变量。等式右边可以是常量、由运算符如逻辑运算符、算术运算符参与的表达。&lt;br&gt;如下几个实例：&lt;/p&gt;
    
    </summary>
    
      <category term="Verilog" scheme="http://peihao.space/categories/Verilog/"/>
    
    
      <category term="Verilog HDL" scheme="http://peihao.space/tags/Verilog-HDL/"/>
    
      <category term="仿真" scheme="http://peihao.space/tags/%E4%BB%BF%E7%9C%9F/"/>
    
  </entry>
  
</feed>
